{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../task-service/task.service\";\nexport class TaskListService {\n  constructor(task_service) {\n    this.task_service = task_service;\n    this.messageSource = new BehaviorSubject('Default message');\n    this.task_list = [];\n  }\n  ngOnInit() {\n    this.getTaskList();\n  }\n  getTaskList() {\n    this.task_service.getTaskList().subscribe(data => {\n      this.task_list = data;\n    });\n  }\n  reloadTaskList() {\n    this.getTaskList();\n    console.log(\"Đã reload danh sách!\");\n  }\n  deleteTask(delete_task) {\n    if (confirm(`Are you sure to delete this task ${delete_task.name}?`)) {\n      this.task_service.deleteTask(delete_task.id).subscribe({\n        error: () => this.reloadTaskList()\n      });\n    }\n  }\n}\nTaskListService.ɵfac = function TaskListService_Factory(t) {\n  return new (t || TaskListService)(i0.ɵɵinject(i1.TaskService));\n};\nTaskListService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TaskListService,\n  factory: TaskListService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,eAAe,QAAQ,MAAM;;;AAKtC,OAAM,MAAOC,eAAe;EAK1BC,YAAoBC,YAAyB;IAAzB,iBAAY,GAAZA,YAAY;IAHxB,kBAAa,GAAG,IAAIH,eAAe,CAAC,iBAAiB,CAAC;IAC9D,cAAS,GAAW,EAAE;EAE2B;EAEjDI,QAAQ;IACN,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAA,WAAW;IACT,IAAI,CAACF,YAAY,CAACE,WAAW,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MAC/C,IAAI,CAACC,SAAS,GAAGD,IAAI;IACvB,CAAC,CAAC;EACJ;EAEAE,cAAc;IACZ,IAAI,CAACJ,WAAW,EAAE;IAClBK,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;EACrC;EAEAC,UAAU,CAACC,WAAiB;IAC1B,IAAGC,OAAO,CAAC,oCAAoCD,WAAW,CAACE,IAAI,GAAG,CAAC,EAAE;MACnE,IAAI,CAACZ,YAAY,CAACS,UAAU,CAACC,WAAW,CAACG,EAAE,CAAC,CAACV,SAAS,CAAC;QACrDW,KAAK,EAAE,MAAM,IAAI,CAACR,cAAc;OACjC,CAAC;;EAEN;;AA5BWR,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAiB,SAAfjB,eAAe;EAAAkB,YAFd;AAAM","names":["BehaviorSubject","TaskListService","constructor","task_service","ngOnInit","getTaskList","subscribe","data","task_list","reloadTaskList","console","log","deleteTask","delete_task","confirm","name","id","error","factory","providedIn"],"sourceRoot":"","sources":["E:\\WorkSpace\\MondayApp\\ClientApp\\src\\services\\task-list-service\\task-list.service.ts"],"sourcesContent":["import { Injectable, Component, OnInit } from '@angular/core';\r\nimport { TaskService } from '../task-service/task.service';\r\nimport { Task } from 'src/app/task';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TaskListService implements OnInit {\r\n\r\n  private messageSource = new BehaviorSubject('Default message');\r\n  task_list: Task[] = [];\r\n\r\n  constructor(private task_service: TaskService) { } \r\n\r\n  ngOnInit(): void {\r\n    this.getTaskList();\r\n  }\r\n\r\n  getTaskList(): void {\r\n    this.task_service.getTaskList().subscribe(data => {\r\n      this.task_list = data;\r\n    })\r\n  }\r\n\r\n  reloadTaskList(): void {\r\n    this.getTaskList();\r\n    console.log(\"Đã reload danh sách!\");\r\n  }\r\n\r\n  deleteTask(delete_task: Task): void {\r\n    if(confirm(`Are you sure to delete this task ${delete_task.name}?`)) {\r\n      this.task_service.deleteTask(delete_task.id).subscribe({\r\n        error: () => this.reloadTaskList()\r\n      })\r\n    }    \r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}