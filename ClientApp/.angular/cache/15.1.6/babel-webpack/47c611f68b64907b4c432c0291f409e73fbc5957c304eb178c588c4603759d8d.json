{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nlet GroupTaskListService = class GroupTaskListService {\n  constructor(group_task_service, task_service) {\n    this.group_task_service = group_task_service;\n    this.task_service = task_service;\n    this.group_task_list = [];\n  }\n  getGroupTaskList() {\n    this.group_task_service.getGroupTaskList().subscribe(data => {\n      this.group_task_list = data;\n    });\n  }\n  reloadList() {\n    this.getGroupTaskList();\n  }\n  deleteGroupTask(group_task) {\n    if (confirm(`Are you sure to delete Group Task: ${group_task.name}`)) {}\n  }\n};\nGroupTaskListService = __decorate([Injectable({\n  providedIn: 'root'\n})], GroupTaskListService);\nexport { GroupTaskListService };","map":{"version":3,"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAOnC,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAI/BC,YAAoBC,kBAAoC,EAAUC,YAAkB;IAAhE,uBAAkB,GAAlBD,kBAAkB;IAA4B,iBAAY,GAAZC,YAAY;IAF9E,oBAAe,GAAgB,EAAE;EAEuD;EAExFC,gBAAgB;IACd,IAAI,CAACF,kBAAkB,CAACE,gBAAgB,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MAC1D,IAAI,CAACC,eAAe,GAAGD,IAAI;IAC7B,CAAC,CAAC;EACJ;EAEAE,UAAU;IACR,IAAI,CAACJ,gBAAgB,EAAE;EACzB;EAEAK,eAAe,CAACC,UAAqB;IACnC,IAAGC,OAAO,CAAC,sCAAsCD,UAAU,CAACE,IAAI,EAAE,CAAC,EAAE;EAKvE;CACD;AAvBYZ,oBAAoB,eAHhCD,UAAU,CAAC;EACVc,UAAU,EAAE;CACb,CAAC,GACWb,oBAAoB,CAuBhC;SAvBYA,oBAAoB","names":["Injectable","GroupTaskListService","constructor","group_task_service","task_service","getGroupTaskList","subscribe","data","group_task_list","reloadList","deleteGroupTask","group_task","confirm","name","providedIn"],"sourceRoot":"","sources":["E:\\.NetCoreApp\\MondayApp\\ClientApp\\src\\services\\group-task-list-service\\group-task-list.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Grouptask } from 'src/app/grouptask';\r\nimport { GroupTaskService } from '../group-task-service/group-task.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GroupTaskListService {\r\n\r\n  group_task_list: Grouptask[] = [];\r\n\r\n  constructor(private group_task_service: GroupTaskService, private task_service: Task) { }\r\n\r\n  getGroupTaskList() {\r\n    this.group_task_service.getGroupTaskList().subscribe(data => {\r\n      this.group_task_list = data;\r\n    });\r\n  }\r\n\r\n  reloadList() {\r\n    this.getGroupTaskList();\r\n  }\r\n\r\n  deleteGroupTask(group_task: Grouptask) {\r\n    if(confirm(`Are you sure to delete Group Task: ${group_task.name}`)) {\r\n\r\n\r\n\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}