{"ast":null,"code":"import { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/tree\";\nimport * as i2 from \"@angular/material/icon\";\nimport * as i3 from \"ng-material-treetable\";\nfunction AppComponent_mat_tree_node_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-tree-node\", 4);\n    i0.ɵɵelement(1, \"button\", 5);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const node_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", node_r2.name, \" \");\n  }\n}\nfunction AppComponent_mat_tree_node_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-tree-node\", 4)(1, \"button\", 6)(2, \"mat-icon\", 7);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const node_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"aria-label\", \"Toggle \" + node_r3.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.treeControl.isExpanded(node_r3) ? \"expand_more\" : \"chevron_right\", \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", node_r3.name, \" \");\n  }\n}\nexport class AppComponent {\n  constructor() {\n    this._transformer = (node, level) => {\n      return {\n        expandable: !!node.children && node.children.length > 0,\n        name: node.name,\n        level: level\n      };\n    };\n    this.treeControl = new FlatTreeControl(node => node.level, node => node.expandable);\n    this.treeFlattener = new MatTreeFlattener(this._transformer, node => node.level, node => node.expandable, node => node.children);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n    this.hasChild = (_, node) => node.expandable;\n    this.dataSource.data = TREE_DATE;\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 6,\n  vars: 4,\n  consts: [[3, \"treeControl\", \"dataSource\"], [\"matTreeNodePadding\", \"\", 4, \"matTreeNodeDef\"], [\"matTreeNodePadding\", \"\", 4, \"matTreeNodeDef\", \"matTreeNodeDefWhen\"], [3, \"tree\", \"nodeClicked\"], [\"matTreeNodePadding\", \"\"], [\"mat-icon-button\", \"\", \"disabled\", \"\"], [\"mat-icon-button\", \"\", \"matTreeNodeToggle\", \"\"], [1, \"mat-icon-rtl-mirror\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-tree\", 0);\n      i0.ɵɵtemplate(1, AppComponent_mat_tree_node_1_Template, 3, 1, \"mat-tree-node\", 1);\n      i0.ɵɵtemplate(2, AppComponent_mat_tree_node_2_Template, 5, 3, \"mat-tree-node\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"h2\");\n      i0.ɵɵtext(4, \"Tree as Array of Nodes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"treetable\", 3);\n      i0.ɵɵlistener(\"nodeClicked\", function AppComponent_Template_treetable_nodeClicked_5_listener($event) {\n        return ctx.logNode($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"treeControl\", ctx.treeControl)(\"dataSource\", ctx.dataSource);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"matTreeNodeDefWhen\", ctx.hasChild);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"tree\", ctx.arrayOfNodesTree);\n    }\n  },\n  dependencies: [i1.MatTreeNodeDef, i1.MatTreeNodePadding, i1.MatTreeNodeToggle, i1.MatTree, i1.MatTreeNode, i2.MatIcon, i3.ɵa],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AACA,SAASA,eAAe,QAAQ,mBAAmB;AACnD,SAASC,qBAAqB,EAAEC,gBAAgB,QAAuB,wBAAwB;;;;;;;ICY7FC,wCAA6D;IAC3DA,4BAA0C;IAC1CA,YACF;IAAAA,iBAAgB;;;;IADdA,eACF;IADEA,6CACF;;;;;IACAA,wCAA6E;IAGvEA,YAEF;IAAAA,iBAAW;IAEbA,YACF;IAAAA,iBAAgB;;;;;IAP4BA,eAAyC;IAAzCA,sDAAyC;IAE/EA,eAEF;IAFEA,yGAEF;IAEFA,eACF;IADEA,6CACF;;;ADLF,OAAM,MAAOC,YAAY;EAWvBC;IARQ,iBAAY,GAAG,CAACC,IAAc,EAAEC,KAAa,KAAI;MACvD,OAAO;QACLC,UAAU,EAAE,CAAC,CAACF,IAAI,CAACG,QAAQ,IAAIH,IAAI,CAACG,QAAQ,CAACC,MAAM,GAAG,CAAC;QACvDC,IAAI,EAAEL,IAAI,CAACK,IAAI;QACfJ,KAAK,EAAEA;OACR;IACH,CAAC;IAMD,gBAAW,GAAG,IAAIP,eAAe,CAC/BM,IAAI,IAAEA,IAAI,CAACC,KAAK,EAChBD,IAAI,IAAEA,IAAI,CAACE,UAAU,CACtB;IAED,kBAAa,GAAG,IAAIN,gBAAgB,CAClC,IAAI,CAACU,YAAY,EACjBN,IAAI,IAAEA,IAAI,CAACC,KAAK,EAChBD,IAAI,IAAEA,IAAI,CAACE,UAAU,EACrBF,IAAI,IAAEA,IAAI,CAACG,QAAQ,CACpB;IAED,eAAU,GAAE,IAAIR,qBAAqB,CACnC,IAAI,CAACY,WAAW,EAAE,IAAI,CAACC,aAAa,CACrC;IAED,aAAQ,GAAG,CAACC,CAAS,EACnBT,IAAqB,KAAKA,IAAI,CAACE,UAAU;IApBzC,IAAI,CAACQ,UAAU,CAACC,IAAI,GAAGC,SAAS;EAClC;;AAbWd,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAe;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCRzBpB,mCAAgE;MAC9DA,iFAGgB;MAChBA,iFAQgB;MAClBA,iBAAW;MAEXA,0BAAI;MAAAA,sCAAsB;MAAAA,iBAAK;MAC/BA,oCAEkC;MAAhCA;QAAA,OAAeqB,mBAAe;MAAA,EAAC;MACjCrB,iBAAY;;;MApBFA,6CAA2B;MAKOA,eAAc;MAAdA,iDAAc;MAaxDA,eAAyB;MAAzBA,2CAAyB","names":["FlatTreeControl","MatTreeFlatDataSource","MatTreeFlattener","i0","AppComponent","constructor","node","level","expandable","children","length","name","_transformer","treeControl","treeFlattener","_","dataSource","data","TREE_DATE","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\DELL\\source\\repos\\MondayApp\\ClientApp\\src\\app\\app.component.ts","C:\\Users\\DELL\\source\\repos\\MondayApp\\ClientApp\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FlatTreeControl } from '@angular/cdk/tree';\r\nimport { MatTreeFlatDataSource, MatTreeFlattener, MatTreeModule } from '@angular/material/tree';\r\nimport { Node, Options } from 'ng-material-treetable';\r\n\r\ninterface FoodNode {\r\n  name: string;\r\n  children?: FoodNode[];\r\n}\r\n\r\ninterface ExampleFlatNode{\r\n  expandable: boolean;\r\n  name: string;\r\n  level: number;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n})\r\nexport class AppComponent {\r\n\r\n  \r\n  private _transformer = (node: FoodNode, level: number) => {\r\n    return {\r\n      expandable: !!node.children && node.children.length > 0,\r\n      name: node.name,\r\n      level: level,\r\n    };\r\n  };\r\n\r\n  constructor(){\r\n    this.dataSource.data = TREE_DATE;\r\n  }\r\n\r\n  treeControl = new FlatTreeControl<ExampleFlatNode>(\r\n    node=>node.level,\r\n    node=>node.expandable\r\n  );\r\n\r\n  treeFlattener = new MatTreeFlattener(\r\n    this._transformer,\r\n    node=>node.level,\r\n    node=>node.expandable,\r\n    node=>node.children\r\n  );\r\n\r\n  dataSource= new MatTreeFlatDataSource(\r\n    this.treeControl, this.treeFlattener \r\n  );\r\n\r\n  hasChild = (_: number, \r\n    node: ExampleFlatNode) => node.expandable;\r\n}\r\n","<!-- <div class=\"flex flex-col w-full bg-indigo-50 h-screen sticky top-0\">\r\n  <app-header class=\"sticky top-0 bg-indigo-50\"></app-header>\r\n  <div class=\"h-screen w-full flex\">\r\n    <div class=\"bg-white w-1/4 rounded-r-lg mr-3\">\r\n      <app-sidebar></app-sidebar>\r\n    </div>\r\n    <div class=\"w-full bg-white h-full rounded-l-lg\">\r\n      <app-boardinfo></app-boardinfo>\r\n      <app-boardcontent></app-boardcontent>\r\n    </div>\r\n  </div>\r\n</div> -->\r\n\r\n<mat-tree [treeControl]=\"treeControl\" [dataSource]=\"dataSource\">\r\n  <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\r\n    <button mat-icon-button disabled></button>\r\n    {{node.name}}\r\n  </mat-tree-node>\r\n  <mat-tree-node *matTreeNodeDef=\"let node; when: hasChild\" matTreeNodePadding>\r\n    <button mat-icon-button matTreeNodeToggle [attr.aria-label]=\"'Toggle ' + node.name\">\r\n      <mat-icon class=\"mat-icon-rtl-mirror\">\r\n        {{treeControl.isExpanded(node) ?\r\n        'expand_more' : 'chevron_right'}}\r\n      </mat-icon>\r\n    </button>\r\n    {{node.name}}\r\n  </mat-tree-node>\r\n</mat-tree>\r\n\r\n<h2>Tree as Array of Nodes</h2>\r\n<treetable\r\n  [tree]=\"arrayOfNodesTree\"\r\n  (nodeClicked)=\"logNode($event)\">\r\n</treetable>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}