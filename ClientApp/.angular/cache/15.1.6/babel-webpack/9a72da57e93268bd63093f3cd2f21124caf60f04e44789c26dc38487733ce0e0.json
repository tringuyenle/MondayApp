{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CdkDropList, CdkDrag, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { NgFor } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nlet ExpandgroupComponent = class ExpandgroupComponent {\n  changetocollapse() {\n    this.collapseeChange.emit(true);\n  }\n  drop(event) {\n    moveItemInArray(this.task_list, event.previousIndex, event.currentIndex);\n  }\n  ngOnInit() {\n    this.getTaskList();\n  }\n  constructor(task_service, formBuilder) {\n    this.task_service = task_service;\n    this.formBuilder = formBuilder;\n    this.collapsee = false;\n    this.collapseeChange = new EventEmitter();\n    this.task_list = [];\n  }\n  getTaskList() {\n    this.task_service.getTaskList().subscribe(data => {\n      this.task_list = data;\n    });\n  }\n  deleteTask(delete_task) {\n    if (confirm(`Are you sure to delete this task ${delete_task.name}?`)) {\n      this.task_service.deleteTask(delete_task.id).subscribe({\n        error: () => this.reloadList()\n      });\n    }\n  }\n  reloadList() {\n    this.getTaskList();\n  }\n  saveTask() {\n    this.task_from = this.formBuilder.group({\n      id: [''],\n      name: '',\n      parent_task: [''],\n      child_task: [[]],\n      create_by: [''],\n      create_date: [''],\n      status: ['Done']\n    });\n    const t = {\n      ...this.new_task,\n      ...this.task_from.value\n    };\n    this.task_service.createTask(t).subscribe({\n      error: () => console.log('Thêm thành công')\n    });\n    this.reloadList();\n  }\n};\n__decorate([Input()], ExpandgroupComponent.prototype, \"collapsee\", void 0);\n__decorate([Output()], ExpandgroupComponent.prototype, \"collapseeChange\", void 0);\nExpandgroupComponent = __decorate([Component({\n  selector: 'app-expandgroup',\n  templateUrl: './expandgroup.component.html',\n  styleUrls: ['./expandgroup.component.css'],\n  standalone: true,\n  imports: [CdkDropList, NgFor, CdkDrag, FormsModule, RouterModule]\n})], ExpandgroupComponent);\nexport { ExpandgroupComponent };\nfunction output() {\n  throw new Error('Function not implemented.');\n}","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,YAAY,EAAEC,KAAK,EAAUC,MAAM,QAAQ,eAAe;AAC9E,SAAqBC,WAAW,EAAEC,OAAO,EAAEC,eAAe,QAAO,wBAAwB;AACzF,SAAQC,KAAK,QAAO,iBAAiB;AAGrC,SAAiCC,WAAW,QAAQ,gBAAgB;AACpE,SAASC,YAAY,QAAQ,iBAAiB;AASvC,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAO/BC,gBAAgB;IACd,IAAI,CAACC,eAAe,CAACC,IAAI,CAAC,IAAI,CAAC;EACjC;EAEAC,IAAI,CAACC,KAA4B;IAC/BT,eAAe,CAAC,IAAI,CAACU,SAAS,EAAED,KAAK,CAACE,aAAa,EAAEF,KAAK,CAACG,YAAY,CAAC;EAC1E;EAEAC,QAAQ;IACN,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAC,YAAoBC,YAAyB,EAAUC,WAAwB;IAA3D,iBAAY,GAAZD,YAAY;IAAuB,gBAAW,GAAXC,WAAW;IAlBzD,cAAS,GAAY,KAAK;IACzB,oBAAe,GAAG,IAAItB,YAAY,EAAW;IACvD,cAAS,GAAW,EAAE;EAgB4D;EAElFmB,WAAW;IACT,IAAI,CAACE,YAAY,CAACF,WAAW,EAAE,CAACI,SAAS,CAAEC,IAAI,IAAG;MAChD,IAAI,CAACT,SAAS,GAAGS,IAAI;IACvB,CAAC,CAAC;EACJ;EAEAC,UAAU,CAACC,WAAiB;IAC1B,IAAGC,OAAO,CAAC,oCAAoCD,WAAW,CAACE,IAAI,GAAG,CAAC,EAAE;MACnE,IAAI,CAACP,YAAY,CAACI,UAAU,CAACC,WAAW,CAACG,EAAE,CAAC,CAACN,SAAS,CAAC;QACrDO,KAAK,EAAE,MAAK,IAAI,CAACC,UAAU;OAC5B,CAAC;;EAEN;EAEAA,UAAU;IACR,IAAI,CAACZ,WAAW,EAAE;EACpB;EAEAa,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACX,WAAW,CAACY,KAAK,CAAC;MACtCL,EAAE,EAAE,CAAC,EAAE,CAAC;MACRD,IAAI,EAAE,EAAE;MACRO,WAAW,EAAE,CAAC,EAAE,CAAC;MACjBC,UAAU,EAAE,CAAC,EAAE,CAAC;MAChBC,SAAS,EAAE,CAAC,EAAE,CAAC;MACfC,WAAW,EAAE,CAAC,EAAE,CAAC;MACjBC,MAAM,EAAE,CAAC,MAAM;KAChB,CAAC;IAEF,MAAMC,CAAC,GAAS;MAAC,GAAG,IAAI,CAACC,QAAQ;MAAE,GAAG,IAAI,CAACR,SAAS,CAACS;IAAK,CAAC;IAC3D,IAAI,CAACrB,YAAY,CAACsB,UAAU,CAACH,CAAC,CAAC,CAACjB,SAAS,CAAC;MACxCO,KAAK,EAAE,MAAMc,OAAO,CAACC,GAAG,CAAC,iBAAiB;KAC3C,CAAC;IAEF,IAAI,CAACd,UAAU,EAAE;EACnB;CAID;AA3DUe,YAAR7C,KAAK,EAAE,uDAA4B;AAC1B6C,YAAT5C,MAAM,EAAE,6DAA+C;AAF7CO,oBAAoB,eAPhCV,SAAS,CAAC;EACTgD,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,6BAA6B,CAAC;EAC1CC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAAChD,WAAW,EAAEG,KAAK,EAAEF,OAAO,EAAEG,WAAW,EAAEC,YAAY;CACjE,CAAC,GACWC,oBAAoB,CA4DhC;SA5DYA,oBAAoB;AA6DjC,SAAS2C,MAAM;EACb,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;AAC9C","names":["Component","EventEmitter","Input","Output","CdkDropList","CdkDrag","moveItemInArray","NgFor","FormsModule","RouterModule","ExpandgroupComponent","changetocollapse","collapseeChange","emit","drop","event","task_list","previousIndex","currentIndex","ngOnInit","getTaskList","constructor","task_service","formBuilder","subscribe","data","deleteTask","delete_task","confirm","name","id","error","reloadList","saveTask","task_from","group","parent_task","child_task","create_by","create_date","status","t","new_task","value","createTask","console","log","__decorate","selector","templateUrl","styleUrls","standalone","imports","output","Error"],"sourceRoot":"","sources":["E:\\.NetCoreApp\\MondayApp\\ClientApp\\src\\app\\group\\expandgroup\\expandgroup.component.ts"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport {CdkDragDrop, CdkDropList, CdkDrag, moveItemInArray} from '@angular/cdk/drag-drop';\r\nimport {NgFor} from '@angular/common';\r\nimport { Task } from 'src/app/task';\r\nimport { TaskService } from 'src/app/task.service';\r\nimport { FormBuilder, FormGroup, FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-expandgroup',\r\n  templateUrl: './expandgroup.component.html',\r\n  styleUrls: ['./expandgroup.component.css'],\r\n  standalone: true,\r\n  imports: [CdkDropList, NgFor, CdkDrag, FormsModule, RouterModule],\r\n})\r\nexport class ExpandgroupComponent implements OnInit {\r\n  @Input() collapsee: boolean = false;\r\n  @Output() collapseeChange = new EventEmitter<boolean>();\r\n  task_list: Task[] = [];\r\n  task_from!: FormGroup;\r\n  new_task!: Task;\r\n\r\n  changetocollapse() {\r\n    this.collapseeChange.emit(true);\r\n  }\r\n\r\n  drop(event: CdkDragDrop<string[]>) {\r\n    moveItemInArray(this.task_list, event.previousIndex, event.currentIndex);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getTaskList();\r\n  }\r\n\r\n  constructor(private task_service: TaskService, private formBuilder: FormBuilder) {}\r\n\r\n  getTaskList(): void {\r\n    this.task_service.getTaskList().subscribe( data =>{\r\n      this.task_list = data;\r\n    })\r\n  }\r\n\r\n  deleteTask(delete_task: Task): void {\r\n    if(confirm(`Are you sure to delete this task ${delete_task.name}?`)) {\r\n      this.task_service.deleteTask(delete_task.id).subscribe({\r\n        error: () =>this.reloadList()\r\n      })\r\n    }\r\n  }\r\n\r\n  reloadList(): void {\r\n    this.getTaskList();\r\n  }\r\n\r\n  saveTask() {\r\n    this.task_from = this.formBuilder.group({\r\n      id: [''],\r\n      name: '',\r\n      parent_task: [''],\r\n      child_task: [[]],\r\n      create_by: [''],\r\n      create_date: [''],\r\n      status: ['Done'],\r\n    });\r\n\r\n    const t: Task = {...this.new_task, ...this.task_from.value};\r\n    this.task_service.createTask(t).subscribe({\r\n      error: () => console.log('Thêm thành công')\r\n    });\r\n\r\n    this.reloadList();\r\n  }\r\n\r\n\r\n\r\n}\r\nfunction output() {\r\n  throw new Error('Function not implemented.');\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}