{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CdkDropList, CdkDrag, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { NgFor } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TaskListService } from 'src/services/task-list-service/task-list.service';\nimport { AddTaskService } from 'src/services/add-task-service/add-task.service';\nimport { NgIf } from '@angular/common';\nlet ExpandgroupComponent = class ExpandgroupComponent {\n  changetocollapse() {\n    this.collapseeChange.emit(true);\n  }\n  drop(event) {\n    moveItemInArray(this.task_list_service.task_list, event.previousIndex, event.currentIndex);\n  }\n  ngOnInit() {\n    this.task_list_service.getTaskList();\n    this.add_task_service.buildForm('');\n  }\n  constructor(task_list_service, add_task_service, edit) {\n    this.task_list_service = task_list_service;\n    this.add_task_service = add_task_service;\n    this.edit = edit;\n    this.collapsee = false;\n    this.collapseeChange = new EventEmitter();\n    this.edit_task_id = '';\n  }\n  editCell(task) {\n    this.edit_task_id = task.id;\n  }\n  saveCell(task) {\n    this.task_service.updateTask(task).subscribe({\n      error: () => {\n        this.edit_task_id = '';\n        console.log(\"Chỉnh sửa thành công\");\n      }\n    });\n  }\n};\n__decorate([Input()], ExpandgroupComponent.prototype, \"collapsee\", void 0);\n__decorate([Output()], ExpandgroupComponent.prototype, \"collapseeChange\", void 0);\nExpandgroupComponent = __decorate([Component({\n  selector: 'app-expandgroup',\n  templateUrl: './expandgroup.component.html',\n  styleUrls: ['./expandgroup.component.css'],\n  standalone: true,\n  imports: [CdkDropList, NgFor, CdkDrag, FormsModule, ReactiveFormsModule, NgIf],\n  providers: [TaskListService, AddTaskService]\n})], ExpandgroupComponent);\nexport { ExpandgroupComponent };\nfunction output() {\n  throw new Error('Function not implemented.');\n}","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,YAAY,EAAEC,KAAK,EAAUC,MAAM,QAAQ,eAAe;AAC9E,SAAqBC,WAAW,EAAEC,OAAO,EAAEC,eAAe,QAAO,wBAAwB;AACzF,SAAQC,KAAK,QAAO,iBAAiB;AACrC,SAAoBC,WAAW,QAAwB,gBAAgB;AACvE,SAASC,mBAAmB,QAAQ,gBAAgB;AACpD,SAASC,eAAe,QAAQ,kDAAkD;AAClF,SAASC,cAAc,QAAQ,gDAAgD;AAG/E,SAASC,IAAI,QAAQ,iBAAiB;AAW/B,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAM/BC,gBAAgB;IACd,IAAI,CAACC,eAAe,CAACC,IAAI,CAAC,IAAI,CAAC;EACjC;EAEAC,IAAI,CAACC,KAA4B;IAC/BZ,eAAe,CAAC,IAAI,CAACa,iBAAiB,CAACC,SAAS,EAAEF,KAAK,CAACG,aAAa,EAAEH,KAAK,CAACI,YAAY,CAAC;EAC5F;EAEAC,QAAQ;IACN,IAAI,CAACJ,iBAAiB,CAACK,WAAW,EAAE;IACpC,IAAI,CAACC,gBAAgB,CAACC,SAAS,CAAC,EAAE,CAAC;EACrC;EAEAC,YAAmBR,iBAAkC,EAASM,gBAAgC,EAAUG,IAAI;IAAzF,sBAAiB,GAAjBT,iBAAiB;IAA0B,qBAAgB,GAAhBM,gBAAgB;IAA0B,SAAI,GAAJG,IAAI;IAlBnG,cAAS,GAAY,KAAK;IACzB,oBAAe,GAAG,IAAI3B,YAAY,EAAW;IAEvD,iBAAY,GAAW,EAAE;EAesF;EAE/G4B,QAAQ,CAACC,IAAU;IAClB,IAAI,CAACC,YAAY,GAAGD,IAAI,CAACE,EAAE;EAC5B;EAEAC,QAAQ,CAACH,IAAU;IACjB,IAAI,CAACI,YAAY,CAACC,UAAU,CAACL,IAAI,CAAC,CAACM,SAAS,CAAC;MAC3CC,KAAK,EAAE,MAAK;QACV,IAAI,CAACN,YAAY,GAAG,EAAE;QACtBO,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACrC;KACD,CAAC;EACJ;CAED;AAjCUC,YAARtC,KAAK,EAAE,uDAA4B;AAC1BsC,YAATrC,MAAM,EAAE,6DAA+C;AAF7CU,oBAAoB,eARhCb,SAAS,CAAC;EACTyC,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,6BAA6B,CAAC;EAC1CC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAACzC,WAAW,EAAEG,KAAK,EAAEF,OAAO,EAAEG,WAAW,EAAEC,mBAAmB,EAAEG,IAAI,CAAC;EAC9EkC,SAAS,EAAE,CAACpC,eAAe,EAAEC,cAAc;CAC5C,CAAC,GACWE,oBAAoB,CAkChC;SAlCYA,oBAAoB;AAmCjC,SAASkC,MAAM;EACb,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;AAC9C","names":["Component","EventEmitter","Input","Output","CdkDropList","CdkDrag","moveItemInArray","NgFor","FormsModule","ReactiveFormsModule","TaskListService","AddTaskService","NgIf","ExpandgroupComponent","changetocollapse","collapseeChange","emit","drop","event","task_list_service","task_list","previousIndex","currentIndex","ngOnInit","getTaskList","add_task_service","buildForm","constructor","edit","editCell","task","edit_task_id","id","saveCell","task_service","updateTask","subscribe","error","console","log","__decorate","selector","templateUrl","styleUrls","standalone","imports","providers","output","Error"],"sourceRoot":"","sources":["E:\\.NetCoreApp\\MondayApp\\ClientApp\\src\\app\\group\\expandgroup\\expandgroup.component.ts"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport {CdkDragDrop, CdkDropList, CdkDrag, moveItemInArray} from '@angular/cdk/drag-drop';\r\nimport {NgFor} from '@angular/common';\r\nimport { FormGroup, FormsModule, FormControlName} from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { TaskListService } from 'src/services/task-list-service/task-list.service';\r\nimport { AddTaskService } from 'src/services/add-task-service/add-task.service';\r\nimport { Task } from 'src/app/task';\r\nimport { TaskService } from 'src/services/task-service/task.service';\r\nimport { NgIf } from '@angular/common';\r\nimport { EditTaskService } from 'src/services/edit-task-service/edit-task.service';\r\n\r\n@Component({\r\n  selector: 'app-expandgroup',\r\n  templateUrl: './expandgroup.component.html',\r\n  styleUrls: ['./expandgroup.component.css'],\r\n  standalone: true,\r\n  imports: [CdkDropList, NgFor, CdkDrag, FormsModule, ReactiveFormsModule, NgIf],\r\n  providers: [TaskListService, AddTaskService],\r\n})\r\nexport class ExpandgroupComponent implements OnInit {\r\n  @Input() collapsee: boolean = false;\r\n  @Output() collapseeChange = new EventEmitter<boolean>();\r\n\r\n  edit_task_id: string = '';\r\n\r\n  changetocollapse() {\r\n    this.collapseeChange.emit(true);\r\n  }\r\n\r\n  drop(event: CdkDragDrop<string[]>) {\r\n    moveItemInArray(this.task_list_service.task_list, event.previousIndex, event.currentIndex);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.task_list_service.getTaskList();\r\n    this.add_task_service.buildForm('');\r\n  }\r\n\r\n  constructor(public task_list_service: TaskListService, public add_task_service: AddTaskService, private edit) {}\r\n\r\n  editCell(task: Task): void {\r\n   this.edit_task_id = task.id;\r\n  }\r\n\r\n  saveCell(task: Task): void {\r\n    this.task_service.updateTask(task).subscribe({\r\n      error: () => {\r\n        this.edit_task_id = '';\r\n        console.log(\"Chỉnh sửa thành công\");\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\nfunction output() {\r\n  throw new Error('Function not implemented.');\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}