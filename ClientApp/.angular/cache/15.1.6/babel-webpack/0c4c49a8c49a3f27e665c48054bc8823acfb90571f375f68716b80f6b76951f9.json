{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TaskService {\n  constructor(http_client) {\n    this.http_client = http_client;\n    this.task_url = \"http://localhost:5157/api/Task\";\n  }\n  getTaskList() {\n    return this.http_client.get(this.task_url);\n  }\n  getOneTask(id) {\n    let temp_url = this.task_url + `/${id}`;\n    return this.http_client.get(temp_url);\n  }\n  createTask(new_task) {\n    // new_task.id = \"\";\n    // new_task.child_task = [];\n    // new_task.parent_task = \"\";\n    console.log(new_task.id);\n    return this.http_client.post(this.task_url, new_task);\n  }\n  deleteTask(id) {\n    let temp_url = this.task_url + `/${id}`;\n    return this.http_client.delete(temp_url);\n  }\n  updateTask(update_task) {\n    let temp_url = this.task_url + `/${update_task.id}`;\n    return this.http_client.put(temp_url, update_task);\n  }\n}\nTaskService.ɵfac = function TaskService_Factory(t) {\n  return new (t || TaskService)(i0.ɵɵinject(i1.HttpClient));\n};\nTaskService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TaskService,\n  factory: TaskService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,WAAW;EAItBC,YAAoBC,WAAuB;IAAvB,gBAAW,GAAXA,WAAW;IAFd,aAAQ,GAAG,gCAAgC;EAEb;EAE/CC,WAAW;IACT,OAAO,IAAI,CAACD,WAAW,CAACE,GAAG,CAAS,IAAI,CAACC,QAAQ,CAAC;EACpD;EAEAC,UAAU,CAACC,EAAiB;IAC1B,IAAIC,QAAQ,GAAG,IAAI,CAACH,QAAQ,GAAG,IAAIE,EAAE,EAAE;IAEvC,OAAO,IAAI,CAACL,WAAW,CAACE,GAAG,CAAOI,QAAQ,CAAC;EAC7C;EAEAC,UAAU,CAACC,QAAc;IACvB;IACA;IACA;IAEAC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACH,EAAE,CAAC;IAExB,OAAO,IAAI,CAACL,WAAW,CAACW,IAAI,CAAO,IAAI,CAACR,QAAQ,EAAEK,QAAQ,CAAC;EAC7D;EAEAI,UAAU,CAACP,EAAU;IACnB,IAAIC,QAAQ,GAAG,IAAI,CAACH,QAAQ,GAAG,IAAIE,EAAE,EAAE;IAEvC,OAAO,IAAI,CAACL,WAAW,CAACa,MAAM,CAAOP,QAAQ,CAAC;EAChD;EAEAQ,UAAU,CAACC,WAAiB;IAC1B,IAAIT,QAAQ,GAAG,IAAI,CAACH,QAAQ,GAAG,IAAIY,WAAW,CAACV,EAAE,EAAE;IAEnD,OAAO,IAAI,CAACL,WAAW,CAACgB,GAAG,CAAOV,QAAQ,EAAES,WAAW,CAAC;EAC1D;;AApCWjB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAmB,SAAXnB,WAAW;EAAAoB,YAFV;AAAM","names":["TaskService","constructor","http_client","getTaskList","get","task_url","getOneTask","id","temp_url","createTask","new_task","console","log","post","deleteTask","delete","updateTask","update_task","put","factory","providedIn"],"sourceRoot":"","sources":["E:\\.NetCoreApp\\MondayApp\\ClientApp\\src\\services\\task-service\\task.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Task } from '../../app/task';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TaskService {\r\n\r\n  private readonly task_url = \"http://localhost:5157/api/Task\";\r\n\r\n  constructor(private http_client: HttpClient) { }\r\n\r\n  getTaskList(): Observable<Task[]> {\r\n    return this.http_client.get<Task[]>(this.task_url);\r\n  }\r\n\r\n  getOneTask(id: string | null): Observable<Task> {\r\n    let temp_url = this.task_url + `/${id}`;\r\n\r\n    return this.http_client.get<Task>(temp_url);\r\n  }\r\n\r\n  createTask(new_task: Task): Observable<Task> {\r\n    // new_task.id = \"\";\r\n    // new_task.child_task = [];\r\n    // new_task.parent_task = \"\";\r\n\r\n    console.log(new_task.id);\r\n\r\n    return this.http_client.post<Task>(this.task_url, new_task);\r\n  }\r\n\r\n  deleteTask(id: string): Observable<Task> {\r\n    let temp_url = this.task_url + `/${id}`;\r\n\r\n    return this.http_client.delete<Task>(temp_url);\r\n  }\r\n\r\n  updateTask(update_task: Task): Observable<Task> {\r\n    let temp_url = this.task_url + `/${update_task.id}`;\r\n\r\n    return this.http_client.put<Task>(temp_url, update_task);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}