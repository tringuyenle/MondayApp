{"ast":null,"code":"import { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/sidenav\";\nimport * as i2 from \"@angular/material/button\";\nimport * as i3 from \"./header/header.component\";\nimport * as i4 from \"./boardcontent/boardcontent.component\";\nimport * as i5 from \"./boardinfo/boardinfo.component\";\nimport * as i6 from \"./sidebar/sidebar.component\";\nconst TREE_DATA = [{\n  name: 'Fruit',\n  children: [{\n    name: 'Apple'\n  }, {\n    name: 'Banana'\n  }, {\n    name: 'Fruit loops'\n  }]\n}, {\n  name: 'Vegetable',\n  children: [{\n    name: 'Green',\n    children: [{\n      name: 'Broccoli'\n    }, {\n      name: 'Brussels sprouts'\n    }]\n  }, {\n    name: 'Orange',\n    children: [{\n      name: 'Pumpkins'\n    }, {\n      name: 'Carrots'\n    }]\n  }]\n}];\nexport class AppComponent {\n  constructor() {\n    this.displayedColumns = ['name', 'level'];\n    this._transformer = (node, level) => {\n      return {\n        expandable: !!node.children && node.children.length > 0,\n        name: node.name,\n        level: level\n      };\n    };\n    this.treeControl = new FlatTreeControl(node => node.level, node => node.expandable);\n    this.treeFlattener = new MatTreeFlattener(this._transformer, node => node.level, node => node.expandable, node => node.children);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n    this.hasChild = (_, node) => node.expandable;\n    this.dataSource.data = TREE_DATA;\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 16,\n  vars: 0,\n  consts: [[1, \"flex\", \"flex-col\", \"w-full\", \"bg-indigo-50\", \"h-screen\", \"sticky\", \"top-0\"], [1, \"sticky\", \"top-0\", \"bg-indigo-50\"], [1, \"h-screen\", \"w-full\", \"flex\"], [1, \"example-container\", \"bg-white\", \"rounded-r-lg\", \"mr-3\", \"w-1\"], [\"mode\", \"side\"], [\"sidenav\", \"\"], [\"mat-button\", \"\", 1, \"px-2\", \"py-3\", \"hover:bg-slate-300\", \"rounded-tr-lg\", \"rounded-bl-lg\", \"bg-slate-50\", 3, \"click\"], [\"viewBox\", \"0 0 20 20\", \"fill\", \"currentColor\", \"width\", \"12\", \"height\", \"12\", \"role\", \"button\", \"tabindex\", \"0\", \"aria-hidden\", \"false\", \"data-testid\", \"icon\", 1, \"icon_4b23d45e02\", \"collapse-icon\", \"clickable_f2c35f1e3f\", \"noFocusStyle_cff5f5a050\"], [\"d\", \"M5.46967 10.5303L6 10L5.46967 9.46967C5.17678 9.76256 5.17678 10.2374 5.46967 10.5303ZM7.06066 10L13.5303 3.53033C13.8232 3.23744 13.8232 2.76256 13.5303 2.46967C13.2374 2.17678 12.7626 2.17678 12.4697 2.46967L5.46967 9.46967L6 10L5.46967 10.5303L12.4697 17.5303C12.7626 17.8232 13.2374 17.8232 13.5303 17.5303C13.8232 17.2374 13.8232 16.7626 13.5303 16.4697L7.06066 10Z\", \"fill\", \"currentColor\", \"fill-rule\", \"evenodd\", \"clip-rule\", \"evenodd\"], [1, \"w-full\", \"bg-white\", \"h-full\", \"rounded-l-lg\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"app-header\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"mat-sidenav-container\", 3)(4, \"mat-sidenav\", 4, 5);\n      i0.ɵɵelement(6, \"app-sidebar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"mat-sidenav-content\")(8, \"div\")(9, \"div\")(10, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_10_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(5);\n        return i0.ɵɵresetView(_r0.toggle());\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(11, \"svg\", 7);\n      i0.ɵɵelement(12, \"path\", 8);\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵnamespaceHTML();\n      i0.ɵɵelementStart(13, \"div\", 9);\n      i0.ɵɵelement(14, \"app-boardinfo\")(15, \"app-boardcontent\");\n      i0.ɵɵelementEnd()()();\n    }\n  },\n  dependencies: [i1.MatSidenav, i1.MatSidenavContainer, i1.MatSidenavContent, i2.MatButton, i3.HeaderComponent, i4.BoardcontentComponent, i5.BoardinfoComponent, i6.SidebarComponent],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AACA,SAASA,eAAe,QAAQ,mBAAmB;AACnD,SAASC,qBAAqB,EAAEC,gBAAgB,QAAuB,wBAAwB;;;;;;;;AAc/F,MAAMC,SAAS,GAAe,CAC5B;EACEC,IAAI,EAAE,OAAO;EACbC,QAAQ,EAAE,CAAC;IAACD,IAAI,EAAE;EAAO,CAAC,EAAE;IAACA,IAAI,EAAE;EAAQ,CAAC,EAAE;IAACA,IAAI,EAAE;EAAa,CAAC;CACpE,EACD;EACEA,IAAI,EAAE,WAAW;EACjBC,QAAQ,EAAE,CACR;IACED,IAAI,EAAE,OAAO;IACbC,QAAQ,EAAE,CAAC;MAACD,IAAI,EAAE;IAAU,CAAC,EAAE;MAACA,IAAI,EAAE;IAAkB,CAAC;GAC1D,EACD;IACEA,IAAI,EAAE,QAAQ;IACdC,QAAQ,EAAE,CAAC;MAACD,IAAI,EAAE;IAAU,CAAC,EAAE;MAACA,IAAI,EAAE;IAAS,CAAC;GACjD;CAEJ,CACF;AAMD,OAAM,MAAOE,YAAY;EAWvBC;IAVA,qBAAgB,GAAa,CAAC,MAAM,EAAE,OAAO,CAAC;IAEtC,iBAAY,GAAG,CAACC,IAAc,EAAEC,KAAa,KAAI;MACvD,OAAO;QACLC,UAAU,EAAE,CAAC,CAACF,IAAI,CAACH,QAAQ,IAAIG,IAAI,CAACH,QAAQ,CAACM,MAAM,GAAG,CAAC;QACvDP,IAAI,EAAEI,IAAI,CAACJ,IAAI;QACfK,KAAK,EAAEA;OACR;IACH,CAAC;IAMD,gBAAW,GAAG,IAAIT,eAAe,CAC/BQ,IAAI,IAAEA,IAAI,CAACC,KAAK,EAChBD,IAAI,IAAEA,IAAI,CAACE,UAAU,CACtB;IAED,kBAAa,GAAG,IAAIR,gBAAgB,CAClC,IAAI,CAACU,YAAY,EACjBJ,IAAI,IAAEA,IAAI,CAACC,KAAK,EAChBD,IAAI,IAAEA,IAAI,CAACE,UAAU,EACrBF,IAAI,IAAEA,IAAI,CAACH,QAAQ,CACpB;IAED,eAAU,GAAE,IAAIJ,qBAAqB,CACnC,IAAI,CAACY,WAAW,EAAE,IAAI,CAACC,aAAa,CACrC;IAED,aAAQ,GAAG,CAACC,CAAS,EACnBP,IAAqB,KAAKA,IAAI,CAACE,UAAU;IApBzC,IAAI,CAACM,UAAU,CAACC,IAAI,GAAGd,SAAS;EAClC;;AAbWG,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAY;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCxCzBC,8BAAqE;MACnEA,gCAA2D;MAC3DA,8BAAkC;MAG5BA,8BAA2B;MAC7BA,iBAAc;MACdA,2CAAqB;MAGMA;QAAAA;QAAA;QAAA,OAASA,2BAAgB;MAAA,EAAC;MACzCA,mBAAyN;MAAzNA,+BAAyN;MAAAA,2BAAgc;MAAAA,iBAAM;MAM7qBA,oBAAiD;MAAjDA,+BAAiD;MAC/CA,iCAA+B;MAEjCA,iBAAM","names":["FlatTreeControl","MatTreeFlatDataSource","MatTreeFlattener","TREE_DATA","name","children","AppComponent","constructor","node","level","expandable","length","_transformer","treeControl","treeFlattener","_","dataSource","data","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["E:\\WorkSpace\\MondayApp\\ClientApp\\src\\app\\app.component.ts","E:\\WorkSpace\\MondayApp\\ClientApp\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FlatTreeControl } from '@angular/cdk/tree';\r\nimport { MatTreeFlatDataSource, MatTreeFlattener, MatTreeModule } from '@angular/material/tree';\r\nimport { MatTableModule } from '@angular/material/table';\r\n\r\ninterface FoodNode {\r\n  name: string;\r\n  children?: FoodNode[];\r\n}\r\n\r\ninterface ExampleFlatNode{\r\n  expandable: boolean;\r\n  name: string;\r\n  level: number;\r\n}\r\n\r\nconst TREE_DATA: FoodNode[] = [\r\n  {\r\n    name: 'Fruit',\r\n    children: [{name: 'Apple'}, {name: 'Banana'}, {name: 'Fruit loops'}]\r\n  },\r\n  {\r\n    name: 'Vegetable',\r\n    children: [\r\n      {\r\n        name: 'Green',\r\n        children: [{name: 'Broccoli'}, {name: 'Brussels sprouts'}],\r\n      },\r\n      {\r\n        name: 'Orange',\r\n        children: [{name: 'Pumpkins'}, {name: 'Carrots'}],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n})\r\nexport class AppComponent {\r\n  displayedColumns: string[] = ['name', 'level'];\r\n\r\n  private _transformer = (node: FoodNode, level: number) => {\r\n    return {\r\n      expandable: !!node.children && node.children.length > 0,\r\n      name: node.name,\r\n      level: level,\r\n    };\r\n  };\r\n\r\n  constructor(){\r\n    this.dataSource.data = TREE_DATA;\r\n  }\r\n\r\n  treeControl = new FlatTreeControl<ExampleFlatNode>(\r\n    node=>node.level,\r\n    node=>node.expandable\r\n  );\r\n\r\n  treeFlattener = new MatTreeFlattener(\r\n    this._transformer,\r\n    node=>node.level,\r\n    node=>node.expandable,\r\n    node=>node.children\r\n  );\r\n\r\n  dataSource= new MatTreeFlatDataSource(\r\n    this.treeControl, this.treeFlattener \r\n  );\r\n\r\n  hasChild = (_: number, \r\n    node: ExampleFlatNode) => node.expandable;\r\n}\r\n","<div class=\"flex flex-col w-full bg-indigo-50 h-screen sticky top-0\">\r\n  <app-header class=\"sticky top-0 bg-indigo-50\"></app-header>\r\n  <div class=\"h-screen w-full flex\">\r\n    <mat-sidenav-container class=\"example-container bg-white rounded-r-lg mr-3 w-1\">\r\n      <mat-sidenav #sidenav mode=\"side\">\r\n        <app-sidebar></app-sidebar>\r\n      </mat-sidenav>\r\n      <mat-sidenav-content>\r\n        <div>\r\n          <div>\r\n              <button mat-button (click)=\"sidenav.toggle()\" class=\"px-2 py-3 hover:bg-slate-300 rounded-tr-lg rounded-bl-lg bg-slate-50\">\r\n                  <svg viewBox=\"0 0 20 20\" fill=\"currentColor\" width=\"12\" height=\"12\" role=\"button\" tabindex=\"0\" aria-hidden=\"false\" class=\"icon_4b23d45e02 collapse-icon clickable_f2c35f1e3f noFocusStyle_cff5f5a050\" data-testid=\"icon\"><path d=\"M5.46967 10.5303L6 10L5.46967 9.46967C5.17678 9.76256 5.17678 10.2374 5.46967 10.5303ZM7.06066 10L13.5303 3.53033C13.8232 3.23744 13.8232 2.76256 13.5303 2.46967C13.2374 2.17678 12.7626 2.17678 12.4697 2.46967L5.46967 9.46967L6 10L5.46967 10.5303L12.4697 17.5303C12.7626 17.8232 13.2374 17.8232 13.5303 17.5303C13.8232 17.2374 13.8232 16.7626 13.5303 16.4697L7.06066 10Z\" fill=\"currentColor\" fill-rule=\"evenodd\" clip-rule=\"evenodd\"></path></svg>\r\n              </button>\r\n          </div>\r\n      </div>\r\n      </mat-sidenav-content>\r\n    </mat-sidenav-container>\r\n    <div class=\"w-full bg-white h-full rounded-l-lg\">\r\n      <app-boardinfo></app-boardinfo>\r\n      <app-boardcontent></app-boardcontent>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}