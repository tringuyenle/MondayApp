{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../sub-task-service/sub-task.service\";\nexport class SubTaskListService {\n  ngOnInit() {\n    this.getSubTaskList();\n  }\n  constructor(sub_task_service) {\n    this.sub_task_service = sub_task_service;\n    this.sub_task_list = [];\n    this.counter = 0;\n  }\n  getSubTaskListbyParentId(parent_id) {\n    this.sub_task_service.getSubTaskList(parent_id).subscribe(data => {\n      this.sub_task_list = data;\n    });\n  }\n  getSubTaskList() {\n    this.sub_task_service.getAllSubTask().subscribe(data => {\n      this.sub_task_list = data;\n    });\n  }\n  deleteSubTask(task) {\n    if (confirm(`Are you sure to delete ${task.name}?`)) {\n      this.sub_task_service.deleteSubTask(task.id, true).subscribe({\n        error: () => this.getSubTaskList()\n      });\n    }\n  }\n  countSubTask(taskid) {\n    this.counter = 0;\n    for (let i = 0; i < this.sub_task_list.length; i++) {\n      if (this.sub_task_list[i].parent_task === groupid) {\n        this.counter++;\n      }\n    }\n    return this.counter;\n  }\n}\nSubTaskListService.ɵfac = function SubTaskListService_Factory(t) {\n  return new (t || SubTaskListService)(i0.ɵɵinject(i1.SubTaskService));\n};\nSubTaskListService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SubTaskListService,\n  factory: SubTaskListService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,kBAAkB;EAK7BC,QAAQ;IACJ,IAAI,CAACC,cAAc,EAAE;EACzB;EAEAC,YAAoBC,gBAAgC;IAAhC,qBAAgB,GAAhBA,gBAAgB;IAPpC,kBAAa,GAAW,EAAE;IAC1B,YAAO,GAAW,CAAC;EAMqC;EAExDC,wBAAwB,CAACC,SAAiB;IACxC,IAAI,CAACF,gBAAgB,CAACF,cAAc,CAACI,SAAS,CAAC,CAACC,SAAS,CAAEC,IAAI,IAAG;MAChE,IAAI,CAACC,aAAa,GAAGD,IAAI;IAC3B,CAAC,CAAC;EACJ;EAEAN,cAAc;IACZ,IAAI,CAACE,gBAAgB,CAACM,aAAa,EAAE,CAACH,SAAS,CAACC,IAAI,IAAG;MACrD,IAAI,CAACC,aAAa,GAAGD,IAAI;IAC3B,CAAC,CAAC;EACJ;EAEAG,aAAa,CAACC,IAAU;IACtB,IAAGC,OAAO,CAAC,0BAA0BD,IAAI,CAACE,IAAI,GAAG,CAAC,EAAE;MAClD,IAAI,CAACV,gBAAgB,CAACO,aAAa,CAACC,IAAI,CAACG,EAAE,EAAE,IAAI,CAAC,CAACR,SAAS,CAAC;QAC3DS,KAAK,EAAE,MAAM,IAAI,CAACd,cAAc;OACjC,CAAC;;EAEN;EAEAe,YAAY,CAACC,MAAc;IACzB,IAAI,CAACC,OAAO,GAAG,CAAC;IAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACX,aAAa,CAACY,MAAM,EAAED,CAAC,EAAE,EAAE;MAClD,IAAI,IAAI,CAACX,aAAa,CAACW,CAAC,CAAC,CAACE,WAAW,KAAKC,OAAO,EAAE;QACjD,IAAI,CAACJ,OAAO,EAAE;;;IAGlB,OAAO,IAAI,CAACA,OAAO;EACrB;;AAvCWnB,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAwB,SAAlBxB,kBAAkB;EAAAyB,YAFjB;AAAM","names":["SubTaskListService","ngOnInit","getSubTaskList","constructor","sub_task_service","getSubTaskListbyParentId","parent_id","subscribe","data","sub_task_list","getAllSubTask","deleteSubTask","task","confirm","name","id","error","countSubTask","taskid","counter","i","length","parent_task","groupid","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\DELL\\source\\repos\\MondayApp\\ClientApp\\src\\services\\sub-task-list-service\\sub-task-list.service.ts"],"sourcesContent":["import { Injectable, OnInit } from '@angular/core';\r\nimport { SubTaskService } from '../sub-task-service/sub-task.service';\r\nimport { Task } from 'src/app/task';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SubTaskListService implements OnInit{\r\n\r\n  sub_task_list: Task[] = [];\r\n  counter: number = 0;\r\n\r\n  ngOnInit(): void {\r\n      this.getSubTaskList();\r\n  }\r\n\r\n  constructor(private sub_task_service: SubTaskService) { }\r\n\r\n  getSubTaskListbyParentId(parent_id: string) {\r\n    this.sub_task_service.getSubTaskList(parent_id).subscribe( data => {\r\n      this.sub_task_list = data;\r\n    })\r\n  }\r\n\r\n  getSubTaskList() {\r\n    this.sub_task_service.getAllSubTask().subscribe(data => {\r\n      this.sub_task_list = data;\r\n    })\r\n  }\r\n\r\n  deleteSubTask(task: Task) {\r\n    if(confirm(`Are you sure to delete ${task.name}?`)) {\r\n      this.sub_task_service.deleteSubTask(task.id, true).subscribe({\r\n        error: () => this.getSubTaskList()\r\n      })\r\n    }\r\n  }\r\n\r\n  countSubTask(taskid: string): number {\r\n    this.counter = 0;\r\n    for (let i = 0; i < this.sub_task_list.length; i++) {\r\n      if (this.sub_task_list[i].parent_task === groupid) {\r\n        this.counter++;\r\n      }\r\n    }\r\n    return this.counter;\r\n  }\r\n\r\n  \r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}