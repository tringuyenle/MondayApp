{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CdkDropList, CdkDrag, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { CdkListbox, CdkOption } from '@angular/cdk/listbox';\nimport { NgFor, JsonPipe } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TaskListService } from 'src/services/task-list-service/task-list.service';\nimport { AddTaskService } from 'src/services/add-task-service/add-task.service';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { DatePickerComponent } from 'src/app/date-picker/date-picker.component';\nimport { BrowserModule } from '@angular/platform-browser';\nlet ExpandgroupComponent = class ExpandgroupComponent {\n  // constructor(private i18n: NzI18nService) {}\n  onChange(result) {\n    console.log('onChange: ', result);\n  }\n  changetocollapse() {\n    this.collapseeChange.emit(true);\n  }\n  drop(event) {\n    moveItemInArray(this.task_list_service.task_list, event.previousIndex, event.currentIndex);\n  }\n  ngOnInit() {\n    this.task_list_service.getTaskList();\n    this.add_task_service.buildForm('');\n    this.initDate();\n    this.getNoOfDays();\n  }\n  constructor(task_list_service, add_task_service) {\n    this.task_list_service = task_list_service;\n    this.add_task_service = add_task_service;\n    this.collapsee = false;\n    this.collapseeChange = new EventEmitter();\n    this.task_list = [];\n    this.MONTH_NAMES = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    this.DAYS = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    this.days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    this.showDatepicker = false;\n    this.no_of_days = [];\n    this.blankdays = [];\n    this.trackByIdentity = (index, item) => item;\n  }\n  initDate() {\n    let today = new Date();\n    this.month = today.getMonth();\n    this.year = today.getFullYear();\n    this.datepickerValue = new Date(this.year, this.month, today.getDate()).toDateString();\n  }\n  isToday(date) {\n    const today = new Date();\n    const d = new Date(this.year, this.month, date);\n    return today.toDateString() === d.toDateString() ? true : false;\n  }\n  getDateValue(date) {\n    let selectedDate = new Date(this.year, this.month, date);\n    this.datepickerValue = selectedDate.toDateString();\n    this.showDatepicker = false;\n  }\n  getNoOfDays() {\n    const daysInMonth = new Date(this.year, this.month + 1, 0).getDate();\n    // find where to start calendar day of week\n    let dayOfWeek = new Date(this.year, this.month).getDay();\n    let blankdaysArray = [];\n    for (var i = 1; i <= dayOfWeek; i++) {\n      blankdaysArray.push(i);\n    }\n    let daysArray = [];\n    for (var i = 1; i <= daysInMonth; i++) {\n      daysArray.push(i);\n    }\n    this.blankdays = blankdaysArray;\n    this.no_of_days = daysArray;\n  }\n};\n__decorate([Input()], ExpandgroupComponent.prototype, \"collapsee\", void 0);\n__decorate([Output()], ExpandgroupComponent.prototype, \"collapseeChange\", void 0);\nExpandgroupComponent = __decorate([Component({\n  selector: 'app-expandgroup',\n  templateUrl: './expandgroup.component.html',\n  styleUrls: ['./expandgroup.component.css'],\n  standalone: true,\n  imports: [FormsModule, BrowserModule, DatePickerComponent, CdkDropList, NgFor, CdkDrag, FormsModule, ReactiveFormsModule, CdkListbox, CdkOption, JsonPipe, MatDatepickerModule],\n  providers: [TaskListService, AddTaskService]\n})], ExpandgroupComponent);\nexport { ExpandgroupComponent };\nfunction output() {\n  throw new Error('Function not implemented.');\n}","map":{"version":3,"mappings":"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","names":["Component","EventEmitter","Input","Output","CdkDropList","CdkDrag","moveItemInArray","CdkListbox","CdkOption","NgFor","JsonPipe","FormsModule","ReactiveFormsModule","TaskListService","AddTaskService","MatDatepickerModule","DatePickerComponent","BrowserModule","ExpandgroupComponent","onChange","result","console","log","changetocollapse","collapseeChange","emit","drop","event","task_list_service","task_list","previousIndex","currentIndex","ngOnInit","getTaskList","add_task_service","buildForm","initDate","getNoOfDays","constructor","index","item","today","Date","month","getMonth","year","getFullYear","datepickerValue","getDate","toDateString","isToday","date","d","getDateValue","selectedDate","showDatepicker","daysInMonth","dayOfWeek","getDay","blankdaysArray","i","push","daysArray","blankdays","no_of_days","__decorate","selector","templateUrl","styleUrls","standalone","imports","providers","output","Error"],"sourceRoot":"","sources":["C:\\Users\\DELL\\source\\repos\\MondayApp\\ClientApp\\src\\app\\group\\expandgroup\\expandgroup.component.ts"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Inject,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatCalendar} from '@angular/material/datepicker';\r\nimport {\r\n  DateAdapter,\r\n  MAT_DATE_FORMATS,\r\n  MatDateFormats,\r\n  MatNativeDateModule,\r\n} from '@angular/material/core';\r\nimport {Subject} from 'rxjs';\r\nimport {takeUntil} from 'rxjs/operators';\r\nimport {CdkDragDrop, CdkDropList, CdkDrag, moveItemInArray} from '@angular/cdk/drag-drop';\r\nimport {CdkListbox, CdkOption} from '@angular/cdk/listbox';\r\nimport {NgFor, JsonPipe} from '@angular/common';\r\nimport { Task } from 'src/app/task';\r\nimport { TaskService } from 'src/services/task-service/task.service';\r\nimport { FormBuilder, FormGroup, FormsModule, FormControlName, FormControl } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { TaskListService } from 'src/services/task-list-service/task-list.service';\r\nimport { AddTaskService } from 'src/services/add-task-service/add-task.service';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { getISOWeek } from 'date-fns';\r\nimport { DatePickerComponent } from 'src/app/date-picker/date-picker.component';\r\nimport { en_US, NzI18nService, zh_CN } from 'ng-zorro-antd/i18n';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\n\r\n@Component({\r\n  selector: 'app-expandgroup',\r\n  templateUrl: './expandgroup.component.html',\r\n  styleUrls: ['./expandgroup.component.css'],\r\n  standalone: true,\r\n  imports: [FormsModule, BrowserModule, DatePickerComponent, CdkDropList, NgFor, CdkDrag, FormsModule, ReactiveFormsModule, CdkListbox, CdkOption, JsonPipe, MatDatepickerModule],\r\n  providers: [TaskListService, AddTaskService],\r\n})\r\nexport class ExpandgroupComponent implements OnInit {\r\n  @Input() collapsee: boolean = false;\r\n  @Output() collapseeChange = new EventEmitter<boolean>();\r\n  task_list: Task[] = [];\r\n  task_form!: FormGroup;\r\n  task!: Task;\r\n\r\n  MONTH_NAMES = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December'\r\n  ];\r\n  DAYS = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n  days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n  showDatepicker = false;\r\n  datepickerValue!: string;\r\n  month!: number; // !: mean promis it will not be null, and it will definitely be assigned\r\n  year!: number;\r\n  no_of_days = [] as number[];\r\n  blankdays = [] as number[];\r\n\r\n  // constructor(private i18n: NzI18nService) {}\r\n\r\n  onChange(result: Date): void {\r\n    console.log('onChange: ', result);\r\n  }\r\n\r\n  changetocollapse() {\r\n    this.collapseeChange.emit(true);\r\n  }\r\n\r\n  drop(event: CdkDragDrop<string[]>) {\r\n    moveItemInArray(this.task_list_service.task_list, event.previousIndex, event.currentIndex);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.task_list_service.getTaskList();\r\n    this.add_task_service.buildForm('');\r\n    this.initDate();\r\n    this.getNoOfDays();\r\n  }\r\n\r\n  constructor(public task_list_service: TaskListService, public add_task_service: AddTaskService) {}\r\n\r\n  initDate() {\r\n    let today = new Date();\r\n    this.month = today.getMonth();\r\n    this.year = today.getFullYear();\r\n    this.datepickerValue = new Date(this.year, this.month, today.getDate()).toDateString();\r\n  }\r\n\r\n  isToday(date: any) {\r\n    const today = new Date();\r\n    const d = new Date(this.year, this.month, date);\r\n    return today.toDateString() === d.toDateString() ? true : false;\r\n  }\r\n\r\n  getDateValue(date: any) {\r\n    let selectedDate = new Date(this.year, this.month, date);\r\n    this.datepickerValue = selectedDate.toDateString();\r\n    this.showDatepicker = false;\r\n  }\r\n\r\n  getNoOfDays() {\r\n    const daysInMonth = new Date(this.year, this.month + 1, 0).getDate();\r\n\r\n    // find where to start calendar day of week\r\n    let dayOfWeek = new Date(this.year, this.month).getDay();\r\n    let blankdaysArray = [];\r\n    for (var i = 1; i <= dayOfWeek; i++) {\r\n      blankdaysArray.push(i);\r\n    }\r\n\r\n    let daysArray = [];\r\n    for (var i = 1; i <= daysInMonth; i++) {\r\n      daysArray.push(i);\r\n    }\r\n\r\n    this.blankdays = blankdaysArray;\r\n    this.no_of_days = daysArray;\r\n  }\r\n\r\n  trackByIdentity = (index: number, item: any) => item;\r\n}\r\n\r\nfunction output() {\r\n  throw new Error('Function not implemented.');\r\n}\r\n   \r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}