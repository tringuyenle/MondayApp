{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { ReplaySubject, BehaviorSubject } from 'rxjs';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nfunction NzFormItemFeedbackIconComponent_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 1);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"nzType\", ctx_r0.iconType);\n  }\n}\nclass NzFormStatusService {\n  constructor() {\n    this.formStatusChanges = new ReplaySubject(1);\n  }\n}\nNzFormStatusService.ɵfac = function NzFormStatusService_Factory(t) {\n  return new (t || NzFormStatusService)();\n};\nNzFormStatusService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NzFormStatusService,\n  factory: NzFormStatusService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzFormStatusService, [{\n    type: Injectable\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n// Used in input-group/input-number-group to make sure components in addon work well\nclass NzFormNoStatusService {\n  constructor() {\n    this.noFormStatus = new BehaviorSubject(false);\n  }\n}\nNzFormNoStatusService.ɵfac = function NzFormNoStatusService_Factory(t) {\n  return new (t || NzFormNoStatusService)();\n};\nNzFormNoStatusService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NzFormNoStatusService,\n  factory: NzFormNoStatusService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzFormNoStatusService, [{\n    type: Injectable\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst iconTypeMap = {\n  error: 'close-circle-fill',\n  validating: 'loading',\n  success: 'check-circle-fill',\n  warning: 'exclamation-circle-fill'\n};\nclass NzFormItemFeedbackIconComponent {\n  constructor(cdr) {\n    this.cdr = cdr;\n    this.status = '';\n    this.iconType = null;\n  }\n  ngOnChanges(_changes) {\n    this.updateIcon();\n  }\n  updateIcon() {\n    this.iconType = this.status ? iconTypeMap[this.status] : null;\n    this.cdr.markForCheck();\n  }\n}\nNzFormItemFeedbackIconComponent.ɵfac = function NzFormItemFeedbackIconComponent_Factory(t) {\n  return new (t || NzFormItemFeedbackIconComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nNzFormItemFeedbackIconComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzFormItemFeedbackIconComponent,\n  selectors: [[\"nz-form-item-feedback-icon\"]],\n  hostAttrs: [1, \"ant-form-item-feedback-icon\"],\n  hostVars: 8,\n  hostBindings: function NzFormItemFeedbackIconComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-form-item-feedback-icon-error\", ctx.status === \"error\")(\"ant-form-item-feedback-icon-warning\", ctx.status === \"warning\")(\"ant-form-item-feedback-icon-success\", ctx.status === \"success\")(\"ant-form-item-feedback-icon-validating\", ctx.status === \"validating\");\n    }\n  },\n  inputs: {\n    status: \"status\"\n  },\n  exportAs: [\"nzFormFeedbackIcon\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[\"nz-icon\", \"\", 3, \"nzType\", 4, \"ngIf\"], [\"nz-icon\", \"\", 3, \"nzType\"]],\n  template: function NzFormItemFeedbackIconComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NzFormItemFeedbackIconComponent_span_0_Template, 1, 1, \"span\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.iconType);\n    }\n  },\n  dependencies: [i1.NgIf, i2.NzIconDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzFormItemFeedbackIconComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-form-item-feedback-icon',\n      exportAs: 'nzFormFeedbackIcon',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: ` <span *ngIf=\"iconType\" nz-icon [nzType]=\"iconType\"></span> `,\n      host: {\n        class: 'ant-form-item-feedback-icon',\n        '[class.ant-form-item-feedback-icon-error]': 'status===\"error\"',\n        '[class.ant-form-item-feedback-icon-warning]': 'status===\"warning\"',\n        '[class.ant-form-item-feedback-icon-success]': 'status===\"success\"',\n        '[class.ant-form-item-feedback-icon-validating]': 'status===\"validating\"'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    status: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzFormPatchModule {}\nNzFormPatchModule.ɵfac = function NzFormPatchModule_Factory(t) {\n  return new (t || NzFormPatchModule)();\n};\nNzFormPatchModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzFormPatchModule\n});\nNzFormPatchModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule, NzIconModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzFormPatchModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, NzIconModule],\n      exports: [NzFormItemFeedbackIconComponent],\n      declarations: [NzFormItemFeedbackIconComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzFormItemFeedbackIconComponent, NzFormNoStatusService, NzFormPatchModule, NzFormStatusService };","map":{"version":3,"names":["i0","Injectable","Component","ViewEncapsulation","ChangeDetectionStrategy","Input","NgModule","ReplaySubject","BehaviorSubject","i1","CommonModule","i2","NzIconModule","NzFormStatusService","constructor","formStatusChanges","ɵfac","ɵprov","type","NzFormNoStatusService","noFormStatus","iconTypeMap","error","validating","success","warning","NzFormItemFeedbackIconComponent","cdr","status","iconType","ngOnChanges","_changes","updateIcon","markForCheck","ChangeDetectorRef","ɵcmp","NgIf","NzIconDirective","args","selector","exportAs","preserveWhitespaces","encapsulation","None","changeDetection","OnPush","template","host","class","NzFormPatchModule","ɵmod","ɵinj","imports","exports","declarations"],"sources":["C:/Users/DELL/source/repos/MondayApp/ClientApp/node_modules/ng-zorro-antd/fesm2020/ng-zorro-antd-core-form.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { ReplaySubject, BehaviorSubject } from 'rxjs';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzFormStatusService {\n    constructor() {\n        this.formStatusChanges = new ReplaySubject(1);\n    }\n}\nNzFormStatusService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.5\", ngImport: i0, type: NzFormStatusService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNzFormStatusService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.5\", ngImport: i0, type: NzFormStatusService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.5\", ngImport: i0, type: NzFormStatusService, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n// Used in input-group/input-number-group to make sure components in addon work well\nclass NzFormNoStatusService {\n    constructor() {\n        this.noFormStatus = new BehaviorSubject(false);\n    }\n}\nNzFormNoStatusService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.5\", ngImport: i0, type: NzFormNoStatusService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNzFormNoStatusService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.5\", ngImport: i0, type: NzFormNoStatusService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.5\", ngImport: i0, type: NzFormNoStatusService, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst iconTypeMap = {\n    error: 'close-circle-fill',\n    validating: 'loading',\n    success: 'check-circle-fill',\n    warning: 'exclamation-circle-fill'\n};\nclass NzFormItemFeedbackIconComponent {\n    constructor(cdr) {\n        this.cdr = cdr;\n        this.status = '';\n        this.iconType = null;\n    }\n    ngOnChanges(_changes) {\n        this.updateIcon();\n    }\n    updateIcon() {\n        this.iconType = this.status ? iconTypeMap[this.status] : null;\n        this.cdr.markForCheck();\n    }\n}\nNzFormItemFeedbackIconComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.5\", ngImport: i0, type: NzFormItemFeedbackIconComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nNzFormItemFeedbackIconComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.5\", type: NzFormItemFeedbackIconComponent, selector: \"nz-form-item-feedback-icon\", inputs: { status: \"status\" }, host: { properties: { \"class.ant-form-item-feedback-icon-error\": \"status===\\\"error\\\"\", \"class.ant-form-item-feedback-icon-warning\": \"status===\\\"warning\\\"\", \"class.ant-form-item-feedback-icon-success\": \"status===\\\"success\\\"\", \"class.ant-form-item-feedback-icon-validating\": \"status===\\\"validating\\\"\" }, classAttribute: \"ant-form-item-feedback-icon\" }, exportAs: [\"nzFormFeedbackIcon\"], usesOnChanges: true, ngImport: i0, template: ` <span *ngIf=\"iconType\" nz-icon [nzType]=\"iconType\"></span> `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NzIconDirective, selector: \"[nz-icon]\", inputs: [\"nzSpin\", \"nzRotate\", \"nzType\", \"nzTheme\", \"nzTwotoneColor\", \"nzIconfont\"], exportAs: [\"nzIcon\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.5\", ngImport: i0, type: NzFormItemFeedbackIconComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-form-item-feedback-icon',\n                    exportAs: 'nzFormFeedbackIcon',\n                    preserveWhitespaces: false,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: ` <span *ngIf=\"iconType\" nz-icon [nzType]=\"iconType\"></span> `,\n                    host: {\n                        class: 'ant-form-item-feedback-icon',\n                        '[class.ant-form-item-feedback-icon-error]': 'status===\"error\"',\n                        '[class.ant-form-item-feedback-icon-warning]': 'status===\"warning\"',\n                        '[class.ant-form-item-feedback-icon-success]': 'status===\"success\"',\n                        '[class.ant-form-item-feedback-icon-validating]': 'status===\"validating\"'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { status: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzFormPatchModule {\n}\nNzFormPatchModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.5\", ngImport: i0, type: NzFormPatchModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNzFormPatchModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.5\", ngImport: i0, type: NzFormPatchModule, declarations: [NzFormItemFeedbackIconComponent], imports: [CommonModule, NzIconModule], exports: [NzFormItemFeedbackIconComponent] });\nNzFormPatchModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.5\", ngImport: i0, type: NzFormPatchModule, imports: [CommonModule, NzIconModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.5\", ngImport: i0, type: NzFormPatchModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, NzIconModule],\n                    exports: [NzFormItemFeedbackIconComponent],\n                    declarations: [NzFormItemFeedbackIconComponent]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzFormItemFeedbackIconComponent, NzFormNoStatusService, NzFormPatchModule, NzFormStatusService };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}