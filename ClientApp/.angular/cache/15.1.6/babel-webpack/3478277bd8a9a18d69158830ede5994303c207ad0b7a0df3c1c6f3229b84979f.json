{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { TaskListService } from 'src/services/task-list-service/task-list.service';\nimport { AddTaskService } from 'src/services/add-task-service/add-task.service';\nimport { moveItemInArray } from '@angular/cdk/drag-drop';\nimport { SubTaskListService } from 'src/services/sub-task-list-service/sub-task-list.service';\nlet ExpandgroupComponent = class ExpandgroupComponent {\n  constructor(task_list_service, add_task_service, edit_task_service, task_service, edit_group_task_service, group_task_list_service, sub_task_list_service) {\n    this.task_list_service = task_list_service;\n    this.add_task_service = add_task_service;\n    this.edit_task_service = edit_task_service;\n    this.task_service = task_service;\n    this.edit_group_task_service = edit_group_task_service;\n    this.group_task_list_service = group_task_list_service;\n    this.sub_task_list_service = sub_task_list_service;\n    this.collapsee = [];\n    this.collapseeChange = new EventEmitter();\n    this.count = 0;\n    this.isDrawerOpen = false;\n    this.tempTaskName = '';\n    this.tempPerson = '';\n    this.openDrawer = new EventEmitter();\n    this.suboftaskid = [];\n  }\n  ngOnInit() {\n    // console.log(\"Init Expandgroup\");\n    this.task_list_service.getTaskList();\n    this.add_task_service.buildForm('', this.group_task.id);\n  }\n  // receive info from sub-task component and send info to board-content component\n  receiveInfo($event) {\n    this.isDrawerOpen = true;\n    this.tempTaskName = $event.param1;\n    this.tempPerson = $event.param2;\n    const message = {\n      param1: this.tempTaskName,\n      param2: this.tempPerson\n    };\n    this.openDrawer.emit(message);\n  }\n  //send info from expandgroup component to board-content component\n  openTaskDrawer(tempTaskName, tempPerson) {\n    const message = {\n      param1: tempTaskName,\n      param2: tempPerson\n    };\n    this.openDrawer.emit(message);\n  }\n  openSubtask(task) {\n    if (!this.suboftaskid.includes(task.id)) this.suboftaskid.push(task.id);else this.suboftaskid = this.suboftaskid.filter(id => id !== task.id);\n  }\n  selectAll() {\n    for (var i = 0; i < this.task_list_service.task_list.length; i++) {\n      this.task_list_service.task_list[i].selected = this.selectedAll;\n    }\n  }\n  checkIfAllSelected() {\n    this.selectedAll = this.task_list_service.task_list.every(function (item) {\n      return item.selected == true;\n    });\n  }\n  changetocollapse() {\n    this.collapsee = this.collapsee.filter(id => id !== this.group_task.id);\n    this.collapseeChange.emit(this.collapsee);\n  }\n  drop(event) {\n    moveItemInArray(this.task_list_service.task_list, event.previousIndex, event.currentIndex);\n  }\n};\n__decorate([Input()], ExpandgroupComponent.prototype, \"collapsee\", void 0);\n__decorate([Input()], ExpandgroupComponent.prototype, \"group_task\", void 0);\n__decorate([Output()], ExpandgroupComponent.prototype, \"collapseeChange\", void 0);\n__decorate([Output()], ExpandgroupComponent.prototype, \"isDrawerOpen\", void 0);\n__decorate([Output()], ExpandgroupComponent.prototype, \"tempTaskName\", void 0);\n__decorate([Output()], ExpandgroupComponent.prototype, \"tempPerson\", void 0);\n__decorate([Output()], ExpandgroupComponent.prototype, \"openDrawer\", void 0);\nExpandgroupComponent = __decorate([Component({\n  selector: 'app-expandgroup',\n  templateUrl: './expandgroup.component.html',\n  styleUrls: ['./expandgroup.component.css'],\n  providers: [TaskListService, AddTaskService, SubTaskListService]\n})], ExpandgroupComponent);\nexport { ExpandgroupComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,YAAY,EAAEC,KAAK,EAAUC,MAAM,QAAQ,eAAe;AAC9E,SAASC,eAAe,QAAQ,kDAAkD;AAClF,SAASC,cAAc,QAAQ,gDAAgD;AAI/E,SAAsBC,eAAe,QAAQ,wBAAwB;AAMrE,SAASC,kBAAkB,QAAQ,0DAA0D;AAQtF,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAO/BC,YAAmBC,iBAAkC,EAASC,gBAAgC,EAC3EC,iBAAkC,EAAUC,YAAyB,EACrEC,uBAA6C,EAC7CC,uBAA6C,EAC7CC,qBAAyC;IAJzC,sBAAiB,GAAjBN,iBAAiB;IAA0B,qBAAgB,GAAhBC,gBAAgB;IAC3D,sBAAiB,GAAjBC,iBAAiB;IAA2B,iBAAY,GAAZC,YAAY;IACxD,4BAAuB,GAAvBC,uBAAuB;IACvB,4BAAuB,GAAvBC,uBAAuB;IACvB,0BAAqB,GAArBC,qBAAqB;IAV/B,cAAS,GAAa,EAAE;IAEvB,oBAAe,GAAG,IAAIf,YAAY,EAAY;IAExD,UAAK,GAAW,CAAC;IAcP,iBAAY,GAAY,KAAK;IAC7B,iBAAY,GAAW,EAAE;IACzB,eAAU,GAAW,EAAE;IAWvB,eAAU,GAAG,IAAIA,YAAY,EAAoC;IAQ3E,gBAAW,GAAa,EAAE;EA7BqC;EAE/DgB,QAAQ;IACN;IACA,IAAI,CAACP,iBAAiB,CAACQ,WAAW,EAAE;IACpC,IAAI,CAACP,gBAAgB,CAACQ,SAAS,CAAC,EAAE,EAAC,IAAI,CAACC,UAAU,CAACC,EAAE,CAAC;EACxD;EAMA;EACAC,WAAW,CAACC,MAA0C;IACpD,IAAI,CAACC,YAAY,GAAG,IAAI;IACxB,IAAI,CAACC,YAAY,GAAGF,MAAM,CAACG,MAAM;IACjC,IAAI,CAACC,UAAU,GAAGJ,MAAM,CAACK,MAAM;IAC/B,MAAMC,OAAO,GAAG;MAAEH,MAAM,EAAE,IAAI,CAACD,YAAY;MAAEG,MAAM,EAAE,IAAI,CAACD;IAAU,CAAE;IACtE,IAAI,CAACG,UAAU,CAACC,IAAI,CAACF,OAAO,CAAC;EAC/B;EAIA;EACAG,cAAc,CAACP,YAAoB,EAAEE,UAAkB;IACrD,MAAME,OAAO,GAAG;MAAEH,MAAM,EAAED,YAAY;MAAEG,MAAM,EAAED;IAAU,CAAE;IAC5D,IAAI,CAACG,UAAU,CAACC,IAAI,CAACF,OAAO,CAAC;EAC/B;EAMAI,WAAW,CAACC,IAAU;IACpB,IAAI,CAAC,IAAI,CAACC,WAAW,CAACC,QAAQ,CAACF,IAAI,CAACb,EAAE,CAAC,EACrC,IAAI,CAACc,WAAW,CAACE,IAAI,CAACH,IAAI,CAACb,EAAE,CAAC,CAAC,KAC5B,IAAI,CAACc,WAAW,GAAG,IAAI,CAACA,WAAW,CAACG,MAAM,CAAEjB,EAAE,IAAKA,EAAE,KAAKa,IAAI,CAACb,EAAE,CAAC;EACzE;EAEAkB,SAAS;IACP,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC9B,iBAAiB,CAAC+B,SAAS,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;MAChE,IAAI,CAAC9B,iBAAiB,CAAC+B,SAAS,CAACD,CAAC,CAAC,CAACG,QAAQ,GAAG,IAAI,CAACC,WAAW;;EAEnE;EAEAC,kBAAkB;IAChB,IAAI,CAACD,WAAW,GAAG,IAAI,CAAClC,iBAAiB,CAAC+B,SAAS,CAACK,KAAK,CAAC,UAASC,IAAQ;MACvE,OAAOA,IAAI,CAACJ,QAAQ,IAAI,IAAI;IAC9B,CAAC,CAAC;EACN;EAEAK,gBAAgB;IACd,IAAI,CAACC,SAAS,GAAG,IAAI,CAACA,SAAS,CAACX,MAAM,CAAEjB,EAAE,IAAKA,EAAE,KAAK,IAAI,CAACD,UAAU,CAACC,EAAE,CAAC;IACzE,IAAI,CAAC6B,eAAe,CAACnB,IAAI,CAAC,IAAI,CAACkB,SAAS,CAAC;EAC3C;EAEAE,IAAI,CAACC,KAA4B;IAC/B9C,eAAe,CAAC,IAAI,CAACI,iBAAiB,CAAC+B,SAAS,EAAEW,KAAK,CAACC,aAAa,EAAED,KAAK,CAACE,YAAY,CAAC;EAC5F;CAED;AAtEUC,YAARrD,KAAK,EAAE,uDAA0B;AACzBqD,YAARrD,KAAK,EAAE,wDAAwB;AACtBqD,YAATpD,MAAM,EAAE,6DAAgD;AAgB/CoD,YAATpD,MAAM,EAAE,0DAA+B;AAC9BoD,YAATpD,MAAM,EAAE,0DAA2B;AAC1BoD,YAATpD,MAAM,EAAE,wDAAyB;AAWxBoD,YAATpD,MAAM,EAAE,wDAAmE;AAhCjEK,oBAAoB,eANhCR,SAAS,CAAC;EACTwD,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,6BAA6B,CAAC;EAC1CC,SAAS,EAAE,CAACvD,eAAe,EAAEC,cAAc,EAAEE,kBAAkB;CAChE,CAAC,GACWC,oBAAoB,CAuEhC;SAvEYA,oBAAoB","names":["Component","EventEmitter","Input","Output","TaskListService","AddTaskService","moveItemInArray","SubTaskListService","ExpandgroupComponent","constructor","task_list_service","add_task_service","edit_task_service","task_service","edit_group_task_service","group_task_list_service","sub_task_list_service","ngOnInit","getTaskList","buildForm","group_task","id","receiveInfo","$event","isDrawerOpen","tempTaskName","param1","tempPerson","param2","message","openDrawer","emit","openTaskDrawer","openSubtask","task","suboftaskid","includes","push","filter","selectAll","i","task_list","length","selected","selectedAll","checkIfAllSelected","every","item","changetocollapse","collapsee","collapseeChange","drop","event","previousIndex","currentIndex","__decorate","selector","templateUrl","styleUrls","providers"],"sourceRoot":"","sources":["C:\\Users\\DELL\\source\\repos\\MondayApp\\ClientApp\\src\\app\\group\\expandgroup\\expandgroup.component.ts"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { TaskListService } from 'src/services/task-list-service/task-list.service';\r\nimport { AddTaskService } from 'src/services/add-task-service/add-task.service';\r\nimport { EditTaskService } from 'src/services/edit-task-service/edit-task.service';\r\nimport { Task } from 'src/app/task';\r\nimport { TaskService } from 'src/services/task-service/task.service';\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { ViewChild, AfterViewInit } from '@angular/core';\r\nimport { SubtaskComponent } from 'src/app/subtask/subtask.component';\r\nimport { Grouptask } from 'src/app/grouptask';\r\nimport { EditGroupTaskService } from 'src/services/edit-group-task-service/edit-group-task.service';\r\nimport { GroupTaskListService } from 'src/services/group-task-list-service/group-task-list.service';\r\nimport { SubTaskListService } from 'src/services/sub-task-list-service/sub-task-list.service';\r\n\r\n@Component({\r\n  selector: 'app-expandgroup',\r\n  templateUrl: './expandgroup.component.html',\r\n  styleUrls: ['./expandgroup.component.css'],\r\n  providers: [TaskListService, AddTaskService, SubTaskListService],\r\n})\r\nexport class ExpandgroupComponent implements OnInit {\r\n  @Input() collapsee: string[] = [];\r\n  @Input() group_task!: Grouptask;\r\n  @Output() collapseeChange = new EventEmitter<string[]>();\r\n\r\n  count: number = 0;\r\n  \r\n  constructor(public task_list_service: TaskListService, public add_task_service: AddTaskService, \r\n              public edit_task_service: EditTaskService, private task_service: TaskService,\r\n              public edit_group_task_service: EditGroupTaskService,\r\n              public group_task_list_service: GroupTaskListService,\r\n              public sub_task_list_service: SubTaskListService) {}\r\n\r\n  ngOnInit(): void {\r\n    // console.log(\"Init Expandgroup\");\r\n    this.task_list_service.getTaskList();\r\n    this.add_task_service.buildForm('',this.group_task.id);\r\n  }\r\n\r\n  @Output() isDrawerOpen: boolean = false;\r\n  @Output() tempTaskName: string = '';\r\n  @Output() tempPerson: string = '';\r\n\r\n  // receive info from sub-task component and send info to board-content component\r\n  receiveInfo($event: { param1: string, param2: string }){\r\n    this.isDrawerOpen = true;\r\n    this.tempTaskName = $event.param1;\r\n    this.tempPerson = $event.param2;\r\n    const message = { param1: this.tempTaskName, param2: this.tempPerson };\r\n    this.openDrawer.emit(message);\r\n  }\r\n  \r\n  @Output() openDrawer = new EventEmitter<{param1: string, param2: string}>();\r\n\r\n  //send info from expandgroup component to board-content component\r\n  openTaskDrawer(tempTaskName: string, tempPerson: string){\r\n    const message = { param1: tempTaskName, param2: tempPerson };\r\n    this.openDrawer.emit(message);\r\n  }\r\n\r\n  suboftaskid: string[] = [];\r\n\r\n  selectedAll: any;\r\n\r\n  openSubtask(task: Task): void {\r\n    if (!this.suboftaskid.includes(task.id)) \r\n      this.suboftaskid.push(task.id);\r\n    else this.suboftaskid = this.suboftaskid.filter((id) => id !== task.id);\r\n  }\r\n\r\n  selectAll() {\r\n    for (var i = 0; i < this.task_list_service.task_list.length; i++) {\r\n      this.task_list_service.task_list[i].selected = this.selectedAll;\r\n    }\r\n  }\r\n\r\n  checkIfAllSelected() {\r\n    this.selectedAll = this.task_list_service.task_list.every(function(item:any) {\r\n        return item.selected == true;\r\n      })\r\n  }\r\n\r\n  changetocollapse() {\r\n    this.collapsee = this.collapsee.filter((id) => id !== this.group_task.id);\r\n    this.collapseeChange.emit(this.collapsee);\r\n  }\r\n\r\n  drop(event: CdkDragDrop<string[]>) {\r\n    moveItemInArray(this.task_list_service.task_list, event.previousIndex, event.currentIndex);\r\n  }\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}