{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../group-task-service/group-task.service\";\nimport * as i3 from \"../group-task-list-service/group-task-list.service\";\nexport class AddGroupTaskService {\n  constructor(formBuilder, group_task_service, group_task_list_service) {\n    this.formBuilder = formBuilder;\n    this.group_task_service = group_task_service;\n    this.group_task_list_service = group_task_list_service;\n  }\n  buildForm(name, parent_id) {\n    this.group_form = this.formBuilder.group({\n      id: '',\n      name: '',\n      parent_id: '',\n      color: ''\n    });\n    const group_task = {\n      id: \"\",\n      name: \"\",\n      parent_id: \"\",\n      color: \"\"\n    };\n    this.display(group_task);\n  }\n  display(group_task) {\n    // console.log(\"Display task\" + task.name);\n    if (this.group_form) {\n      this.group_form.reset();\n    }\n    this.group_task = group_task;\n    this.group_form.patchValue({\n      id: this.group_task.id,\n      name: this.group_task.name,\n      parent_id: this.group_task.parent_id,\n      color: this.group_task.color\n    });\n  }\n  saveGroup(parent_id) {\n    const temp = {\n      ...this.group_task,\n      ...this.group_form.value\n    };\n    this.group_task_service.createGroupTask(temp).subscribe({\n      error: err => {\n        console.log(temp);\n        this.group_task_list_service.reloadList();\n        this.onSaveComplete(parent_id);\n      }\n    });\n  }\n  onSaveComplete(parent_id) {\n    // this.task_form.reset();\n    this.buildForm('', parent_id);\n  }\n}\nAddGroupTaskService.ɵfac = function AddGroupTaskService_Factory(t) {\n  return new (t || AddGroupTaskService)(i0.ɵɵinject(i1.FormBuilder), i0.ɵɵinject(i2.GroupTaskService), i0.ɵɵinject(i3.GroupTaskListService));\n};\nAddGroupTaskService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AddGroupTaskService,\n  factory: AddGroupTaskService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;AASA,OAAM,MAAOA,mBAAmB;EAK9BC,YAAoBC,WAAwB,EAAUC,kBAAoC,EACtEC,uBAA6C;IAD7C,gBAAW,GAAXF,WAAW;IAAuB,uBAAkB,GAAlBC,kBAAkB;IACpD,4BAAuB,GAAvBC,uBAAuB;EAA0B;EAErEC,SAAS,CAACC,IAAY,EAAEC,SAAiB;IAGvC,IAAI,CAACC,UAAU,GAAG,IAAI,CAACN,WAAW,CAACO,KAAK,CAAC;MACvCC,EAAE,EAAE,EAAE;MACNJ,IAAI,EAAE,EAAE;MACRC,SAAS,EAAE,EAAE;MACbI,KAAK,EAAE;KACR,CAAC;IAEF,MAAMC,UAAU,GAAc;MAAEF,EAAE,EAAE,EAAE;MAAEJ,IAAI,EAAE,EAAE;MAAEC,SAAS,EAAE,EAAE;MAAEI,KAAK,EAAE;IAAE,CAAE;IAE5E,IAAI,CAACE,OAAO,CAACD,UAAU,CAAC;EAC1B;EAEAC,OAAO,CAACD,UAAqB;IAE3B;IAEA,IAAI,IAAI,CAACJ,UAAU,EAAE;MACnB,IAAI,CAACA,UAAU,CAACM,KAAK,EAAE;;IAGzB,IAAI,CAACF,UAAU,GAAGA,UAAU;IAE5B,IAAI,CAACJ,UAAU,CAACO,UAAU,CAAC;MACzBL,EAAE,EAAE,IAAI,CAACE,UAAU,CAACF,EAAE;MACtBJ,IAAI,EAAE,IAAI,CAACM,UAAU,CAACN,IAAI;MAC1BC,SAAS,EAAE,IAAI,CAACK,UAAU,CAACL,SAAS;MACpCI,KAAK,EAAE,IAAI,CAACC,UAAU,CAACD;KACxB,CAAC;EACJ;EAEAK,SAAS,CAACT,SAAiB;IACzB,MAAMU,IAAI,GAAc;MAAE,GAAG,IAAI,CAACL,UAAU;MAAE,GAAG,IAAI,CAACJ,UAAU,CAACU;IAAK,CAAE;IACxE,IAAI,CAACf,kBAAkB,CAACgB,eAAe,CAACF,IAAI,CAAC,CAACG,SAAS,CAAC;MACtDC,KAAK,EAAGC,GAAG,IAAI;QACbC,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;QACjB,IAAI,CAACb,uBAAuB,CAACqB,UAAU,EAAE;QACzC,IAAI,CAACC,cAAc,CAACnB,SAAS,CAAC;MAChC;KACD,CAAC;EACJ;EAEAmB,cAAc,CAACnB,SAAiB;IAC9B;IACA,IAAI,CAACF,SAAS,CAAC,EAAE,EAACE,SAAS,CAAC;EAC9B;;AAvDWP,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;SAAnBA,mBAAmB;EAAA2B,SAAnB3B,mBAAmB;EAAA4B,YAFlB;AAAM","names":["AddGroupTaskService","constructor","formBuilder","group_task_service","group_task_list_service","buildForm","name","parent_id","group_form","group","id","color","group_task","display","reset","patchValue","saveGroup","temp","value","createGroupTask","subscribe","error","err","console","log","reloadList","onSaveComplete","factory","providedIn"],"sourceRoot":"","sources":["E:\\WorkSpace\\MondayApp\\ClientApp\\src\\services\\add-group-task-service\\add-group-task.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { GroupTaskService } from '../group-task-service/group-task.service';\r\nimport { GroupTaskListService } from '../group-task-list-service/group-task-list.service';\r\nimport { Grouptask } from 'src/app/grouptask';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AddGroupTaskService {\r\n  group_form!: FormGroup;\r\n  group_task!: Grouptask;\r\n  bg_group_task_list: string\r\n\r\n  constructor(private formBuilder: FormBuilder, private group_task_service: GroupTaskService,\r\n              private group_task_list_service: GroupTaskListService) { }\r\n\r\n  buildForm(name: string, parent_id: string) {\r\n\r\n\r\n    this.group_form = this.formBuilder.group({\r\n      id: '',\r\n      name: '',\r\n      parent_id: '',\r\n      color: '',\r\n    });\r\n\r\n    const group_task: Grouptask = { id: \"\", name: \"\", parent_id: \"\", color: \"\" };\r\n\r\n    this.display(group_task);\r\n  }\r\n\r\n  display(group_task: Grouptask): void {\r\n\r\n    // console.log(\"Display task\" + task.name);\r\n\r\n    if (this.group_form) {\r\n      this.group_form.reset();\r\n    }\r\n\r\n    this.group_task = group_task;\r\n\r\n    this.group_form.patchValue({\r\n      id: this.group_task.id,\r\n      name: this.group_task.name,\r\n      parent_id: this.group_task.parent_id,\r\n      color: this.group_task.color,\r\n    });\r\n  }\r\n  \r\n  saveGroup(parent_id: string) {\r\n    const temp: Grouptask = { ...this.group_task, ...this.group_form.value };\r\n    this.group_task_service.createGroupTask(temp).subscribe({\r\n      error: (err) => {\r\n        console.log(temp);\r\n        this.group_task_list_service.reloadList();\r\n        this.onSaveComplete(parent_id);\r\n      }\r\n    });\r\n  }\r\n\r\n  onSaveComplete(parent_id: string): void {\r\n    // this.task_form.reset();\r\n    this.buildForm('',parent_id);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}