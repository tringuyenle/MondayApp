{"ast":null,"code":"import { TinyColor } from '@ctrl/tinycolor';\nvar hueStep = 2; // 色相阶梯\n\nvar saturationStep = 0.16; // 饱和度阶梯，浅色部分\n\nvar saturationStep2 = 0.05; // 饱和度阶梯，深色部分\n\nvar brightnessStep1 = 0.05; // 亮度阶梯，浅色部分\n\nvar brightnessStep2 = 0.15; // 亮度阶梯，深色部分\n\nvar lightColorCount = 5; // 浅色数量，主色上\n\nvar darkColorCount = 4; // 深色数量，主色下\n// 暗色主题颜色映射关系表\n\nvar darkColorMap = [{\n  index: 7,\n  opacity: 0.15\n}, {\n  index: 6,\n  opacity: 0.25\n}, {\n  index: 5,\n  opacity: 0.3\n}, {\n  index: 5,\n  opacity: 0.45\n}, {\n  index: 5,\n  opacity: 0.65\n}, {\n  index: 5,\n  opacity: 0.85\n}, {\n  index: 4,\n  opacity: 0.9\n}, {\n  index: 3,\n  opacity: 0.95\n}, {\n  index: 2,\n  opacity: 0.97\n}, {\n  index: 1,\n  opacity: 0.98\n}];\nfunction getHue(hsv, i, light) {\n  var hue; // 根据色相不同，色相转向不同\n\n  if (Math.round(hsv.h) >= 60 && Math.round(hsv.h) <= 240) {\n    hue = light ? Math.round(hsv.h) - hueStep * i : Math.round(hsv.h) + hueStep * i;\n  } else {\n    hue = light ? Math.round(hsv.h) + hueStep * i : Math.round(hsv.h) - hueStep * i;\n  }\n  if (hue < 0) {\n    hue += 360;\n  } else if (hue >= 360) {\n    hue -= 360;\n  }\n  return hue;\n}\nfunction getSaturation(hsv, i, light) {\n  // grey color don't change saturation\n  if (hsv.h === 0 && hsv.s === 0) {\n    return hsv.s;\n  }\n  var saturation;\n  if (light) {\n    saturation = hsv.s - saturationStep * i;\n  } else if (i === darkColorCount) {\n    saturation = hsv.s + saturationStep;\n  } else {\n    saturation = hsv.s + saturationStep2 * i;\n  } // 边界值修正\n\n  if (saturation > 1) {\n    saturation = 1;\n  } // 第一格的 s 限制在 0.06-0.1 之间\n\n  if (light && i === lightColorCount && saturation > 0.1) {\n    saturation = 0.1;\n  }\n  if (saturation < 0.06) {\n    saturation = 0.06;\n  }\n  return Number(saturation.toFixed(2));\n}\nfunction getValue(hsv, i, light) {\n  var value;\n  if (light) {\n    value = hsv.v + brightnessStep1 * i;\n  } else {\n    value = hsv.v - brightnessStep2 * i;\n  }\n  if (value > 1) {\n    value = 1;\n  }\n  return Number(value.toFixed(2));\n}\nfunction generate(color) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var patterns = [];\n  var pColor = new TinyColor(color);\n  for (var i = lightColorCount; i > 0; i -= 1) {\n    var hsv = pColor.toHsv();\n    var colorString = new TinyColor({\n      h: getHue(hsv, i, true),\n      s: getSaturation(hsv, i, true),\n      v: getValue(hsv, i, true)\n    }).toHexString();\n    patterns.push(colorString);\n  }\n  patterns.push(pColor.toHexString());\n  for (var _i = 1; _i <= darkColorCount; _i += 1) {\n    var _hsv = pColor.toHsv();\n    var _colorString = new TinyColor({\n      h: getHue(_hsv, _i),\n      s: getSaturation(_hsv, _i),\n      v: getValue(_hsv, _i)\n    }).toHexString();\n    patterns.push(_colorString);\n  } // dark theme patterns\n\n  if (opts.theme === 'dark') {\n    return darkColorMap.map(function (_ref) {\n      var index = _ref.index,\n        opacity = _ref.opacity;\n      var darkColorString = new TinyColor(opts.backgroundColor || '#141414').mix(patterns[index], opacity * 100).toHexString();\n      return darkColorString;\n    });\n  }\n  return patterns;\n}\nvar presetPrimaryColors = {\n  red: '#F5222D',\n  volcano: '#FA541C',\n  orange: '#FA8C16',\n  gold: '#FAAD14',\n  yellow: '#FADB14',\n  lime: '#A0D911',\n  green: '#52C41A',\n  cyan: '#13C2C2',\n  blue: '#1890FF',\n  geekblue: '#2F54EB',\n  purple: '#722ED1',\n  magenta: '#EB2F96',\n  grey: '#666666'\n};\nvar presetPalettes = {};\nvar presetDarkPalettes = {};\nObject.keys(presetPrimaryColors).forEach(function (key) {\n  presetPalettes[key] = generate(presetPrimaryColors[key]);\n  presetPalettes[key].primary = presetPalettes[key][5]; // dark presetPalettes\n\n  presetDarkPalettes[key] = generate(presetPrimaryColors[key], {\n    theme: 'dark',\n    backgroundColor: '#141414'\n  });\n  presetDarkPalettes[key].primary = presetDarkPalettes[key][5];\n});\nvar red = presetPalettes.red;\nvar volcano = presetPalettes.volcano;\nvar gold = presetPalettes.gold;\nvar orange = presetPalettes.orange;\nvar yellow = presetPalettes.yellow;\nvar lime = presetPalettes.lime;\nvar green = presetPalettes.green;\nvar cyan = presetPalettes.cyan;\nvar blue = presetPalettes.blue;\nvar geekblue = presetPalettes.geekblue;\nvar purple = presetPalettes.purple;\nvar magenta = presetPalettes.magenta;\nvar grey = presetPalettes.grey;\nexport { blue, cyan, geekblue, generate, gold, green, grey, lime, magenta, orange, presetDarkPalettes, presetPalettes, presetPrimaryColors, purple, red, volcano, yellow };","map":{"version":3,"names":["TinyColor","hueStep","saturationStep","saturationStep2","brightnessStep1","brightnessStep2","lightColorCount","darkColorCount","darkColorMap","index","opacity","getHue","hsv","i","light","hue","Math","round","h","getSaturation","s","saturation","Number","toFixed","getValue","value","v","generate","color","opts","arguments","length","undefined","patterns","pColor","toHsv","colorString","toHexString","push","_i","_hsv","_colorString","theme","map","_ref","darkColorString","backgroundColor","mix","presetPrimaryColors","red","volcano","orange","gold","yellow","lime","green","cyan","blue","geekblue","purple","magenta","grey","presetPalettes","presetDarkPalettes","Object","keys","forEach","key","primary"],"sources":["C:/Users/DELL/source/repos/MondayApp/ClientApp/node_modules/@ant-design/colors/dist/index.esm.js"],"sourcesContent":["import { TinyColor } from '@ctrl/tinycolor';\n\nvar hueStep = 2; // 色相阶梯\n\nvar saturationStep = 0.16; // 饱和度阶梯，浅色部分\n\nvar saturationStep2 = 0.05; // 饱和度阶梯，深色部分\n\nvar brightnessStep1 = 0.05; // 亮度阶梯，浅色部分\n\nvar brightnessStep2 = 0.15; // 亮度阶梯，深色部分\n\nvar lightColorCount = 5; // 浅色数量，主色上\n\nvar darkColorCount = 4; // 深色数量，主色下\n// 暗色主题颜色映射关系表\n\nvar darkColorMap = [{\n  index: 7,\n  opacity: 0.15\n}, {\n  index: 6,\n  opacity: 0.25\n}, {\n  index: 5,\n  opacity: 0.3\n}, {\n  index: 5,\n  opacity: 0.45\n}, {\n  index: 5,\n  opacity: 0.65\n}, {\n  index: 5,\n  opacity: 0.85\n}, {\n  index: 4,\n  opacity: 0.9\n}, {\n  index: 3,\n  opacity: 0.95\n}, {\n  index: 2,\n  opacity: 0.97\n}, {\n  index: 1,\n  opacity: 0.98\n}];\n\nfunction getHue(hsv, i, light) {\n  var hue; // 根据色相不同，色相转向不同\n\n  if (Math.round(hsv.h) >= 60 && Math.round(hsv.h) <= 240) {\n    hue = light ? Math.round(hsv.h) - hueStep * i : Math.round(hsv.h) + hueStep * i;\n  } else {\n    hue = light ? Math.round(hsv.h) + hueStep * i : Math.round(hsv.h) - hueStep * i;\n  }\n\n  if (hue < 0) {\n    hue += 360;\n  } else if (hue >= 360) {\n    hue -= 360;\n  }\n\n  return hue;\n}\n\nfunction getSaturation(hsv, i, light) {\n  // grey color don't change saturation\n  if (hsv.h === 0 && hsv.s === 0) {\n    return hsv.s;\n  }\n\n  var saturation;\n\n  if (light) {\n    saturation = hsv.s - saturationStep * i;\n  } else if (i === darkColorCount) {\n    saturation = hsv.s + saturationStep;\n  } else {\n    saturation = hsv.s + saturationStep2 * i;\n  } // 边界值修正\n\n\n  if (saturation > 1) {\n    saturation = 1;\n  } // 第一格的 s 限制在 0.06-0.1 之间\n\n\n  if (light && i === lightColorCount && saturation > 0.1) {\n    saturation = 0.1;\n  }\n\n  if (saturation < 0.06) {\n    saturation = 0.06;\n  }\n\n  return Number(saturation.toFixed(2));\n}\n\nfunction getValue(hsv, i, light) {\n  var value;\n\n  if (light) {\n    value = hsv.v + brightnessStep1 * i;\n  } else {\n    value = hsv.v - brightnessStep2 * i;\n  }\n\n  if (value > 1) {\n    value = 1;\n  }\n\n  return Number(value.toFixed(2));\n}\n\nfunction generate(color) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var patterns = [];\n  var pColor = new TinyColor(color);\n\n  for (var i = lightColorCount; i > 0; i -= 1) {\n    var hsv = pColor.toHsv();\n    var colorString = new TinyColor({\n      h: getHue(hsv, i, true),\n      s: getSaturation(hsv, i, true),\n      v: getValue(hsv, i, true)\n    }).toHexString();\n    patterns.push(colorString);\n  }\n\n  patterns.push(pColor.toHexString());\n\n  for (var _i = 1; _i <= darkColorCount; _i += 1) {\n    var _hsv = pColor.toHsv();\n\n    var _colorString = new TinyColor({\n      h: getHue(_hsv, _i),\n      s: getSaturation(_hsv, _i),\n      v: getValue(_hsv, _i)\n    }).toHexString();\n\n    patterns.push(_colorString);\n  } // dark theme patterns\n\n\n  if (opts.theme === 'dark') {\n    return darkColorMap.map(function (_ref) {\n      var index = _ref.index,\n          opacity = _ref.opacity;\n      var darkColorString = new TinyColor(opts.backgroundColor || '#141414').mix(patterns[index], opacity * 100).toHexString();\n      return darkColorString;\n    });\n  }\n\n  return patterns;\n}\n\nvar presetPrimaryColors = {\n  red: '#F5222D',\n  volcano: '#FA541C',\n  orange: '#FA8C16',\n  gold: '#FAAD14',\n  yellow: '#FADB14',\n  lime: '#A0D911',\n  green: '#52C41A',\n  cyan: '#13C2C2',\n  blue: '#1890FF',\n  geekblue: '#2F54EB',\n  purple: '#722ED1',\n  magenta: '#EB2F96',\n  grey: '#666666'\n};\nvar presetPalettes = {};\nvar presetDarkPalettes = {};\nObject.keys(presetPrimaryColors).forEach(function (key) {\n  presetPalettes[key] = generate(presetPrimaryColors[key]);\n  presetPalettes[key].primary = presetPalettes[key][5]; // dark presetPalettes\n\n  presetDarkPalettes[key] = generate(presetPrimaryColors[key], {\n    theme: 'dark',\n    backgroundColor: '#141414'\n  });\n  presetDarkPalettes[key].primary = presetDarkPalettes[key][5];\n});\nvar red = presetPalettes.red;\nvar volcano = presetPalettes.volcano;\nvar gold = presetPalettes.gold;\nvar orange = presetPalettes.orange;\nvar yellow = presetPalettes.yellow;\nvar lime = presetPalettes.lime;\nvar green = presetPalettes.green;\nvar cyan = presetPalettes.cyan;\nvar blue = presetPalettes.blue;\nvar geekblue = presetPalettes.geekblue;\nvar purple = presetPalettes.purple;\nvar magenta = presetPalettes.magenta;\nvar grey = presetPalettes.grey;\n\nexport { blue, cyan, geekblue, generate, gold, green, grey, lime, magenta, orange, presetDarkPalettes, presetPalettes, presetPrimaryColors, purple, red, volcano, yellow };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}