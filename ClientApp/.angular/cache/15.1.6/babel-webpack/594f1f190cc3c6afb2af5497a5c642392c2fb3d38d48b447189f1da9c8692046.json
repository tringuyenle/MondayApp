{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../task-service/task.service\";\nimport * as i3 from \"../task-list-service/task-list.service\";\nimport * as i4 from \"../sub-task-service/sub-task.service\";\nimport * as i5 from \"../sub-task-list-service/sub-task-list.service\";\nexport class AddTaskService {\n  constructor(formBuilder, task_service, task_list_service, sub_task_service, sub_task_list_service) {\n    this.formBuilder = formBuilder;\n    this.task_service = task_service;\n    this.task_list_service = task_list_service;\n    this.sub_task_service = sub_task_service;\n    this.sub_task_list_service = sub_task_list_service;\n  }\n  ngOnInit() {\n    this.buildForm('', '');\n    console.log(\"ngOnInit\");\n  }\n  buildForm(name, parent_id) {\n    console.log('name:' + name);\n    console.log('parent_id' + parent_id);\n    this.task_form = this.formBuilder.group({\n      id: '',\n      name: '',\n      parent_task: '',\n      child_task: [],\n      create_by: '',\n      create_date: '',\n      status: '',\n      selected: false\n    });\n    let temp = new Date();\n    const task = {\n      id: \"\",\n      name: name,\n      parent_task: parent_id,\n      child_task: [],\n      create_by: \"\",\n      create_date: temp.toLocaleDateString(\"en-CA\"),\n      status: \"bg-gray-300\",\n      selected: false\n    };\n    this.displayTask(task);\n  }\n  displayTask(task) {\n    console.log(\"Display task\" + task.name);\n    if (this.task_form) {\n      this.task_form.reset();\n    }\n    this.task = task;\n    this.task_form.patchValue({\n      id: this.task.id,\n      name: this.task.name,\n      parent_task: this.task.parent_task,\n      child_task: this.task.child_task,\n      create_by: this.task.create_by,\n      create_date: this.task.create_date,\n      status: this.task.status,\n      selected: this.task.selected\n    });\n  }\n  saveTask() {\n    const t = {\n      ...this.task,\n      ...this.task_form.value\n    };\n    this.task_service.createTask(t).subscribe({\n      error: err => {\n        console.log(\"Thêm thành công\");\n        this.task_list_service.reloadTaskList();\n        this.onSaveComplete();\n      }\n    });\n  }\n  saveSubTask(parent_id) {\n    const t = {\n      ...this.task,\n      ...this.task_form.value\n    };\n    this.sub_task_service.createTask(t).subscribe({\n      error: err => {\n        console.log(\"Thêm thành công\");\n        this.sub_task_list_service.getSubTaskList();\n        // this.task_form.reset();\n        this.onSaveCompleteSubTask(parent_id);\n      }\n    });\n  }\n  onSaveComplete() {\n    // this.task_form.reset();\n    this.buildForm('', '');\n  }\n  onSaveCompleteSubTask(parent_id) {\n    this.task_form.reset();\n    this.buildForm('', parent_id);\n    console.log(\"Reset Form\");\n  }\n}\nAddTaskService.ɵfac = function AddTaskService_Factory(t) {\n  return new (t || AddTaskService)(i0.ɵɵinject(i1.FormBuilder), i0.ɵɵinject(i2.TaskService), i0.ɵɵinject(i3.TaskListService), i0.ɵɵinject(i4.SubTaskService), i0.ɵɵinject(i5.SubTaskListService));\n};\nAddTaskService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AddTaskService,\n  factory: AddTaskService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["AddTaskService","constructor","formBuilder","task_service","task_list_service","sub_task_service","sub_task_list_service","ngOnInit","buildForm","console","log","name","parent_id","task_form","group","id","parent_task","child_task","create_by","create_date","status","selected","temp","Date","task","toLocaleDateString","displayTask","reset","patchValue","saveTask","t","value","createTask","subscribe","error","err","reloadTaskList","onSaveComplete","saveSubTask","getSubTaskList","onSaveCompleteSubTask","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\DELL\\source\\repos\\MondayApp\\ClientApp\\src\\services\\add-task-service\\add-task.service.ts"],"sourcesContent":["import { Injectable, OnInit } from '@angular/core';\r\nimport { TaskListService } from '../task-list-service/task-list.service';\r\nimport { Task } from 'src/app/task';\r\nimport { FormBuilder, FormGroup, FormsModule, FormControlName, FormControl } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { TaskService } from '../task-service/task.service';\r\nimport { SubTaskService } from '../sub-task-service/sub-task.service';\r\nimport { SubTaskListService } from '../sub-task-list-service/sub-task-list.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AddTaskService implements OnInit {\r\n  task_form!: FormGroup;\r\n  task!: Task;\r\n\r\n  constructor(private formBuilder: FormBuilder, private task_service: TaskService, \r\n              private task_list_service: TaskListService, private sub_task_service: SubTaskService,\r\n              private sub_task_list_service: SubTaskListService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm('','');\r\n    console.log(\"ngOnInit\");\r\n  }\r\n\r\n  buildForm(name: string, parent_id: string ) {\r\n    console.log('name:' + name);\r\n    console.log('parent_id' + parent_id);\r\n\r\n    this.task_form = this.formBuilder.group({\r\n      id: '',\r\n      name: '',\r\n      parent_task: '',\r\n      child_task: [],\r\n      create_by: '',\r\n      create_date: '',\r\n      status: '',\r\n      selected: false\r\n    });\r\n\r\n    let temp = new Date;\r\n\r\n    const task: Task = { id: \"\", name: name, parent_task: parent_id, child_task: [], create_by: \"\", create_date: temp.toLocaleDateString(\"en-CA\"), status: \"bg-gray-300\", selected: false };\r\n\r\n    this.displayTask(task);\r\n  }\r\n\r\n  displayTask(task: Task): void {\r\n\r\n    console.log(\"Display task\" + task.name);\r\n\r\n    if (this.task_form) {\r\n      this.task_form.reset();\r\n    }\r\n\r\n    this.task = task;\r\n\r\n    this.task_form.patchValue({\r\n      id: this.task.id,\r\n      name: this.task.name,\r\n      parent_task: this.task.parent_task,\r\n      child_task: this.task.child_task,\r\n      create_by: this.task.create_by,\r\n      create_date: this.task.create_date,\r\n      status: this.task.status,\r\n      selected: this.task.selected\r\n    });\r\n  }\r\n\r\n  saveTask() {\r\n    const t: Task = { ...this.task, ...this.task_form.value };\r\n    this.task_service.createTask(t).subscribe({\r\n      error: (err) => {\r\n        console.log(\"Thêm thành công\");\r\n        this.task_list_service.reloadTaskList();\r\n        this.onSaveComplete();\r\n      }\r\n    });\r\n  }\r\n\r\n  saveSubTask(parent_id: string) {\r\n    const t: Task = { ...this.task, ...this.task_form.value };\r\n    this.sub_task_service.createTask(t).subscribe({\r\n      error: (err) => {\r\n        console.log(\"Thêm thành công\");\r\n        this.sub_task_list_service.getSubTaskList();\r\n        // this.task_form.reset();\r\n        this.onSaveCompleteSubTask(parent_id);\r\n      }\r\n    });\r\n  }\r\n\r\n  onSaveComplete(): void {\r\n    // this.task_form.reset();\r\n    this.buildForm('','');\r\n  }\r\n\r\n  onSaveCompleteSubTask(parent_id: string) {\r\n    this.task_form.reset();\r\n    this.buildForm('',parent_id);\r\n    console.log(\"Reset Form\");\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}