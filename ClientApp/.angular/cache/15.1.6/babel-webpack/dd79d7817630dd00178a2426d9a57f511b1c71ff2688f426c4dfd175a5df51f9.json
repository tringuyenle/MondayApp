{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SubTaskService {\n  constructor(http_client) {\n    this.http_client = http_client;\n    this.url = \"http://localhost:5157/api/SubTask\";\n  }\n  getAllSubTask() {\n    return this.http_client.get;\n  }\n  getSubTaskList(parent_id) {\n    let temp = this.url + `/${parent_id}`;\n    return this.http_client.get(temp);\n  }\n  createTask(new_task) {\n    new_task.id = \"\";\n    return this.http_client.post(this.url, new_task);\n  }\n  //if flag is true, httpDelete one subtask, id -> id of subtask\n  //else httpDelete all subtask have same parent task, id -> id of parent task\n  deleteSubTask(id, flag) {\n    let temp = this.url + `/${id}` + `?flag=${flag}`;\n    return this.http_client.delete(temp);\n  }\n}\nSubTaskService.ɵfac = function SubTaskService_Factory(t) {\n  return new (t || SubTaskService)(i0.ɵɵinject(i1.HttpClient));\n};\nSubTaskService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SubTaskService,\n  factory: SubTaskService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAIzBC,YAAoBC,WAAuB;IAAvB,gBAAW,GAAXA,WAAW;IAFd,QAAG,GAAG,mCAAmC;EAEZ;EAE9CC,aAAa;IACX,OAAO,IAAI,CAACD,WAAW,CAACE,GAAW;EACrC;EAEAC,cAAc,CAACC,SAAiB;IAC9B,IAAIC,IAAI,GAAG,IAAI,CAACC,GAAG,GAAG,IAAIF,SAAS,EAAE;IAErC,OAAO,IAAI,CAACJ,WAAW,CAACE,GAAG,CAASG,IAAI,CAAC;EAC3C;EAEAE,UAAU,CAACC,QAAc;IACvBA,QAAQ,CAACC,EAAE,GAAG,EAAE;IAEhB,OAAO,IAAI,CAACT,WAAW,CAACU,IAAI,CAAO,IAAI,CAACJ,GAAG,EAAEE,QAAQ,CAAC;EACxD;EAEA;EACA;EACAG,aAAa,CAACF,EAAU,EAAEG,IAAa;IACrC,IAAIP,IAAI,GAAG,IAAI,CAACC,GAAG,GAAG,IAAIG,EAAE,EAAE,GAAG,SAASG,IAAI,EAAE;IAChD,OAAO,IAAI,CAACZ,WAAW,CAACa,MAAM,CAAOR,IAAI,CAAC;EAC5C;;AA3BWP,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAgB,SAAdhB,cAAc;EAAAiB,YAFb;AAAM","names":["SubTaskService","constructor","http_client","getAllSubTask","get","getSubTaskList","parent_id","temp","url","createTask","new_task","id","post","deleteSubTask","flag","delete","factory","providedIn"],"sourceRoot":"","sources":["E:\\.NetCoreApp\\MondayApp\\ClientApp\\src\\services\\sub-task-service\\sub-task.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Task } from 'src/app/task';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SubTaskService {\r\n\r\n  private readonly url = \"http://localhost:5157/api/SubTask\";\r\n\r\n  constructor(private http_client: HttpClient) {}\r\n\r\n  getAllSubTask(): Observable<Task[]> {\r\n    return this.http_client.get<Task[]>\r\n  }\r\n\r\n  getSubTaskList(parent_id: string): Observable<Task[]> {\r\n    let temp = this.url + `/${parent_id}`;\r\n\r\n    return this.http_client.get<Task[]>(temp);\r\n  }\r\n\r\n  createTask(new_task: Task): Observable<Task> {\r\n    new_task.id = \"\";\r\n\r\n    return this.http_client.post<Task>(this.url, new_task);\r\n  }\r\n\r\n  //if flag is true, httpDelete one subtask, id -> id of subtask\r\n  //else httpDelete all subtask have same parent task, id -> id of parent task\r\n  deleteSubTask(id: string, flag: boolean): Observable<Task> {\r\n    let temp = this.url + `/${id}` + `?flag=${flag}`;\r\n    return this.http_client.delete<Task>(temp);\r\n  }\r\n\r\n  \r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}