{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CdkDropList, CdkDrag, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { CdkListbox, CdkOption } from '@angular/cdk/listbox';\nimport { NgFor, JsonPipe } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TaskListService } from 'src/services/task-list-service/task-list.service';\nimport { AddTaskService } from 'src/services/add-task-service/add-task.service';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatNativeDateModule } from '@angular/material/core';\nlet ExpandgroupComponent = class ExpandgroupComponent {\n  addPerson() {\n    this.personlist.push(this.person);\n  }\n  editColor(task) {\n    if (this.taskid === '') this.taskid = task.id;else this.taskid = '';\n  }\n  editColorSuccess(c, t) {\n    this.color = c;\n    t.status = c;\n    this.save(t);\n  }\n  editPerson(task) {\n    if (this.personid === '') this.personid = task.id;else if (this.personid == 'add') this.personid = task.id;else this.personid = '';\n  }\n  clickInputAddPerson(task) {\n    this.personid = 'add';\n  }\n  editPersonSuccess(p, t) {\n    t.create_by = p;\n    this.save(t);\n  }\n  setdate(t) {\n    t.create_date = document.getElementById(t.id + \"date\").value;\n    this.save(t);\n  }\n  save(task) {\n    this.edit_task_service.saveCell(task);\n  }\n  selectAll() {\n    for (var i = 0; i < this.task_list_service.task_list.length; i++) {\n      this.task_list_service.task_list[i].selected = this.selectedAll;\n    }\n  }\n  checkIfAllSelected() {\n    this.selectedAll = this.task_list_service.task_list.every(function (item) {\n      return item.selected == true;\n    });\n  }\n  onChange(result) {\n    console.log('onChange: ', result);\n  }\n  changetocollapse() {\n    this.collapseeChange.emit(true);\n  }\n  drop(event) {\n    moveItemInArray(this.task_list_service.task_list, event.previousIndex, event.currentIndex);\n  }\n  ngOnInit() {\n    this.task_list_service.getTaskList();\n    this.add_task_service.buildForm('');\n  }\n  constructor(task_list_service, add_task_service, edit_task_service, task_service) {\n    this.task_list_service = task_list_service;\n    this.add_task_service = add_task_service;\n    this.edit_task_service = edit_task_service;\n    this.task_service = task_service;\n    this.collapsee = false;\n    this.collapseeChange = new EventEmitter();\n    this.colorlist = ['bg-green-400', 'bg-amber-400', 'bg-red-500', 'bg-gray-300'];\n    this.color = this.colorlist[2];\n    this.taskid = '';\n    this.Status = new Map([[\"bg-green-400\", \"Done\"], ['bg-amber-400', 'Working on it'], ['bg-red-500', 'Stuck'], ['bg-gray-300', 'None']]);\n    //check selected Person Column\n    this.personid = '';\n    this.personlist = ['Thành', 'Quân', 'Nguyên'];\n    this.person = '';\n  }\n};\n__decorate([Input()], ExpandgroupComponent.prototype, \"collapsee\", void 0);\n__decorate([Output()], ExpandgroupComponent.prototype, \"collapseeChange\", void 0);\nExpandgroupComponent = __decorate([Component({\n  selector: 'app-expandgroup',\n  templateUrl: './expandgroup.component.html',\n  styleUrls: ['./expandgroup.component.css'],\n  standalone: true,\n  providers: [TaskListService, AddTaskService],\n  imports: [CdkDropList, NgFor, CdkDrag, FormsModule, ReactiveFormsModule, CdkListbox, CdkOption, JsonPipe, NgIf, MatFormFieldModule, MatInputModule, MatDatepickerModule, MatNativeDateModule]\n})], ExpandgroupComponent);\nexport { ExpandgroupComponent };","map":{"version":3,"mappings":"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","names":["Component","EventEmitter","Input","Output","CdkDropList","CdkDrag","moveItemInArray","CdkListbox","CdkOption","NgFor","JsonPipe","FormsModule","ReactiveFormsModule","TaskListService","AddTaskService","MatDatepickerModule","MatInputModule","MatFormFieldModule","MatNativeDateModule","ExpandgroupComponent","addPerson","personlist","push","person","editColor","task","taskid","id","editColorSuccess","c","t","color","status","save","editPerson","personid","clickInputAddPerson","editPersonSuccess","p","create_by","setdate","create_date","document","getElementById","value","edit_task_service","saveCell","selectAll","i","task_list_service","task_list","length","selected","selectedAll","checkIfAllSelected","every","item","onChange","result","console","log","changetocollapse","collapseeChange","emit","drop","event","previousIndex","currentIndex","ngOnInit","getTaskList","add_task_service","buildForm","constructor","task_service","colorlist","Map","__decorate","selector","templateUrl","styleUrls","standalone","providers","imports","NgIf"],"sourceRoot":"","sources":["E:\\WorkSpace\\MondayApp\\ClientApp\\src\\app\\group\\expandgroup\\expandgroup.component.ts"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport {CdkDragDrop, CdkDropList, CdkDrag, moveItemInArray} from '@angular/cdk/drag-drop';\r\nimport {CdkListbox, CdkOption} from '@angular/cdk/listbox';\r\nimport {NgFor, JsonPipe} from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { TaskListService } from 'src/services/task-list-service/task-list.service';\r\nimport { AddTaskService } from 'src/services/add-task-service/add-task.service';\r\nimport {  } from '@angular/common';\r\nimport { EditTaskService } from 'src/services/edit-task-service/edit-task.service';\r\n\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatNativeDateModule} from '@angular/material/core';\r\nimport { Task } from 'src/app/task';\r\nimport { TaskService } from 'src/services/task-service/task.service';\r\n\r\n@Component({\r\n  selector: 'app-expandgroup',\r\n  templateUrl: './expandgroup.component.html',\r\n  styleUrls: ['./expandgroup.component.css'],\r\n  standalone: true,\r\n  providers: [TaskListService, AddTaskService],\r\n  imports: [CdkDropList, NgFor, CdkDrag, FormsModule, ReactiveFormsModule, CdkListbox, CdkOption, JsonPipe, NgIf, MatFormFieldModule, MatInputModule, MatDatepickerModule, MatNativeDateModule],\r\n})\r\nexport class ExpandgroupComponent implements OnInit {\r\n  @Input() collapsee: boolean = false;\r\n  @Output() collapseeChange = new EventEmitter<boolean>();\r\n\r\n  colorlist: string[] = ['bg-green-400', 'bg-amber-400', 'bg-red-500', 'bg-gray-300'];\r\n  color: string = this.colorlist[2];\r\n  taskid: string = '';\r\n  Status = new Map<string, string>([[\"bg-green-400\", \"Done\"], ['bg-amber-400', 'Working on it'], ['bg-red-500', 'Stuck'], ['bg-gray-300', 'None']]);\r\n  \r\n  selectedAll: any;\r\n\r\n  //check selected Person Column\r\n  personid: string = '';\r\n  personlist: string[] = ['Thành', 'Quân', 'Nguyên'];\r\n  person: string = '';\r\n\r\n  addPerson(): void {\r\n    this.personlist.push(this.person);\r\n  }\r\n\r\n  editColor(task: Task): void {\r\n    if (this.taskid === '') this.taskid = task.id;\r\n    else this.taskid = '';\r\n  }\r\n  editColorSuccess(c: string, t: Task): void {\r\n    this.color = c;\r\n    t.status = c;\r\n    this.save(t);\r\n  }\r\n\r\n  editPerson(task: Task): void {\r\n    if (this.personid === '') this.personid = task.id;\r\n    else if (this.personid == 'add') this.personid = task.id;\r\n    else this.personid = '';\r\n  }\r\n\r\n  clickInputAddPerson(task: Task): void {\r\n    this.personid = 'add';\r\n  }\r\n\r\n  editPersonSuccess(p: string, t: Task): void {\r\n    t.create_by = p;\r\n    this.save(t);\r\n  }\r\n\r\n  setdate(t: Task): void {\r\n    t.create_date = (<HTMLInputElement>document.getElementById(t.id+\"date\")).value;\r\n    this.save(t);\r\n  }\r\n\r\n  save(task: Task) {\r\n    this.edit_task_service.saveCell(task)\r\n  }\r\n\r\n  selectAll() {\r\n    for (var i = 0; i < this.task_list_service.task_list.length; i++) {\r\n      this.task_list_service.task_list[i].selected = this.selectedAll;\r\n    }\r\n  }\r\n\r\n  checkIfAllSelected() {\r\n    this.selectedAll = this.task_list_service.task_list.every(function(item:any) {\r\n        return item.selected == true;\r\n      })\r\n  }\r\n\r\n  onChange(result: Date): void {\r\n    console.log('onChange: ', result);\r\n  }\r\n\r\n  changetocollapse() {\r\n    this.collapseeChange.emit(true);\r\n  }\r\n\r\n  drop(event: CdkDragDrop<string[]>) {\r\n    moveItemInArray(this.task_list_service.task_list, event.previousIndex, event.currentIndex);\r\n  }\r\n  \r\n  ngOnInit(): void {\r\n    this.task_list_service.getTaskList();\r\n    this.add_task_service.buildForm('');\r\n  }\r\n\r\n  constructor(public task_list_service: TaskListService, public add_task_service: AddTaskService, public edit_task_service: EditTaskService, private task_service: TaskService) {}\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}