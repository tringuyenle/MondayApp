{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/services/task-service/task.service\";\nexport class AddTaskComponent {\n  constructor(fb, route, task_service) {\n    this.fb = fb;\n    this.route = route;\n    this.task_service = task_service;\n    this.mess = \"\";\n  }\n  ngOnInit() {\n    this.task_form = this.fb.group({\n      id: '',\n      name: '',\n      person: '',\n      child_task: [],\n      create_by: '',\n      create_date: '',\n      status: '',\n      selected: false\n    });\n    this.sub = this.route.paramMap.subscribe(param => {\n      let temp = param.get('id');\n      var new_name = \"\";\n      if (temp) {\n        new_name = temp;\n      }\n      // if(id == '0') {\n      //   const task: Task = {id: \"0\", name: \"\", parent_task: \"\", child_task: [], create_by: \"\", create_date: \"\", status: \"\",};\n      //   this.displayTask(task);\n      // }\n      // else {\n      //   this.getTask(id);\n      // }\n      const task = {\n        id: \"0\",\n        name: new_name,\n        parent_task: \"\",\n        child_task: [],\n        create_by: \"\",\n        create_date: \"\",\n        status: \"\",\n        selected: false\n      };\n      this.displayTask(task);\n      this.saveTask();\n    });\n  }\n  displayTask(task) {\n    if (this.task_form) {\n      this.task_form.reset();\n    }\n    this.task = task;\n    this.task_form.patchValue({\n      id: this.task.id,\n      name: this.task.name,\n      parent_task: this.task.parent_task,\n      child_task: this.task.child_task,\n      create_by: this.task.create_by,\n      create_date: this.task.create_date,\n      status: this.task.status\n    });\n  }\n  getTask(id) {\n    this.task_service.getOneTask(id).subscribe({\n      next: task => this.displayTask(task)\n    });\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n  saveTask() {\n    if (this.task_form.valid) {\n      if (this.task_form.dirty) {\n        const t = {\n          ...this.task,\n          ...this.task_form.value\n        };\n        if (t.id === '0') {\n          this.task_service.createTask(t).subscribe({\n            error: () => console.log(\"Thêm thành công\")\n          });\n        } else {\n          this.task_service.updateTask(t).subscribe({\n            error: () => this.mess = \"Chỉnh sửa thành công\"\n          });\n        }\n      } else {\n        this.onSaveComplete();\n      }\n    } else {\n      console.log(\"Task form bị lỗi: dòng 94\");\n    }\n  }\n  onSaveComplete() {\n    this.task_form.reset();\n    // this.router.navigate(['/task'])\n  }\n}\n\nAddTaskComponent.ɵfac = function AddTaskComponent_Factory(t) {\n  return new (t || AddTaskComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.TaskService));\n};\nAddTaskComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddTaskComponent,\n  selectors: [[\"app-add-task\"]],\n  decls: 23,\n  vars: 2,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"formControlName\", \"id\"], [\"type\", \"text\", \"formControlName\", \"name\"], [\"type\", \"text\", \"formControlName\", \"create_by\"], [\"type\", \"text\", \"formControlName\", \"create_date\"], [\"type\", \"submit\"]],\n  template: function AddTaskComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"div\")(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function AddTaskComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.saveTask();\n      });\n      i0.ɵɵelementStart(3, \"div\")(4, \"label\");\n      i0.ɵɵtext(5, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\")(8, \"label\");\n      i0.ɵɵtext(9, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\")(12, \"label\");\n      i0.ɵɵtext(13, \"User create\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\")(16, \"label\");\n      i0.ɵɵtext(17, \"Date create\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"button\", 5);\n      i0.ɵɵtext(20, \"Save\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(21, \"div\");\n      i0.ɵɵtext(22);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.task_form);\n      i0.ɵɵadvance(20);\n      i0.ɵɵtextInterpolate1(\" \", ctx.mess, \" \");\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAYA,OAAM,MAAOA,gBAAgB;EAO3BC,YAAoBC,EAAe,EAAUC,KAAqB,EAAUC,YAAyB;IAAjF,OAAE,GAAFF,EAAE;IAAuB,UAAK,GAALC,KAAK;IAA0B,iBAAY,GAAZC,YAAY;IAFxF,SAAI,GAAW,EAAE;EAEuF;EAExGC,QAAQ;IACJ,IAAI,CAACC,SAAS,GAAG,IAAI,CAACJ,EAAE,CAACK,KAAK,CAAC;MAC7BC,EAAE,EAAE,EAAE;MACNC,IAAI,EAAE,EAAE;MACRC,MAAM,EAAE,EAAE;MACVC,UAAU,EAAE,EAAE;MACdC,SAAS,EAAE,EAAE;MACbC,WAAW,EAAE,EAAE;MACfC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE;KACX,CAAC;IAEF,IAAI,CAACC,GAAG,GAAG,IAAI,CAACb,KAAK,CAACc,QAAQ,CAACC,SAAS,CAACC,KAAK,IAAG;MAC/C,IAAIC,IAAI,GAAGD,KAAK,CAACE,GAAG,CAAC,IAAI,CAAC;MAC1B,IAAIC,QAAQ,GAAW,EAAE;MACzB,IAAIF,IAAI,EAAE;QACRE,QAAQ,GAAGF,IAAI;;MAEjB;MACA;MACA;MACA;MACA;MACA;MACA;MACA,MAAMG,IAAI,GAAS;QAACf,EAAE,EAAE,GAAG;QAAEC,IAAI,EAAEa,QAAQ;QAAGE,WAAW,EAAE,EAAE;QAAEb,UAAU,EAAE,EAAE;QAAEC,SAAS,EAAE,EAAE;QAAEC,WAAW,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAK,CAAC;MAC3I,IAAI,CAACU,WAAW,CAACF,IAAI,CAAC;MACtB,IAAI,CAACG,QAAQ,EAAE;IACjB,CAAC,CAAC;EACN;EAEAD,WAAW,CAACF,IAAU;IACpB,IAAI,IAAI,CAACjB,SAAS,EAAE;MAClB,IAAI,CAACA,SAAS,CAACqB,KAAK,EAAE;;IAGxB,IAAI,CAACJ,IAAI,GAAGA,IAAI;IAEhB,IAAI,CAACjB,SAAS,CAACsB,UAAU,CAAC;MACxBpB,EAAE,EAAE,IAAI,CAACe,IAAI,CAACf,EAAE;MAChBC,IAAI,EAAE,IAAI,CAACc,IAAI,CAACd,IAAI;MACpBe,WAAW,EAAE,IAAI,CAACD,IAAI,CAACC,WAAW;MAClCb,UAAU,EAAE,IAAI,CAACY,IAAI,CAACZ,UAAU;MAChCC,SAAS,EAAE,IAAI,CAACW,IAAI,CAACX,SAAS;MAC9BC,WAAW,EAAE,IAAI,CAACU,IAAI,CAACV,WAAW;MAClCC,MAAM,EAAE,IAAI,CAACS,IAAI,CAACT;KACnB,CAAC;EACJ;EAEAe,OAAO,CAACrB,EAAiB;IACvB,IAAI,CAACJ,YAAY,CAAC0B,UAAU,CAACtB,EAAE,CAAC,CAACU,SAAS,CAAC;MACzCa,IAAI,EAAGR,IAAU,IAAK,IAAI,CAACE,WAAW,CAACF,IAAI;KAC5C,CAAC;EACJ;EAEAS,WAAW;IACP,IAAI,CAAChB,GAAG,CAACiB,WAAW,EAAE;EAC1B;EAEAP,QAAQ;IACN,IAAG,IAAI,CAACpB,SAAS,CAAC4B,KAAK,EAAE;MACvB,IAAG,IAAI,CAAC5B,SAAS,CAAC6B,KAAK,EAAE;QACvB,MAAMC,CAAC,GAAS;UAAC,GAAG,IAAI,CAACb,IAAI;UAAE,GAAG,IAAI,CAACjB,SAAS,CAAC+B;QAAK,CAAC;QACvD,IAAGD,CAAC,CAAC5B,EAAE,KAAK,GAAG,EAAE;UACf,IAAI,CAACJ,YAAY,CAACkC,UAAU,CAACF,CAAC,CAAC,CAAClB,SAAS,CAAC;YACxCqB,KAAK,EAAE,MAAMC,OAAO,CAACC,GAAG,CAAC,iBAAiB;WAC3C,CAAC;SACH,MACI;UACH,IAAI,CAACrC,YAAY,CAACsC,UAAU,CAACN,CAAC,CAAC,CAAClB,SAAS,CAAC;YACxCqB,KAAK,EAAE,MAAM,IAAI,CAACI,IAAI,GAAC;WACxB,CAAC;;OAEL,MACI;QACH,IAAI,CAACC,cAAc,EAAE;;KAExB,MACI;MACHJ,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;;EAE5C;EAEAG,cAAc;IACZ,IAAI,CAACtC,SAAS,CAACqB,KAAK,EAAE;IACtB;EACF;;;AA/FW3B,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAA6C;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX7BC,2BAAK;MAGSA;QAAA,OAAYC,cAAU;MAAA,EAAC;MACzBD,2BAAK;MACMA,kBAAE;MAAAA,iBAAQ;MACjBA,2BAAwC;MAC5CA,iBAAM;MACNA,2BAAK;MACMA,oBAAI;MAAAA,iBAAQ;MACnBA,4BAA0C;MAC9CA,iBAAM;MAENA,4BAAK;MACMA,4BAAW;MAAAA,iBAAQ;MAC1BA,4BAA+C;MACnDA,iBAAM;MAENA,4BAAK;MACMA,4BAAW;MAAAA,iBAAQ;MAC1BA,4BAAiD;MACrDA,iBAAM;MAENA,kCAAsB;MAAAA,qBAAI;MAAAA,iBAAS;MAI3CA,4BAAK;MAACA,aAAS;MAAAA,iBAAM;;;MAxBaA,eAAuB;MAAvBA,yCAAuB;MAwBnDA,gBAAS;MAATA,yCAAS","names":["AddTaskComponent","constructor","fb","route","task_service","ngOnInit","task_form","group","id","name","person","child_task","create_by","create_date","status","selected","sub","paramMap","subscribe","param","temp","get","new_name","task","parent_task","displayTask","saveTask","reset","patchValue","getTask","getOneTask","next","ngOnDestroy","unsubscribe","valid","dirty","t","value","createTask","error","console","log","updateTask","mess","onSaveComplete","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\DELL\\source\\repos\\MondayApp\\ClientApp\\src\\app\\boardcontent\\add-task\\add-task.component.ts","C:\\Users\\DELL\\source\\repos\\MondayApp\\ClientApp\\src\\app\\boardcontent\\add-task\\add-task.component.html"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { TaskService } from 'src/services/task-service/task.service';\r\nimport { Task } from 'src/app/task';\r\nimport { FormControlName, FormGroup, FormControl, FormBuilder} from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-add-task',\r\n  templateUrl: './add-task.component.html',\r\n  styleUrls: ['./add-task.component.css']\r\n})\r\nexport class AddTaskComponent implements OnInit, OnDestroy {\r\n\r\n  task_form!: FormGroup;\r\n  task!: Task;\r\n  private sub!: Subscription;\r\n  mess: string = \"\";\r\n\r\n  constructor(private fb: FormBuilder, private route: ActivatedRoute, private task_service: TaskService) {}\r\n\r\n  ngOnInit(): void {\r\n      this.task_form = this.fb.group({\r\n        id: '',\r\n        name: '',\r\n        person: '',\r\n        child_task: [],\r\n        create_by: '',\r\n        create_date: '',\r\n        status: '',\r\n        selected: false\r\n      });\r\n\r\n      this.sub = this.route.paramMap.subscribe(param => {\r\n        let temp = param.get('id');\r\n        var new_name: string = \"\";\r\n        if (temp) {\r\n          new_name = temp;\r\n        }\r\n        // if(id == '0') {\r\n        //   const task: Task = {id: \"0\", name: \"\", parent_task: \"\", child_task: [], create_by: \"\", create_date: \"\", status: \"\",};\r\n        //   this.displayTask(task);\r\n        // }\r\n        // else {\r\n        //   this.getTask(id);\r\n        // }\r\n        const task: Task = {id: \"0\", name: new_name , parent_task: \"\", child_task: [], create_by: \"\", create_date: \"\", status: \"\", selected: false};\r\n        this.displayTask(task);\r\n        this.saveTask();\r\n      });\r\n  }\r\n\r\n  displayTask(task: Task): void {\r\n    if (this.task_form) {\r\n      this.task_form.reset();\r\n    }\r\n\r\n    this.task = task;\r\n\r\n    this.task_form.patchValue({\r\n      id: this.task.id,\r\n      name: this.task.name,\r\n      parent_task: this.task.parent_task,\r\n      child_task: this.task.child_task,\r\n      create_by: this.task.create_by,\r\n      create_date: this.task.create_date,\r\n      status: this.task.status,\r\n    });\r\n  }\r\n\r\n  getTask(id: string | null): void {\r\n    this.task_service.getOneTask(id).subscribe({\r\n      next: (task: Task) => this.displayTask(task)\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n      this.sub.unsubscribe();\r\n  } \r\n\r\n  saveTask(): void {\r\n    if(this.task_form.valid) {\r\n      if(this.task_form.dirty) {\r\n        const t: Task = {...this.task, ...this.task_form.value};\r\n        if(t.id === '0') {\r\n          this.task_service.createTask(t).subscribe({\r\n            error: () => console.log(\"Thêm thành công\")\r\n          });\r\n        }\r\n        else {\r\n          this.task_service.updateTask(t).subscribe({\r\n            error: () => this.mess=\"Chỉnh sửa thành công\"\r\n          });\r\n        }\r\n      }\r\n      else {\r\n        this.onSaveComplete();\r\n      }\r\n    }\r\n    else {\r\n      console.log(\"Task form bị lỗi: dòng 94\");\r\n    }\r\n  }\r\n\r\n  onSaveComplete(): void {\r\n    this.task_form.reset();\r\n    // this.router.navigate(['/task'])\r\n  }\r\n}\r\n\r\n\r\n","\r\n<div>\r\n\r\n    <div>\r\n        <form (ngSubmit)=\"saveTask()\" [formGroup]=\"task_form\">\r\n            <div>\r\n                <label>ID</label>\r\n                <input type=\"text\" formControlName=\"id\">\r\n            </div>\r\n            <div>\r\n                <label>Name</label>\r\n                <input type=\"text\" formControlName=\"name\">\r\n            </div>\r\n\r\n            <div>\r\n                <label>User create</label>\r\n                <input type=\"text\" formControlName=\"create_by\">\r\n            </div>\r\n\r\n            <div>\r\n                <label>Date create</label>\r\n                <input type=\"text\" formControlName=\"create_date\">\r\n            </div>\r\n\r\n            <button type=\"submit\">Save</button>\r\n        </form>\r\n    </div>\r\n\r\n    <div> {{mess}} </div>\r\n\r\n</div>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}