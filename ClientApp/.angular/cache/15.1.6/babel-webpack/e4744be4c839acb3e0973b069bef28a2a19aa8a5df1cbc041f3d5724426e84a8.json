{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../task-service/task.service\";\nexport class EditTaskService {\n  constructor(task_service) {\n    this.task_service = task_service;\n    this.edit_task_id = '';\n    this.colorlist = ['bg-green-400', 'bg-amber-400', 'bg-red-500', 'bg-gray-300'];\n    this.color = this.colorlist[2];\n    this.taskid = '';\n    this.Status = new Map([[\"bg-green-400\", \"Done\"], ['bg-amber-400', 'Working on it'], ['bg-red-500', 'Stuck'], ['bg-gray-300', 'None']]);\n  }\n  editColor(task) {\n    if (this.taskid === '') this.taskid = task.id;else this.taskid = '';\n  }\n  editColorSuccess(c, t) {\n    this.color = c;\n    t.status = c;\n    this.saveCell(t);\n  }\n  editCell(task) {\n    this.edit_task_id = task.id;\n  }\n  setdate(t) {\n    t.create_date = document.getElementById(t.id + \"date\").value;\n    this.saveCell(t);\n  }\n  saveCell(task) {\n    this.task_service.updateTask(task).subscribe({\n      error: () => {\n        this.edit_task_id = '';\n        console.log(\"Chỉnh sửa thành công\");\n      }\n    });\n  }\n}\nEditTaskService.ɵfac = function EditTaskService_Factory(t) {\n  return new (t || EditTaskService)(i0.ɵɵinject(i1.TaskService));\n};\nEditTaskService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EditTaskService,\n  factory: EditTaskService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,eAAe;EAS1BC,YAAoBC,YAAyB;IAAzB,iBAAY,GAAZA,YAAY;IAPhC,iBAAY,GAAW,EAAE;IAEzB,cAAS,GAAa,CAAC,cAAc,EAAE,cAAc,EAAE,YAAY,EAAE,aAAa,CAAC;IACnF,UAAK,GAAW,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC;IACjC,WAAM,GAAW,EAAE;IACnB,WAAM,GAAG,IAAIC,GAAG,CAAiB,CAAC,CAAC,cAAc,EAAE,MAAM,CAAC,EAAE,CAAC,cAAc,EAAE,eAAe,CAAC,EAAE,CAAC,YAAY,EAAE,OAAO,CAAC,EAAE,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC,CAAC;EAEhG;EAGjDC,SAAS,CAACC,IAAU;IAClB,IAAI,IAAI,CAACC,MAAM,KAAK,EAAE,EAAE,IAAI,CAACA,MAAM,GAAGD,IAAI,CAACE,EAAE,CAAC,KACzC,IAAI,CAACD,MAAM,GAAG,EAAE;EACvB;EACAE,gBAAgB,CAACC,CAAS,EAAEC,CAAO;IACjC,IAAI,CAACC,KAAK,GAAGF,CAAC;IACdC,CAAC,CAACE,MAAM,GAAGH,CAAC;IACZ,IAAI,CAACI,QAAQ,CAACH,CAAC,CAAC;EAClB;EAEAI,QAAQ,CAACT,IAAU;IACjB,IAAI,CAACU,YAAY,GAAGV,IAAI,CAACE,EAAE;EAC7B;EAEAS,OAAO,CAACN,CAAO;IACbA,CAAC,CAACO,WAAW,GAAsBC,QAAQ,CAACC,cAAc,CAACT,CAAC,CAACH,EAAE,GAAC,MAAM,CAAE,CAACa,KAAK;IAC9E,IAAI,CAACP,QAAQ,CAACH,CAAC,CAAC;EAClB;EAEAG,QAAQ,CAACR,IAAU;IACjB,IAAI,CAACJ,YAAY,CAACoB,UAAU,CAAChB,IAAI,CAAC,CAACiB,SAAS,CAAC;MAC3CC,KAAK,EAAE,MAAK;QACV,IAAI,CAACR,YAAY,GAAG,EAAE;QACtBS,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACrC;KACD,CAAC;EACJ;;AAtCW1B,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAA2B,SAAf3B,eAAe;EAAA4B,YAFd;AAAM","names":["EditTaskService","constructor","task_service","colorlist","Map","editColor","task","taskid","id","editColorSuccess","c","t","color","status","saveCell","editCell","edit_task_id","setdate","create_date","document","getElementById","value","updateTask","subscribe","error","console","log","factory","providedIn"],"sourceRoot":"","sources":["E:\\.NetCoreApp\\MondayApp\\ClientApp\\src\\services\\edit-task-service\\edit-task.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { TaskService } from '../task-service/task.service';\r\nimport { Task } from 'src/app/task';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EditTaskService {\r\n\r\n  edit_task_id: string = '';\r\n\r\n  colorlist: string[] = ['bg-green-400', 'bg-amber-400', 'bg-red-500', 'bg-gray-300'];\r\n  color: string = this.colorlist[2];\r\n  taskid: string = '';\r\n  Status = new Map<string, string>([[\"bg-green-400\", \"Done\"], ['bg-amber-400', 'Working on it'], ['bg-red-500', 'Stuck'], ['bg-gray-300', 'None']]);\r\n\r\n  constructor(private task_service: TaskService) { }\r\n\r\n\r\n  editColor(task: Task): void {\r\n    if (this.taskid === '') this.taskid = task.id;\r\n    else this.taskid = '';\r\n  }\r\n  editColorSuccess(c: string, t: Task): void {\r\n    this.color = c;\r\n    t.status = c;\r\n    this.saveCell(t);\r\n  }\r\n\r\n  editCell(task: Task): void {\r\n    this.edit_task_id = task.id;\r\n  }\r\n\r\n  setdate(t: Task): void {\r\n    t.create_date = (<HTMLInputElement>document.getElementById(t.id+\"date\")).value;\r\n    this.saveCell(t);\r\n  }\r\n \r\n  saveCell(task: Task): void {\r\n    this.task_service.updateTask(task).subscribe({\r\n      error: () => {\r\n        this.edit_task_id = '';\r\n        console.log(\"Chỉnh sửa thành công\");\r\n      }\r\n    })\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}