{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CdkDropList, CdkDrag, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { CdkListbox, CdkOption } from '@angular/cdk/listbox';\nimport { NgFor, JsonPipe } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TaskListService } from 'src/services/task-list-service/task-list.service';\nimport { AddTaskService } from 'src/services/add-task-service/add-task.service';\nimport { NgIf } from '@angular/common';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatNativeDateModule } from '@angular/material/core';\nlet ExpandgroupComponent = class ExpandgroupComponent {\n  editColor(task) {\n    if (this.taskid === '') this.taskid = task.id;else this.taskid = '';\n  }\n  editColorSuccess(c, t) {\n    this.color = c;\n    this.save(t);\n  }\n  save(task) {\n    this.task_service.updateTask(task).subscribe({\n      error: () => {\n        console.log(\"Da update\");\n        this.task_list_service.reloadTaskList();\n      }\n    });\n  }\n  selectAll() {\n    for (var i = 0; i < this.task_list_service.task_list.length; i++) {\n      this.task_list_service.task_list[i].selected = this.selectedAll;\n    }\n  }\n  checkIfAllSelected() {\n    this.selectedAll = this.task_list_service.task_list.every(function (item) {\n      return item.selected == true;\n    });\n  }\n  onChange(result) {\n    console.log('onChange: ', result);\n  }\n  changetocollapse() {\n    this.collapseeChange.emit(true);\n  }\n  drop(event) {\n    moveItemInArray(this.task_list_service.task_list, event.previousIndex, event.currentIndex);\n  }\n  ngOnInit() {\n    this.task_list_service.getTaskList();\n    this.add_task_service.buildForm('');\n  }\n  constructor(task_list_service, add_task_service, edit_task_service, task_service) {\n    this.task_list_service = task_list_service;\n    this.add_task_service = add_task_service;\n    this.edit_task_service = edit_task_service;\n    this.task_service = task_service;\n    this.collapsee = false;\n    this.collapseeChange = new EventEmitter();\n    this.colorlist = ['bg-green-400', 'bg-amber-400', 'bg-red-500', 'bg-gray-300'];\n    this.color = this.colorlist[2];\n    this.taskid = '';\n    this.Status = new Map([[\"bg-green-400\", \"Done\"], ['bg-amber-400', 'Working on it'], ['bg-red-500', 'Stuck'], ['bg-gray-300', 'None']]);\n  }\n};\n__decorate([Input()], ExpandgroupComponent.prototype, \"collapsee\", void 0);\n__decorate([Output()], ExpandgroupComponent.prototype, \"collapseeChange\", void 0);\nExpandgroupComponent = __decorate([Component({\n  selector: 'app-expandgroup',\n  templateUrl: './expandgroup.component.html',\n  styleUrls: ['./expandgroup.component.css'],\n  standalone: true,\n  providers: [TaskListService, AddTaskService],\n  imports: [CdkDropList, NgFor, CdkDrag, FormsModule, ReactiveFormsModule, CdkListbox, CdkOption, JsonPipe, NgIf, MatFormFieldModule, MatInputModule, MatDatepickerModule, MatNativeDateModule]\n})], ExpandgroupComponent);\nexport { ExpandgroupComponent };","map":{"version":3,"mappings":"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","names":["Component","EventEmitter","Input","Output","CdkDropList","CdkDrag","moveItemInArray","CdkListbox","CdkOption","NgFor","JsonPipe","FormsModule","ReactiveFormsModule","TaskListService","AddTaskService","NgIf","MatDatepickerModule","MatInputModule","MatFormFieldModule","MatNativeDateModule","ExpandgroupComponent","editColor","task","taskid","id","editColorSuccess","c","t","color","save","task_service","updateTask","subscribe","error","console","log","task_list_service","reloadTaskList","selectAll","i","task_list","length","selected","selectedAll","checkIfAllSelected","every","item","onChange","result","changetocollapse","collapseeChange","emit","drop","event","previousIndex","currentIndex","ngOnInit","getTaskList","add_task_service","buildForm","constructor","edit_task_service","colorlist","Map","__decorate","selector","templateUrl","styleUrls","standalone","providers","imports"],"sourceRoot":"","sources":["C:\\Users\\DELL\\source\\repos\\MondayApp\\ClientApp\\src\\app\\group\\expandgroup\\expandgroup.component.ts"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Inject,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatCalendar} from '@angular/material/datepicker';\r\nimport {Subject} from 'rxjs';\r\nimport {takeUntil} from 'rxjs/operators';\r\nimport {CdkDragDrop, CdkDropList, CdkDrag, moveItemInArray} from '@angular/cdk/drag-drop';\r\nimport {CdkListbox, CdkOption} from '@angular/cdk/listbox';\r\nimport {NgFor, JsonPipe} from '@angular/common';\r\nimport { FormBuilder, FormGroup, FormsModule, FormControlName, FormControl } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { TaskListService } from 'src/services/task-list-service/task-list.service';\r\nimport { AddTaskService } from 'src/services/add-task-service/add-task.service';\r\nimport { RouterModule } from '@angular/router';\r\nimport { getISOWeek } from 'date-fns';\r\n\r\nimport { en_US, NzI18nService, zh_CN } from 'ng-zorro-antd/i18n';\r\nimport { NgIf } from '@angular/common';\r\nimport { EditTaskService } from 'src/services/edit-task-service/edit-task.service';\r\n\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatNativeDateModule} from '@angular/material/core';\r\nimport { Task } from 'src/app/task';\r\nimport { TaskService } from 'src/services/task-service/task.service';\r\n\r\n@Component({\r\n  selector: 'app-expandgroup',\r\n  templateUrl: './expandgroup.component.html',\r\n  styleUrls: ['./expandgroup.component.css'],\r\n  standalone: true,\r\n  providers: [TaskListService, AddTaskService],\r\n  imports: [CdkDropList, NgFor, CdkDrag, FormsModule, ReactiveFormsModule, CdkListbox, CdkOption, JsonPipe, NgIf, MatFormFieldModule, MatInputModule, MatDatepickerModule, MatNativeDateModule],\r\n})\r\nexport class ExpandgroupComponent implements OnInit {\r\n  @Input() collapsee: boolean = false;\r\n  @Output() collapseeChange = new EventEmitter<boolean>();\r\n\r\n  colorlist: string[] = ['bg-green-400', 'bg-amber-400', 'bg-red-500', 'bg-gray-300'];\r\n  color: string = this.colorlist[2];\r\n  taskid: string = '';\r\n  Status = new Map<string, string>([[\"bg-green-400\", \"Done\"], ['bg-amber-400', 'Working on it'], ['bg-red-500', 'Stuck'], ['bg-gray-300', 'None']]);\r\n  selectedAll: any;\r\n\r\n  editColor(task: Task): void {\r\n    if (this.taskid === '') this.taskid = task.id;\r\n    else this.taskid = '';\r\n  }\r\n  editColorSuccess(c: string, t: Task): void {\r\n    this.color = c;\r\n    this.save(t);\r\n  }\r\n\r\n  save(task: Task) {\r\n    this.task_service.updateTask(task).subscribe({\r\n      error: () => {\r\n        console.log(\"Da update\");\r\n        this.task_list_service.reloadTaskList();\r\n      }\r\n    })\r\n  }\r\n\r\n  selectAll() {\r\n    for (var i = 0; i < this.task_list_service.task_list.length; i++) {\r\n      this.task_list_service.task_list[i].selected = this.selectedAll;\r\n    }\r\n  }\r\n\r\n  checkIfAllSelected() {\r\n    this.selectedAll = this.task_list_service.task_list.every(function(item:any) {\r\n        return item.selected == true;\r\n      })\r\n  }\r\n\r\n  onChange(result: Date): void {\r\n    console.log('onChange: ', result);\r\n  }\r\n\r\n  changetocollapse() {\r\n    this.collapseeChange.emit(true);\r\n  }\r\n\r\n  drop(event: CdkDragDrop<string[]>) {\r\n    moveItemInArray(this.task_list_service.task_list, event.previousIndex, event.currentIndex);\r\n  }\r\n  \r\n  ngOnInit(): void {\r\n    this.task_list_service.getTaskList();\r\n    this.add_task_service.buildForm('');\r\n  }\r\n\r\n  constructor(public task_list_service: TaskListService, public add_task_service: AddTaskService, public edit_task_service: EditTaskService, private task_service: TaskService) {}\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}