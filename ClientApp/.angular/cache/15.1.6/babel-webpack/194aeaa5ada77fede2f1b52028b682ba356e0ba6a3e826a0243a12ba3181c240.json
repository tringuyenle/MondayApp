{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nlet GroupTaskListService = class GroupTaskListService {\n  constructor(group_task_service, task_service, group_task) {\n    this.group_task_service = group_task_service;\n    this.task_service = task_service;\n    this.group_task = group_task;\n    this.group_task_list = [];\n  }\n  getGroupTaskList() {\n    this.group_task_service.getGroupTaskList().subscribe(data => {\n      this.group_task_list = data;\n    });\n  }\n  reloadList() {\n    this.getGroupTaskList();\n  }\n  deleteGroupTask(group_task) {\n    if (confirm(`Are you sure to delete Group Task: ${group_task.name}`)) {\n      this.task_service.deleteTask(group_task.id, false).subscribe({\n        error: () => console.log(\"Delete all task!\")\n      });\n      this.group_task_service.deleteGroupTask(group_task.id).subscribe({\n        error: () => {\n          console.log(\"Delete group task\");\n        }\n      });\n    }\n  }\n};\nGroupTaskListService = __decorate([Injectable({\n  providedIn: 'root'\n})], GroupTaskListService);\nexport { GroupTaskListService };","map":{"version":3,"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAQnC,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAI/BC,YAAoBC,kBAAoC,EAAUC,YAAyB,EACvEC,UAAU;IADV,uBAAkB,GAAlBF,kBAAkB;IAA4B,iBAAY,GAAZC,YAAY;IAC1D,eAAU,GAAVC,UAAU;IAH9B,oBAAe,GAAgB,EAAE;EAGC;EAElCC,gBAAgB;IACd,IAAI,CAACH,kBAAkB,CAACG,gBAAgB,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MAC1D,IAAI,CAACC,eAAe,GAAGD,IAAI;IAC7B,CAAC,CAAC;EACJ;EAEAE,UAAU;IACR,IAAI,CAACJ,gBAAgB,EAAE;EACzB;EAEAK,eAAe,CAACN,UAAqB;IACnC,IAAGO,OAAO,CAAC,sCAAsCP,UAAU,CAACQ,IAAI,EAAE,CAAC,EAAE;MACnE,IAAI,CAACT,YAAY,CAACU,UAAU,CAACT,UAAU,CAACU,EAAE,EAAE,KAAK,CAAC,CAACR,SAAS,CAAC;QAC3DS,KAAK,EAAE,MAAMC,OAAO,CAACC,GAAG,CAAC,kBAAkB;OAC5C,CAAC;MAEF,IAAI,CAACf,kBAAkB,CAACQ,eAAe,CAACN,UAAU,CAACU,EAAE,CAAC,CAACR,SAAS,CAAC;QAC/DS,KAAK,EAAE,MAAK;UACVC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;QAElC;OACD,CAAC;;EAIN;CACD;AAjCYjB,oBAAoB,eAHhCD,UAAU,CAAC;EACVmB,UAAU,EAAE;CACb,CAAC,GACWlB,oBAAoB,CAiChC;SAjCYA,oBAAoB","names":["Injectable","GroupTaskListService","constructor","group_task_service","task_service","group_task","getGroupTaskList","subscribe","data","group_task_list","reloadList","deleteGroupTask","confirm","name","deleteTask","id","error","console","log","providedIn"],"sourceRoot":"","sources":["E:\\.NetCoreApp\\MondayApp\\ClientApp\\src\\services\\group-task-list-service\\group-task-list.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Grouptask } from 'src/app/grouptask';\r\nimport { GroupTaskService } from '../group-task-service/group-task.service';\r\nimport { TaskService } from '../task-service/task.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GroupTaskListService {\r\n\r\n  group_task_list: Grouptask[] = [];\r\n\r\n  constructor(private group_task_service: GroupTaskService, private task_service: TaskService, \r\n              private group_task) { }\r\n\r\n  getGroupTaskList() {\r\n    this.group_task_service.getGroupTaskList().subscribe(data => {\r\n      this.group_task_list = data;\r\n    });\r\n  }\r\n\r\n  reloadList() {\r\n    this.getGroupTaskList();\r\n  }\r\n\r\n  deleteGroupTask(group_task: Grouptask) {\r\n    if(confirm(`Are you sure to delete Group Task: ${group_task.name}`)) {\r\n      this.task_service.deleteTask(group_task.id, false).subscribe({\r\n        error: () => console.log(\"Delete all task!\")\r\n      });\r\n\r\n      this.group_task_service.deleteGroupTask(group_task.id).subscribe({\r\n        error: () => {\r\n          console.log(\"Delete group task\");\r\n\r\n        }\r\n      })\r\n\r\n\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}