{"ast":null,"code":"import { moveItemInArray } from '@angular/cdk/drag-drop';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/services/sub-task-list-service/sub-task-list.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/cdk/drag-drop\";\nfunction SubtaskComponent_div_19_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 24)(1, \"div\", 1)(2, \"div\", 25)(3, \"div\", 3)(4, \"div\", 4)(5, \"input\", 5);\n    i0.ɵɵlistener(\"ngModelChange\", function SubtaskComponent_div_19_div_1_Template_input_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const subtask_r1 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(subtask_r1.selected = $event);\n    })(\"change\", function SubtaskComponent_div_19_div_1_Template_input_change_5_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.checkIfAllSelected());\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 26);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const subtask_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", subtask_r1.selected);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", subtask_r1.name, \" \");\n  }\n}\nfunction SubtaskComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, SubtaskComponent_div_19_div_1_Template, 8, 2, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const subtask_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", subtask_r1.parent_task == ctx_r0.parent_id);\n  }\n}\nexport class SubtaskComponent {\n  selectAll() {}\n  ngOnInit() {\n    this.sub_task_list_service.getSubTaskList();\n    console.log(this.sub_task_list_service.s);\n  }\n  drop(event) {\n    moveItemInArray(this.sub_task_list_service.sub_task_list, event.previousIndex, event.currentIndex);\n  }\n  checkIfAllSelected() {\n    this.selectedAll = this.sub_task_list_service.sub_task_list.every(function (item) {\n      return item.selected == true;\n    });\n  }\n  // setdate(t: Task): void {\n  //   t.create_date = (<HTMLInputElement>document.getElementById(t.id+\"date\")).value;\n  //   this.save(t);\n  // }\n  // save(task: Task) {\n  //   this.edit_task_service.saveCell(task)\n  // }\n  constructor(sub_task_list_service) {\n    this.sub_task_list_service = sub_task_list_service;\n    this.parent_id = '';\n  }\n}\nSubtaskComponent.ɵfac = function SubtaskComponent_Factory(t) {\n  return new (t || SubtaskComponent)(i0.ɵɵdirectiveInject(i1.SubTaskListService));\n};\nSubtaskComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SubtaskComponent,\n  selectors: [[\"app-subtask\"]],\n  inputs: {\n    parent_id: \"parent_id\"\n  },\n  decls: 35,\n  vars: 2,\n  consts: [[1, \"ml-2\", \"pb-8\", \"pt-3\", \"pl-8\", \"border-solid\", \"border-l-2\", \"border-t-2\", \"border-l-blue-500\"], [1, \"flex\", \"flex-col\", \"p-1\", \"py-0\"], [1, \"flex\", \"flex-col\", \"border-solid\", \"py-0\", \"border-l-blue-500\", \"border-gray-200\", \"border-t-2\", \"border-l-8\", \"rounded-tl-md\"], [1, \"flex\", \"items-center\"], [1, \"p-2\", \"border-r-2\", \"border-solid\", \"border-gray-200\"], [\"type\", \"checkbox\", 1, \"border-gray-200\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [1, \"w-1/3\", \"flex\", \"justify-center\", \"p-2\", \"border-r-2\", \"border-solid\", \"border-gray-200\"], [1, \"w-40\", \"flex\", \"justify-center\", \"p-2\", \"border-r-2\", \"border-solid\", \"border-gray-200\"], [1, \"relative\", \"w-40\", \"flex\", \"justify-center\", \"p-2\", \"border-r-2\", \"border-solid\", \"border-gray-200\"], [\"cdkDropList\", \"\", 3, \"cdkDropListDropped\"], [\"cdkDrag\", \"\", \"class\", \"flex flex-col\", 4, \"ngFor\", \"ngForOf\"], [1, \"group\"], [1, \"pl-2\", \"h-14\", \"absolute\", \"left-px\"], [1, \"p-1\", \"hover:bg-slate-300\", \"rounded-md\"], [1, \"group-hover:fill-currentColor\"], [\"viewBox\", \"0 0 20 20\", \"fill\", \"currentColor\", \"width\", \"20\", \"height\", \"20\", \"aria-hidden\", \"true\", \"data-testid\", \"icon\", 1, \"icon_4b23d45e02\", \"noFocusStyle_cff5f5a050\"], [\"d\", \"M6 10.5C6 11.3284 5.32843 12 4.5 12 3.67157 12 3 11.3284 3 10.5 3 9.67157 3.67157 9 4.5 9 5.32843 9 6 9.67157 6 10.5zM11.8333 10.5C11.8333 11.3284 11.1618 12 10.3333 12 9.50492 12 8.83334 11.3284 8.83334 10.5 8.83334 9.67157 9.50492 9 10.3333 9 11.1618 9 11.8333 9.67157 11.8333 10.5zM17.6667 10.5C17.6667 11.3284 16.9951 12 16.1667 12 15.3383 12 14.6667 11.3284 14.6667 10.5 14.6667 9.67157 15.3383 9 16.1667 9 16.9951 9 17.6667 9.67157 17.6667 10.5z\", \"fill\", \"white\", 1, \"group-hover:fill-black\"], [1, \"flex\", \"flex-col\", \"border-solid\", \"border-l-blue-200\", \"group-hover:border-l-blue-500\", \"border-gray-200\", \"border-y-2\", \"border-l-8\", \"rounded-bl-md\"], [\"type\", \"checkbox\", \"disabled\", \"\", 1, \"border-gray-200\"], [1, \"w-1/3\", \"flex\", \"px-2\", \"py-1\"], [1, \"w-full\"], [\"type\", \"text\", \"formControlName\", \"name\", \"placeholder\", \"+ Add Task\", 1, \"w-full\", \"py-0\", \"placeholder:text-sm\", \"pl-5\", \"border-y-white\", \"border-x-white\", \"group-hover:border-gray-300\", \"rounded-md\"], [\"cdkDrag\", \"\", 1, \"flex\", \"flex-col\"], [\"class\", \"w-full hover:bg-slate-100 group \", 4, \"ngIf\"], [1, \"w-full\", \"hover:bg-slate-100\", \"group\"], [1, \"flex\", \"flex-col\", \"border-solid\", \"border-l-blue-500\", \"border-gray-200\", \"border-t-2\", \"border-l-8\"], [1, \"w-1/3\", \"justify-between\", \"flex\", \"pt-1\", \"border-r-2\", \"border-solid\", \"border-gray-300\", \"group\"]],\n  template: function SubtaskComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function SubtaskComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.selectedAll = $event;\n      })(\"change\", function SubtaskComponent_Template_input_change_5_listener() {\n        return ctx.selectAll();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"div\", 6)(7, \"span\");\n      i0.ɵɵtext(8, \" Sub Task \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 7)(10, \"span\");\n      i0.ɵɵtext(11, \" Person \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 7)(13, \"span\");\n      i0.ɵɵtext(14, \" Status \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 8)(16, \"span\");\n      i0.ɵɵtext(17, \" Date \");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(18, \"div\", 9);\n      i0.ɵɵlistener(\"cdkDropListDropped\", function SubtaskComponent_Template_div_cdkDropListDropped_18_listener($event) {\n        return ctx.drop($event);\n      });\n      i0.ɵɵtemplate(19, SubtaskComponent_div_19_Template, 2, 1, \"div\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 11)(21, \"div\", 12)(22, \"button\", 13)(23, \"div\", 14);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(24, \"svg\", 15);\n      i0.ɵɵelement(25, \"path\", 16);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵnamespaceHTML();\n      i0.ɵɵelementStart(26, \"div\", 1)(27, \"div\", 17)(28, \"div\", 3)(29, \"div\", 4);\n      i0.ɵɵelement(30, \"input\", 18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"div\", 19)(32, \"div\", 20)(33, \"form\");\n      i0.ɵɵelement(34, \"input\", 21);\n      i0.ɵɵelementEnd()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedAll);\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngForOf\", ctx.sub_task_list_service.sub_task_list);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.CheckboxControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, i3.FormControlName, i4.CdkDropList, i4.CdkDrag],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAAsBA,eAAe,QAAQ,wBAAwB;;;;;;;;;ICiCzDC,+BAAwF;IAgB7CA;MAAAA;MAAA;MAAA,OAAaA,4CAAwB;IAAA,EAAP;MAAAA;MAAA;MAAA,OAAWA,0CAAoB;IAAA,EAA/B;IAArDA,iBAC4B;IAGhCA,+BAA2F;IAcvFA,YAEJ;IAUJA,iBAAM;;;;IA9ByBA,eAA8B;IAA9BA,6CAA8B;IAkBrDA,eAEJ;IAFIA,gDAEJ;;;;;IAtCpBA,+BAA+F;IAE3FA,yEAqFM;IACVA,iBAAM;;;;;IAtFKA,eAAsC;IAAtCA,iEAAsC;;;ADvBzD,OAAM,MAAOC,gBAAgB;EAK3BC,SAAS,IAET;EAEAC,QAAQ;IACJ,IAAI,CAACC,qBAAqB,CAACC,cAAc,EAAE;IAC3CC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,qBAAqB,CAACI,CAAC,CAAC;EAC7C;EAEAC,IAAI,CAACC,KAA4B;IAC/BX,eAAe,CAAC,IAAI,CAACK,qBAAqB,CAACO,aAAa,EAAED,KAAK,CAACE,aAAa,EAAEF,KAAK,CAACG,YAAY,CAAC;EACpG;EAEAC,kBAAkB;IAChB,IAAI,CAACC,WAAW,GAAG,IAAI,CAACX,qBAAqB,CAACO,aAAa,CAACK,KAAK,CAAC,UAASC,IAAQ;MAC/E,OAAOA,IAAI,CAACC,QAAQ,IAAI,IAAI;IAC9B,CAAC,CAAC;EACN;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEAC,YAAmBf,qBAAyC;IAAzC,0BAAqB,GAArBA,qBAAqB;IA9B/B,cAAS,GAAW,EAAE;EA8BgC;;AAjCpDH,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAmB;EAAAC;IAAAC;EAAA;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ7B1B,8BAAsF;MAM3CA;QAAA;MAAA,EAAyB;QAAA,OAAW2B,eAAW;MAAA,EAAtB;MAAhD3B,iBAAiG;MAErGA,8BAAmF;MAE3EA,0BACJ;MAAAA,iBAAO;MAEXA,8BAAkF;MAE1EA,yBACJ;MAAAA,iBAAO;MAEXA,+BAAkF;MAE1EA,yBACJ;MAAAA,iBAAO;MAEXA,+BAA2F;MAEnFA,uBACJ;MAAAA,iBAAO;MAMvBA,+BAAqD;MAApCA;QAAA,OAAsB2B,gBAAY;MAAA,EAAC;MAChD3B,oEAwFM;MACVA,iBAAM;MAENA,gCAAmB;MAIHA,mBACuE;MADvEA,gCACuE;MACnEA,4BAEuD;MAC3DA,iBAAM;MAIlBA,oBAAoC;MAApCA,+BAAoC;MAKpBA,6BAAwD;MAC5DA,iBAAM;MACNA,gCAAkC;MAGtBA,6BAG6B;MACjCA,iBAAO;;;MAjJQA,eAAyB;MAAzBA,yCAAyB;MA2BnCA,gBAAsC;MAAtCA,iEAAsC","names":["moveItemInArray","i0","SubtaskComponent","selectAll","ngOnInit","sub_task_list_service","getSubTaskList","console","log","s","drop","event","sub_task_list","previousIndex","currentIndex","checkIfAllSelected","selectedAll","every","item","selected","constructor","selectors","inputs","parent_id","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["E:\\WorkSpace\\MondayApp\\ClientApp\\src\\app\\subtask\\subtask.component.ts","E:\\WorkSpace\\MondayApp\\ClientApp\\src\\app\\subtask\\subtask.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\nimport { SubTaskListService } from 'src/services/sub-task-list-service/sub-task-list.service';\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { Task } from '../task';\r\nimport { NgFor, NgIf } from '@angular/common';\r\n\r\n\r\n@Component({\r\n  selector: 'app-subtask',\r\n  templateUrl: './subtask.component.html',\r\n  styleUrls: ['./subtask.component.css']\r\n})\r\nexport class SubtaskComponent implements OnInit{\r\n  selectedAll: any;\r\n\r\n  @Input() parent_id: string = '';\r\n  \r\n  selectAll() {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n      this.sub_task_list_service.getSubTaskList();\r\n      console.log(this.sub_task_list_service.s)\r\n  }\r\n\r\n  drop(event: CdkDragDrop<string[]>) {\r\n    moveItemInArray(this.sub_task_list_service.sub_task_list, event.previousIndex, event.currentIndex);\r\n  }\r\n\r\n  checkIfAllSelected() {\r\n    this.selectedAll = this.sub_task_list_service.sub_task_list.every(function(item:any) {\r\n        return item.selected == true;\r\n      })\r\n  }\r\n\r\n  // setdate(t: Task): void {\r\n  //   t.create_date = (<HTMLInputElement>document.getElementById(t.id+\"date\")).value;\r\n  //   this.save(t);\r\n  // }\r\n\r\n  // save(task: Task) {\r\n  //   this.edit_task_service.saveCell(task)\r\n  // }\r\n\r\n  constructor(public sub_task_list_service: SubTaskListService) {};\r\n}\r\n","<div class=\"ml-2 pb-8 pt-3 pl-8 border-solid border-l-2 border-t-2 border-l-blue-500\">\r\n    <div class=\"flex flex-col p-1 py-0\">\r\n        <div\r\n            class=\"flex flex-col border-solid py-0 border-l-blue-500 border-gray-200 border-t-2 border-l-8 rounded-tl-md\">\r\n            <div class=\"flex items-center\">\r\n                <div class=\"p-2 border-r-2 border-solid border-gray-200\">\r\n                    <input type=\"checkbox\" [(ngModel)]=\"selectedAll\" (change)=\"selectAll();\" class=\"border-gray-200\">\r\n                </div>\r\n                <div class=\"w-1/3 flex justify-center p-2 border-r-2 border-solid border-gray-200\">\r\n                    <span>\r\n                        Sub Task\r\n                    </span>\r\n                </div>\r\n                <div class=\"w-40 flex justify-center p-2 border-r-2 border-solid border-gray-200\">\r\n                    <span>\r\n                        Person\r\n                    </span>\r\n                </div>\r\n                <div class=\"w-40 flex justify-center p-2 border-r-2 border-solid border-gray-200\">\r\n                    <span>\r\n                        Status\r\n                    </span>\r\n                </div>\r\n                <div class=\"relative w-40 flex justify-center p-2 border-r-2 border-solid border-gray-200\">\r\n                    <span>\r\n                        Date\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div cdkDropList (cdkDropListDropped)=\"drop($event)\">\r\n        <div *ngFor=\"let subtask of sub_task_list_service.sub_task_list\" cdkDrag class=\"flex flex-col\">  \r\n            <!-- Delete button -->\r\n            <div  *ngIf=\"subtask.parent_task == parent_id\" class=\"w-full hover:bg-slate-100 group \">\r\n                <!-- <div class=\"pl-2 h-8 absolute left-px flex items-end\">\r\n                    <button class=\"p-1 hover:bg-slate-300 rounded-md\" (click)=\"task_list_service.deleteTask(task)\">\r\n                        <div class=\"group-hover:fill-currentColor\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"1.2em\" viewBox=\"0 0 448 512\">\r\n                                <path fill=\"white\" class=\"group-hover:fill-black\"\r\n                                    d=\"M170.5 51.6L151.5 80h145l-19-28.4c-1.5-2.2-4-3.6-6.7-3.6H177.1c-2.7 0-5.2 1.3-6.7 3.6zm147-26.6L354.2 80H368h48 8c13.3 0 24 10.7 24 24s-10.7 24-24 24h-8V432c0 44.2-35.8 80-80 80H112c-44.2 0-80-35.8-80-80V128H24c-13.3 0-24-10.7-24-24S10.7 80 24 80h8H80 93.8l36.7-55.1C140.9 9.4 158.4 0 177.1 0h93.7c18.7 0 36.2 9.4 46.6 24.9zM80 128V432c0 17.7 14.3 32 32 32H336c17.7 0 32-14.3 32-32V128H80zm80 64V400c0 8.8-7.2 16-16 16s-16-7.2-16-16V192c0-8.8 7.2-16 16-16s16 7.2 16 16zm80 0V400c0 8.8-7.2 16-16 16s-16-7.2-16-16V192c0-8.8 7.2-16 16-16s16 7.2 16 16zm80 0V400c0 8.8-7.2 16-16 16s-16-7.2-16-16V192c0-8.8 7.2-16 16-16s16 7.2 16 16z\" />\r\n                            </svg>\r\n                        </div>\r\n                    </button>\r\n                </div> -->\r\n                <div class=\"flex flex-col p-1 py-0\">\r\n                    <div class=\"flex flex-col border-solid border-l-blue-500 border-gray-200 border-t-2 border-l-8\">\r\n                        <div class=\"flex items-center\">\r\n                            <!-- Checkbox column -->\r\n                            <div class=\"p-2 border-r-2 border-solid border-gray-200\">\r\n                                <input type=\"checkbox\" [(ngModel)]=\"subtask.selected\" (change)=\"checkIfAllSelected();\"\r\n                                    class=\"border-gray-200\">\r\n                            </div>\r\n                            <!-- Name column -->\r\n                            <div class=\"w-1/3 justify-between flex pt-1 border-r-2 border-solid border-gray-300 group\">\r\n                                <!-- <div class=\"flex flex-1\">\r\n                                    <div (click)=\"edit_task_service.editCell(task)\"\r\n                                        (keyup.enter)=\"edit_task_service.saveCell(task)\" class=\"mt-1\">\r\n                                        <span class=\"flex\">\r\n                                            <ng-container *ngIf=\"edit_task_service.edit_task_id === task.id; else displayCell\">\r\n                                                <input\r\n                                                    class=\"w-full py-0 placeholder:text-sm px-0 border-y-white border-x-white group-hover:border-gray-300 rounded-md\"\r\n                                                    type=\"text\" [(ngModel)]=\"task.name\">\r\n                                            </ng-container>\r\n                                            <ng-template #displayCell>{{ task.name }}</ng-template>\r\n                                        </span>\r\n                                    </div>\r\n                                </div> -->\r\n                                {{subtask.name}}\r\n\r\n                            <!-- <button (click)=\"isDrawerOpen=true; tempTaskName=task.name; tempPerson=task.create_by;\"  class=\"flex items-center border border-gray-300 p-1 mb-1 mr-2 rounded\">\r\n                                <svg class=\"mr-2\" xmlns=\"http://www.w3.org/2000/svg\" height=\"1em\"\r\n                                    viewBox=\"0 0 512 512\">\r\n                                    <path\r\n                                        d=\"M344 0H488c13.3 0 24 10.7 24 24V168c0 9.7-5.8 18.5-14.8 22.2s-19.3 1.7-26.2-5.2l-39-39-87 87c-9.4 9.4-24.6 9.4-33.9 0l-32-32c-9.4-9.4-9.4-24.6 0-33.9l87-87L327 41c-6.9-6.9-8.9-17.2-5.2-26.2S334.3 0 344 0zM168 512H24c-13.3 0-24-10.7-24-24V344c0-9.7 5.8-18.5 14.8-22.2s19.3-1.7 26.2 5.2l39 39 87-87c9.4-9.4 24.6-9.4 33.9 0l32 32c9.4 9.4 9.4 24.6 0 33.9l-87 87 39 39c6.9 6.9 8.9 17.2 5.2 26.2s-12.5 14.8-22.2 14.8z\" />\r\n                                </svg>\r\n                                <span>\r\n                                    Open\r\n                                </span>\r\n                            </button> -->\r\n                        </div>\r\n                        <!-- Person column -->\r\n                        <!-- <button (click)=\"editPerson(task)\"\r\n                            class=\"relative text-black w-40 flex justify-center p-2 border-r-2 border-solid border-gray-200\">\r\n                            <ng-container *ngIf=\"personid == task.id;\">\r\n                                <div class=\"absolute top-10 z-10 h-fit p-4 rounded-md shadow-2xl bg-white\">\r\n                                    <button *ngFor=\"let p of personlist\" (click)=\"editPersonSuccess(p, task)\"\r\n                                        class=\"flex justify-center border items-center w-full py-1 px-3 rounded-md mb-1 text-black\">\r\n                                        {{p}}\r\n                                    </button>\r\n                                    <div (click)=\"clickInputAddPerson(task)\">\r\n                                        <input type=\"text\" [(ngModel)]=\"person\" (keyup.enter)=\"addPerson()\"\r\n                                            placeholder=\"Add Person\" class=\"rounded border-gray-300\">\r\n                                        </div>\r\n                                    </div>\r\n                                </ng-container>\r\n                                {{task.create_by}}\r\n                        </button> -->\r\n                            <!-- Status column -->\r\n                            <!-- <button (click)=\"editColor(task)\"\r\n                                class=\"relative text-white w-40 flex justify-center p-2 border-r-2 border-solid border-gray-200 {{task.status}}\">\r\n                                <ng-container *ngIf=\"taskid == task.id;\">\r\n                                    <div class=\"absolute top-10 z-10 h-fit p-4 rounded-md shadow-2xl bg-white\">\r\n                                        <button *ngFor=\"let c of colorlist\" (click)=\"editColorSuccess(c, task)\"\r\n                                            class=\"flex justify-center items-center w-full {{c}} py-1 px-2 rounded-md mb-1 text-white\">\r\n                                            {{Status.get(c)}}\r\n                                        </button>\r\n                                    </div>\r\n                                </ng-container>\r\n                                {{ Status.get(task.status) }}\r\n                            </button> -->\r\n                            <!-- <div class=\"w-40 flex justify-center p-1 border-r-2 border-solid border-gray-200\">\r\n                                <input type=\"date\" id=\"{{subtask.id}}date\"\r\n                                    class=\"p-0.5 pl-4 border-none border-inherit group-hover:bg-slate-100 hover:border-solid hover:border-gray-300\"\r\n                                    value=\"{{subtask.create_date}}\" (change)=\"setdate(subtask)\">\r\n                            </div> -->\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"group\">\r\n        <div class=\"pl-2 h-14 absolute left-px\">\r\n            <button class=\"p-1 hover:bg-slate-300 rounded-md\">\r\n                <div class=\" group-hover:fill-currentColor\">\r\n                    <svg viewBox=\"0 0 20 20\" fill=\"currentColor\" width=\"20\" height=\"20\" aria-hidden=\"true\"\r\n                        class=\"icon_4b23d45e02 noFocusStyle_cff5f5a050\" data-testid=\"icon\">\r\n                        <path\r\n                            d=\"M6 10.5C6 11.3284 5.32843 12 4.5 12 3.67157 12 3 11.3284 3 10.5 3 9.67157 3.67157 9 4.5 9 5.32843 9 6 9.67157 6 10.5zM11.8333 10.5C11.8333 11.3284 11.1618 12 10.3333 12 9.50492 12 8.83334 11.3284 8.83334 10.5 8.83334 9.67157 9.50492 9 10.3333 9 11.1618 9 11.8333 9.67157 11.8333 10.5zM17.6667 10.5C17.6667 11.3284 16.9951 12 16.1667 12 15.3383 12 14.6667 11.3284 14.6667 10.5 14.6667 9.67157 15.3383 9 16.1667 9 16.9951 9 17.6667 9.67157 17.6667 10.5z\"\r\n                            fill=\"white\" class=\"group-hover:fill-black\"></path>\r\n                    </svg>\r\n                </div>\r\n            </button>\r\n        </div>\r\n        <div class=\"flex flex-col p-1 py-0\">\r\n            <div\r\n                class=\"flex flex-col border-solid border-l-blue-200 group-hover:border-l-blue-500 border-gray-200 border-y-2 border-l-8 rounded-bl-md\">\r\n                <div class=\"flex items-center\">\r\n                    <div class=\"p-2 border-r-2 border-solid border-gray-200\">\r\n                        <input type=\"checkbox\" class=\"border-gray-200\" disabled>\r\n                    </div>\r\n                    <div class=\"w-1/3 flex px-2 py-1\">\r\n                        <div class=\"w-full\">\r\n                            <form >\r\n                                <input\r\n                                    class=\"w-full py-0 placeholder:text-sm pl-5 border-y-white border-x-white group-hover:border-gray-300 rounded-md\"\r\n                                     type=\"text\" formControlName=\"name\"\r\n                                    placeholder=\"+ Add Task\">\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}