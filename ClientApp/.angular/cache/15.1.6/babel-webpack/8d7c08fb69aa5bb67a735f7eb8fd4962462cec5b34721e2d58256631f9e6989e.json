{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CdkDropList, CdkDrag, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { NgFor } from '@angular/common';\nlet ExpandgroupComponent = class ExpandgroupComponent {\n  changetocollapse() {\n    this.collapseeChange.emit(true);\n  }\n  drop(event) {\n    moveItemInArray(this.task_list, event.previousIndex, event.currentIndex);\n  }\n  // ngOnInit(): void {\n  //   this.getTaskList();\n  // }\n  ngOnInit() {\n    this.getTaskList();\n    this.task_form = this.fb.group({\n      id: '',\n      name: '',\n      parent_task: '',\n      child_task: [],\n      create_by: '',\n      create_date: '',\n      status: ''\n    });\n    this.sub = this.route.paramMap.subscribe(param => {\n      const id = param.get('id');\n      if (id == '0') {\n        const task = {\n          id: \"0\",\n          name: \"\",\n          parent_task: \"\",\n          child_task: [],\n          create_by: \"\",\n          create_date: \"\",\n          status: \"\"\n        };\n        this.displayTask(task);\n      } else {\n        this.getTask(id);\n      }\n    });\n  }\n  // constructor(private task_service: TaskService) {}\n  constructor(fb, route, task_service) {\n    this.fb = fb;\n    this.route = route;\n    this.task_service = task_service;\n    this.collapsee = false;\n    this.collapseeChange = new EventEmitter();\n    this.task_list = [];\n    this.mess = \"\";\n  }\n  getTaskList() {\n    this.task_service.getTaskList().subscribe(data => {\n      this.task_list = data;\n    });\n  }\n  deleteTask(delete_task) {\n    if (confirm(`Are you sure to delete this task ${delete_task.name}?`)) {\n      this.task_service.deleteTask(delete_task.id).subscribe({\n        error: () => this.reloadList()\n      });\n    }\n  }\n  reloadList() {\n    this.getTaskList();\n  }\n  displayTask(task) {\n    if (this.task_form) {\n      this.task_form.reset();\n    }\n    this.task = task;\n    this.task_form.patchValue({\n      id: this.task.id,\n      name: this.task.name,\n      parent_task: this.task.parent_task,\n      child_task: this.task.child_task,\n      create_by: this.task.create_by,\n      create_date: this.task.create_date,\n      status: this.task.status\n    });\n  }\n  getTask(id) {\n    this.task_service.getOneTask(id).subscribe({\n      next: task => this.displayTask(task)\n    });\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n  saveTask() {\n    if (this.task_form.valid) {\n      if (this.task_form.dirty) {\n        const t = {\n          ...this.task,\n          ...this.task_form.value\n        };\n        if (t.id === '0') {\n          this.task_service.createTask(t).subscribe({\n            error: () => this.mess = \"Thêm mới thành công\"\n          });\n        } else {\n          this.task_service.updateTask(t).subscribe({\n            error: () => this.mess = \"Chỉnh sửa thành công\"\n          });\n        }\n      } else {\n        this.onSaveComplete();\n      }\n    } else {\n      console.log(\"Task form bị lỗi: dòng 94\");\n    }\n  }\n  onSaveComplete() {\n    this.task_form.reset();\n    // this.router.navigate(['/task'])\n  }\n};\n\n__decorate([Input()], ExpandgroupComponent.prototype, \"collapsee\", void 0);\n__decorate([Output()], ExpandgroupComponent.prototype, \"collapseeChange\", void 0);\nExpandgroupComponent = __decorate([Component({\n  selector: 'app-expandgroup',\n  templateUrl: './expandgroup.component.html',\n  styleUrls: ['./expandgroup.component.css'],\n  standalone: true,\n  imports: [CdkDropList, NgFor, CdkDrag]\n})], ExpandgroupComponent);\nexport { ExpandgroupComponent };\nfunction output() {\n  throw new Error('Function not implemented.');\n}","map":{"version":3,"mappings":"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","names":["Component","EventEmitter","Input","Output","CdkDropList","CdkDrag","moveItemInArray","NgFor","ExpandgroupComponent","changetocollapse","collapseeChange","emit","drop","event","task_list","previousIndex","currentIndex","ngOnInit","getTaskList","task_form","fb","group","id","name","parent_task","child_task","create_by","create_date","status","sub","route","paramMap","subscribe","param","get","task","displayTask","getTask","constructor","task_service","data","deleteTask","delete_task","confirm","error","reloadList","reset","patchValue","getOneTask","next","ngOnDestroy","unsubscribe","saveTask","valid","dirty","t","value","createTask","mess","updateTask","onSaveComplete","console","log","__decorate","selector","templateUrl","styleUrls","standalone","imports","output","Error"],"sourceRoot":"","sources":["E:\\.NetCoreApp\\MondayApp\\ClientApp\\src\\app\\group\\expandgroup\\expandgroup.component.ts"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output, OnDestroy } from '@angular/core';\r\nimport {CdkDragDrop, CdkDropList, CdkDrag, moveItemInArray} from '@angular/cdk/drag-drop';\r\nimport {NgFor} from '@angular/common';\r\nimport { Task } from 'src/app/task';\r\nimport { TaskService } from 'src/app/task.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-expandgroup',\r\n  templateUrl: './expandgroup.component.html',\r\n  styleUrls: ['./expandgroup.component.css'],\r\n  standalone: true,\r\n  imports: [CdkDropList, NgFor, CdkDrag],\r\n})\r\nexport class ExpandgroupComponent implements OnInit, OnD {\r\n  @Input() collapsee: boolean = false;\r\n  @Output() collapseeChange = new EventEmitter<boolean>();\r\n  task_list: Task[] = [];\r\n\r\n  changetocollapse() {\r\n    this.collapseeChange.emit(true);\r\n  }\r\n\r\n  drop(event: CdkDragDrop<string[]>) {\r\n    moveItemInArray(this.task_list, event.previousIndex, event.currentIndex);\r\n  }\r\n\r\n  // ngOnInit(): void {\r\n  //   this.getTaskList();\r\n  // }\r\n\r\n  ngOnInit(): void {\r\n    this.getTaskList();\r\n\r\n\r\n    this.task_form = this.fb.group({\r\n      id: '',\r\n      name: '',\r\n      parent_task: '',\r\n      child_task: [],\r\n      create_by: '',\r\n      create_date: '',\r\n      status: '',\r\n    });\r\n\r\n    this.sub = this.route.paramMap.subscribe(param => {\r\n      const id = param.get('id');\r\n      if(id == '0') {\r\n        const task: Task = {id: \"0\", name: \"\", parent_task: \"\", child_task: [], create_by: \"\", create_date: \"\", status: \"\",};\r\n        this.displayTask(task);\r\n      }\r\n      else {\r\n        this.getTask(id);\r\n      }\r\n    });\r\n}\r\n\r\n  // constructor(private task_service: TaskService) {}\r\n  constructor(private fb: FormBuilder, private route: ActivatedRoute, private task_service: TaskService) {}\r\n\r\n  getTaskList(): void {\r\n    this.task_service.getTaskList().subscribe( data =>{\r\n      this.task_list = data;\r\n    })\r\n  }\r\n\r\n  deleteTask(delete_task: Task): void {\r\n    if(confirm(`Are you sure to delete this task ${delete_task.name}?`)) {\r\n      this.task_service.deleteTask(delete_task.id).subscribe({\r\n        error: () =>this.reloadList()\r\n      })\r\n    }\r\n  }\r\n\r\n  reloadList(): void {\r\n    this.getTaskList();\r\n  }\r\n\r\n  \r\n\r\n  task_form!: FormGroup;\r\n  task!: Task;\r\n  private sub!: Subscription;\r\n  mess: string = \"\";\r\n\r\n\r\n\r\n\r\n\r\n  displayTask(task: Task): void {\r\n    if (this.task_form) {\r\n      this.task_form.reset();\r\n    }\r\n\r\n    this.task = task;\r\n\r\n    this.task_form.patchValue({\r\n      id: this.task.id,\r\n      name: this.task.name,\r\n      parent_task: this.task.parent_task,\r\n      child_task: this.task.child_task,\r\n      create_by: this.task.create_by,\r\n      create_date: this.task.create_date,\r\n      status: this.task.status,\r\n    });\r\n  }\r\n\r\n  getTask(id: string | null): void {\r\n    this.task_service.getOneTask(id).subscribe({\r\n      next: (task: Task) => this.displayTask(task)\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n      this.sub.unsubscribe();\r\n  } \r\n\r\n  saveTask(): void {\r\n    if(this.task_form.valid) {\r\n      if(this.task_form.dirty) {\r\n        const t: Task = {...this.task, ...this.task_form.value};\r\n        if(t.id === '0') {\r\n          this.task_service.createTask(t).subscribe({\r\n            error: () => this.mess=\"Thêm mới thành công\"\r\n          });\r\n        }\r\n        else {\r\n          this.task_service.updateTask(t).subscribe({\r\n            error: () => this.mess=\"Chỉnh sửa thành công\"\r\n          });\r\n        }\r\n      }\r\n      else {\r\n        this.onSaveComplete();\r\n      }\r\n    }\r\n    else {\r\n      console.log(\"Task form bị lỗi: dòng 94\");\r\n    }\r\n  }\r\n\r\n  onSaveComplete(): void {\r\n    this.task_form.reset();\r\n    // this.router.navigate(['/task'])\r\n  }\r\n\r\n\r\n}\r\nfunction output() {\r\n  throw new Error('Function not implemented.');\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}