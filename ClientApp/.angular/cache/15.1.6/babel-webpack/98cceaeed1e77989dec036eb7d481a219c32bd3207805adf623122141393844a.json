{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/services/task-service/task.service\";\nimport * as i2 from \"src/services/sub-task-list-service/sub-task-list.service\";\nimport * as i3 from \"src/services/add-task-service/add-task.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction TaskListComponent_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\")(12, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_tr_17_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const task_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.deleteTask(task_r2));\n    });\n    i0.ɵɵtext(13, \" Delete \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"td\")(15, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_tr_17_Template_button_click_15_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const task_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.getSubTaskList(task_r2.id));\n    });\n    i0.ɵɵtext(16, \" SubTask \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"td\")(18, \"div\", 6)(19, \"form\", 7)(20, \"input\", 8);\n    i0.ɵɵlistener(\"keyup.enter\", function TaskListComponent_tr_17_Template_input_keyup_enter_20_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.add_task.saveSubTask());\n    });\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const task_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", task_r2.id, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", task_r2.name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", task_r2.create_by, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", task_r2.create_date, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", task_r2.status, \"\");\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.add_task.task_form);\n  }\n}\nfunction TaskListComponent_tr_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 9);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 9);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 9);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\", 9);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r7 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", task_r7.id, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", task_r7.name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", task_r7.create_by, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", task_r7.create_date, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", task_r7.status, \"\");\n  }\n}\nexport class TaskListComponent {\n  // sub_task_list: Task[] = [];\n  ngOnInit() {\n    this.getTaskList();\n    // this.add_task.buildForm('','');\n  }\n\n  constructor(task_service, sub_task_list_service, add_task) {\n    this.task_service = task_service;\n    this.sub_task_list_service = sub_task_list_service;\n    this.add_task = add_task;\n    this.task_list = [];\n  }\n  getTaskList() {\n    this.task_service.getTaskList().subscribe(data => {\n      this.task_list = data;\n    });\n  }\n  deleteTask(delete_task) {\n    if (confirm(`Are you sure to delete this task ${delete_task.name}?`)) {\n      this.task_service.deleteTask(delete_task.id).subscribe({\n        error: () => this.reloadList()\n      });\n    }\n  }\n  reloadList() {\n    this.getTaskList();\n  }\n  getSubTaskList(parent_id) {\n    this.sub_task_list_service.getSubTaskList(parent_id);\n  }\n}\nTaskListComponent.ɵfac = function TaskListComponent_Factory(t) {\n  return new (t || TaskListComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.SubTaskListService), i0.ɵɵdirectiveInject(i3.AddTaskService));\n};\nTaskListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TaskListComponent,\n  selectors: [[\"app-task-list\"]],\n  outputs: {\n    task_list: \"task_list\"\n  },\n  decls: 32,\n  vars: 2,\n  consts: [[1, \"table-auto\"], [1, \"bg-white\", \"divide-y\", \"divide-gray-200\"], [4, \"ngFor\", \"ngForOf\"], [1, \"p-2\"], [1, \"p-2\", \"bg-cyan-500\", \"rounded-full\", 3, \"click\"], [3, \"click\"], [1, \"w-full\"], [3, \"formGroup\"], [\"type\", \"text\", \"formControlName\", \"name\", \"placeholder\", \"+ Add Sub Task\", 1, \"w-full\", \"py-0\", \"placeholder:text-sm\", \"pl-5\", \"border-y-white\", \"border-x-white\", \"group-hover:border-gray-300\", \"rounded-md\", 3, \"keyup.enter\"], [1, \"py-4\", \"px-6\"]],\n  template: function TaskListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"task-list works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"table\", 0)(3, \"thead\")(4, \"th\");\n      i0.ɵɵtext(5, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"th\");\n      i0.ɵɵtext(7, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\");\n      i0.ɵɵtext(9, \"Create By\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\");\n      i0.ɵɵtext(11, \"Create Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\");\n      i0.ɵɵtext(13, \"Status\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"th\")(15, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"tbody\", 1);\n      i0.ɵɵtemplate(17, TaskListComponent_tr_17_Template, 21, 6, \"tr\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"table\", 0)(19, \"thead\")(20, \"th\");\n      i0.ɵɵtext(21, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"th\");\n      i0.ɵɵtext(23, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"th\");\n      i0.ɵɵtext(25, \"Create By\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"th\");\n      i0.ɵɵtext(27, \"Create Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"th\");\n      i0.ɵɵtext(29, \"Status\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(30, \"tbody\", 1);\n      i0.ɵɵtemplate(31, TaskListComponent_tr_31_Template, 11, 5, \"tr\", 2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"ngForOf\", ctx.task_list);\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngForOf\", ctx.sub_task_list_service.sub_task_list);\n    }\n  },\n  dependencies: [i4.NgForOf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","TaskListComponent","ngOnInit","getTaskList","constructor","task_service","sub_task_list_service","add_task","subscribe","data","task_list","deleteTask","delete_task","confirm","name","id","error","reloadList","getSubTaskList","parent_id","selectors","outputs","decls","vars","consts","template"],"sourceRoot":"","sources":["E:\\.NetCoreApp\\MondayApp\\ClientApp\\src\\app\\task-list\\task-list.component.html","E:\\.NetCoreApp\\MondayApp\\ClientApp\\src\\app\\task-list\\task-list.component.ts"],"sourcesContent":["<p>task-list works!</p>\r\n\r\n<table class=\"table-auto\">\r\n    <thead>\r\n        <th>ID</th>\r\n        <th>Name</th>\r\n        <th>Create By</th>\r\n        <th>Create Date</th>\r\n        <th>Status</th>\r\n        <th></th>\r\n        <td></td>\r\n    </thead>\r\n\r\n    <tbody class=\"bg-white divide-y divide-gray-200\">\r\n        <tr *ngFor=\"let task of task_list\">\r\n            <td class=\"p-2\"> {{task.id}}  </td>\r\n            <td> {{task.name}} </td>\r\n            <td> {{task.create_by}} </td>\r\n            <td> {{task.create_date}} </td>\r\n            <td> {{task.status}}</td>\r\n            <td> \r\n                <button class=\"p-2 bg-cyan-500 rounded-full\" (click)=\"deleteTask(task)\">\r\n                    Delete\r\n                </button>\r\n            </td>\r\n\r\n            <td>\r\n                <button (click)=\"getSubTaskList(task.id)\">\r\n                    SubTask\r\n                </button>\r\n            </td>\r\n\r\n            <td>\r\n                <div class=\"w-full\">\r\n                    <form [formGroup]=\"add_task.task_form\">\r\n                        <input\r\n                            class=\"w-full py-0 placeholder:text-sm pl-5 border-y-white border-x-white group-hover:border-gray-300 rounded-md\"\r\n                            (keyup.enter)=\"add_task.saveSubTask()\"   type=\"text\" formControlName=\"name\"\r\n                            placeholder=\"+ Add Sub Task\">\r\n                    </form>\r\n                </div>\r\n\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n\r\n<table class=\"table-auto\">\r\n    <thead>\r\n        <th>ID</th>\r\n        <th>Name</th>\r\n        <th>Create By</th>\r\n        <th>Create Date</th>\r\n        <th>Status</th>\r\n\r\n    </thead>\r\n\r\n    <tbody class=\"bg-white divide-y divide-gray-200\">\r\n        <tr *ngFor=\"let task of sub_task_list_service.sub_task_list\">\r\n            <td class=\"py-4 px-6\"> {{task.id}}  </td>\r\n            <td class=\"py-4 px-6\"> {{task.name}} </td>\r\n            <td class=\"py-4 px-6\"> {{task.create_by}} </td>\r\n            <td class=\"py-4 px-6\"> {{task.create_date}} </td>\r\n            <td class=\"py-4 px-6\"> {{task.status}}</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n\r\n","import { Component, OnInit, Output } from '@angular/core';\r\nimport { TaskService } from 'src/services/task-service/task.service';\r\nimport { Task } from 'src/app/task';\r\nimport { SubTaskListService } from 'src/services/sub-task-list-service/sub-task-list.service';\r\nimport { SubTaskService } from 'src/services/sub-task-service/sub-task.service';\r\nimport { AddTaskService } from 'src/services/add-task-service/add-task.service';\r\n\r\n@Component({\r\n  selector: 'app-task-list',\r\n  templateUrl: './task-list.component.html',\r\n  styleUrls: ['./task-list.component.css']\r\n})\r\nexport class TaskListComponent implements OnInit{\r\n\r\n  @Output() task_list: Task[] = [];\r\n\r\n  // sub_task_list: Task[] = [];\r\n  \r\n  ngOnInit(): void {\r\n    this.getTaskList();\r\n    // this.add_task.buildForm('','');\r\n  }\r\n\r\n  constructor(private task_service: TaskService, public sub_task_list_service: SubTaskListService, public add_task: AddTaskService) {}\r\n\r\n  getTaskList(): void {\r\n    this.task_service.getTaskList().subscribe( data =>{\r\n      this.task_list = data;\r\n    })\r\n  }\r\n\r\n  deleteTask(delete_task: Task): void {\r\n    if(confirm(`Are you sure to delete this task ${delete_task.name}?`)) {\r\n      this.task_service.deleteTask(delete_task.id).subscribe({\r\n        error: () =>this.reloadList()\r\n      })\r\n    }\r\n  }\r\n\r\n  reloadList(): void {\r\n    this.getTaskList();\r\n  }\r\n\r\n  getSubTaskList(parent_id: string) {\r\n    this.sub_task_list_service.getSubTaskList(parent_id);\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}