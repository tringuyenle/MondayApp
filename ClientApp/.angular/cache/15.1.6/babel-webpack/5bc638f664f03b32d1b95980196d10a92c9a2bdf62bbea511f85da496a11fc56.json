{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CdkDropList, CdkDrag, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { NgFor } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { TaskListService } from 'src/services/task-list-service/task-list.service';\nlet ExpandgroupComponent = class ExpandgroupComponent {\n  changetocollapse() {\n    this.collapseeChange.emit(true);\n  }\n  drop(event) {\n    moveItemInArray(this.task_list, event.previousIndex, event.currentIndex);\n  }\n  ngOnInit() {\n    this.task_list = this.task_list_service.task_list;\n    this.buildForm();\n  }\n  buildForm() {\n    this.task_form = this.formBuilder.group({\n      id: '',\n      name: '',\n      person: '',\n      child_task: [],\n      create_by: '',\n      create_date: '',\n      status: ''\n    });\n    const task = {\n      id: \"\",\n      name: \"\",\n      person: \"None\",\n      child_task: [],\n      create_by: \"None\",\n      create_date: \"None\",\n      status: \"None\"\n    };\n    this.displayTask(task);\n  }\n  constructor(task_service, formBuilder, task_list_service) {\n    this.task_service = task_service;\n    this.formBuilder = formBuilder;\n    this.task_list_service = task_list_service;\n    this.collapsee = false;\n    this.collapseeChange = new EventEmitter();\n    this.task_list = [];\n  }\n  getTaskList() {\n    this.task_list_service.getTaskList();\n  }\n  deleteTask(delete_task) {\n    if (confirm(`Are you sure to delete this task ${delete_task.name}?`)) {\n      this.task_service.deleteTask(delete_task.id).subscribe({\n        error: () => this.reloadList()\n      });\n    }\n  }\n  reloadList() {\n    this.getTaskList();\n  }\n  saveTask() {\n    const t = {\n      ...this.task,\n      ...this.task_form.value\n    };\n    this.task_service.createTask(t).subscribe({\n      error: () => {\n        console.log(\"Thêm thành công\");\n        this.reloadList();\n        this.onSaveComplete();\n      }\n    });\n  }\n  onSaveComplete() {\n    this.task_form.reset();\n    this.buildForm();\n  }\n  displayTask(task) {\n    if (this.task_form) {\n      this.task_form.reset();\n    }\n    this.task = task;\n    this.task_form.patchValue({\n      id: this.task.id,\n      name: this.task.name,\n      parent_task: this.task.person,\n      child_task: this.task.child_task,\n      create_by: this.task.create_by,\n      create_date: this.task.create_date,\n      status: this.task.status\n    });\n  }\n};\n__decorate([Input()], ExpandgroupComponent.prototype, \"collapsee\", void 0);\n__decorate([Output()], ExpandgroupComponent.prototype, \"collapseeChange\", void 0);\nExpandgroupComponent = __decorate([Component({\n  selector: 'app-expandgroup',\n  templateUrl: './expandgroup.component.html',\n  styleUrls: ['./expandgroup.component.css'],\n  standalone: true,\n  imports: [CdkDropList, NgFor, CdkDrag, FormsModule, RouterModule, ReactiveFormsModule],\n  providers: [TaskListService]\n})], ExpandgroupComponent);\nexport { ExpandgroupComponent };\nfunction output() {\n  throw new Error('Function not implemented.');\n}","map":{"version":3,"mappings":"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","names":["Component","EventEmitter","Input","Output","CdkDropList","CdkDrag","moveItemInArray","NgFor","FormsModule","ReactiveFormsModule","RouterModule","TaskListService","ExpandgroupComponent","changetocollapse","collapseeChange","emit","drop","event","task_list","previousIndex","currentIndex","ngOnInit","task_list_service","buildForm","task_form","formBuilder","group","id","name","person","child_task","create_by","create_date","status","task","displayTask","constructor","task_service","getTaskList","deleteTask","delete_task","confirm","subscribe","error","reloadList","saveTask","t","value","createTask","console","log","onSaveComplete","reset","patchValue","parent_task","__decorate","selector","templateUrl","styleUrls","standalone","imports","providers","output","Error"],"sourceRoot":"","sources":["E:\\.NetCoreApp\\MondayApp\\ClientApp\\src\\app\\group\\expandgroup\\expandgroup.component.ts"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport {CdkDragDrop, CdkDropList, CdkDrag, moveItemInArray} from '@angular/cdk/drag-drop';\r\nimport {NgFor} from '@angular/common';\r\nimport { Task } from 'src/app/task';\r\nimport { TaskService } from 'src/services/task-service/task.service';\r\nimport { FormBuilder, FormGroup, FormsModule, FormControlName, FormControl } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { TaskListService } from 'src/services/task-list-service/task-list.service';\r\n\r\n@Component({\r\n  selector: 'app-expandgroup',\r\n  templateUrl: './expandgroup.component.html',\r\n  styleUrls: ['./expandgroup.component.css'],\r\n  standalone: true,\r\n  imports: [CdkDropList, NgFor, CdkDrag, FormsModule, RouterModule, ReactiveFormsModule],\r\n  providers: [TaskListService],\r\n})\r\nexport class ExpandgroupComponent implements OnInit {\r\n  @Input() collapsee: boolean = false;\r\n  @Output() collapseeChange = new EventEmitter<boolean>();\r\n  task_list: Task[] = [];\r\n  task_form!: FormGroup;\r\n  task!: Task;\r\n\r\n  changetocollapse() {\r\n    this.collapseeChange.emit(true);\r\n  }\r\n\r\n  drop(event: CdkDragDrop<string[]>) {\r\n    moveItemInArray(this.task_list, event.previousIndex, event.currentIndex);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.task_list = this.task_list_service.task_list;\r\n    this.buildForm();\r\n  }\r\n\r\n  buildForm() {\r\n    this.task_form = this.formBuilder.group({\r\n      id: '',\r\n      name: '',\r\n      person: '',\r\n      child_task: [],\r\n      create_by: '',\r\n      create_date: '',\r\n      status: '',\r\n    });\r\n\r\n    const task: Task = {id: \"\", name: \"\" , person: \"None\", child_task: [], create_by: \"None\", create_date: \"None\", status: \"None\"};\r\n    this.displayTask(task);\r\n  }\r\n\r\n  constructor(private task_service: TaskService, private formBuilder: FormBuilder, public task_list_service: TaskListService) {}\r\n\r\n  getTaskList(): void {\r\n   this.task_list_service.getTaskList();\r\n   \r\n  }\r\n\r\n  deleteTask(delete_task: Task): void {\r\n    if(confirm(`Are you sure to delete this task ${delete_task.name}?`)) {\r\n      this.task_service.deleteTask(delete_task.id).subscribe({\r\n        error: () =>this.reloadList()\r\n      })\r\n    }\r\n  }\r\n\r\n  reloadList(): void {\r\n    this.getTaskList();\r\n  }\r\n\r\n  saveTask() {\r\n    const t: Task = {...this.task, ...this.task_form.value};\r\n    this.task_service.createTask(t).subscribe({\r\n      error: () => {\r\n        console.log(\"Thêm thành công\");\r\n        this.reloadList();\r\n        this.onSaveComplete();\r\n      }\r\n    });\r\n  }\r\n\r\n  onSaveComplete(): void {\r\n    this.task_form.reset();\r\n    this.buildForm();\r\n  }\r\n\r\n  displayTask(task: Task): void {\r\n    if (this.task_form) {\r\n      this.task_form.reset();\r\n    }\r\n\r\n    this.task = task;\r\n\r\n    this.task_form.patchValue({\r\n      id: this.task.id,\r\n      name: this.task.name,\r\n      parent_task: this.task.person,\r\n      child_task: this.task.child_task,\r\n      create_by: this.task.create_by,\r\n      create_date: this.task.create_date,\r\n      status: this.task.status,\r\n    });\r\n  }\r\n}\r\nfunction output() {\r\n  throw new Error('Function not implemented.');\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}