{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nlet DatePickerComponent = class DatePickerComponent {\n  constructor() {\n    this.MONTH_NAMES = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    this.DAYS = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    this.days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    this.showDatepicker = false;\n    this.no_of_days = [];\n    this.blankdays = [];\n    this.trackByIdentity = (index, item) => item;\n  }\n  ngOnInit() {\n    this.initDate();\n    this.getNoOfDays();\n  }\n  initDate() {\n    let today = new Date();\n    this.month = today.getMonth();\n    this.year = today.getFullYear();\n    this.datepickerValue = new Date(this.year, this.month, today.getDate()).toDateString();\n  }\n  isToday(date) {\n    const today = new Date();\n    const d = new Date(this.year, this.month, date);\n    return today.toDateString() === d.toDateString() ? true : false;\n  }\n  getDateValue(date) {\n    let selectedDate = new Date(this.year, this.month, date);\n    this.datepickerValue = selectedDate.toDateString();\n    this.showDatepicker = false;\n  }\n  getNoOfDays() {\n    const daysInMonth = new Date(this.year, this.month + 1, 0).getDate();\n    // find where to start calendar day of week\n    let dayOfWeek = new Date(this.year, this.month).getDay();\n    let blankdaysArray = [];\n    for (var i = 1; i <= dayOfWeek; i++) {\n      blankdaysArray.push(i);\n    }\n    let daysArray = [];\n    for (var i = 1; i <= daysInMonth; i++) {\n      daysArray.push(i);\n    }\n    this.blankdays = blankdaysArray;\n    this.no_of_days = daysArray;\n  }\n};\nDatePickerComponent = __decorate([Component({\n  selector: 'app-date-picker',\n  templateUrl: './date-picker.component.html',\n  styleUrls: ['./date-picker.component.css'],\n  standalone: true,\n  imports: [FormsModule, BrowserModule]\n})], DatePickerComponent);\nexport { DatePickerComponent };","map":{"version":3,"mappings":"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","names":["Component","FormsModule","BrowserModule","DatePickerComponent","constructor","index","item","ngOnInit","initDate","getNoOfDays","today","Date","month","getMonth","year","getFullYear","datepickerValue","getDate","toDateString","isToday","date","d","getDateValue","selectedDate","showDatepicker","daysInMonth","dayOfWeek","getDay","blankdaysArray","i","push","daysArray","blankdays","no_of_days","selector","templateUrl","styleUrls","standalone","imports"],"sourceRoot":"","sources":["C:\\Users\\DELL\\source\\repos\\MondayApp\\ClientApp\\src\\app\\date-picker\\date-picker.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-date-picker',\n  templateUrl: './date-picker.component.html',\n  styleUrls: ['./date-picker.component.css'],\n  standalone: true,\n  imports: [FormsModule, BrowserModule]\n})\nexport class DatePickerComponent implements OnInit {\n  MONTH_NAMES = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December'\n  ];\n  DAYS = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  showDatepicker = false;\n  datepickerValue!: string;\n  month!: number; // !: mean promis it will not be null, and it will definitely be assigned\n  year!: number;\n  no_of_days = [] as number[];\n  blankdays = [] as number[];\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.initDate();\n    this.getNoOfDays();\n  }\n\n  initDate() {\n    let today = new Date();\n    this.month = today.getMonth();\n    this.year = today.getFullYear();\n    this.datepickerValue = new Date(this.year, this.month, today.getDate()).toDateString();\n  }\n\n  isToday(date: any) {\n    const today = new Date();\n    const d = new Date(this.year, this.month, date);\n    return today.toDateString() === d.toDateString() ? true : false;\n  }\n\n  getDateValue(date: any) {\n    let selectedDate = new Date(this.year, this.month, date);\n    this.datepickerValue = selectedDate.toDateString();\n    this.showDatepicker = false;\n  }\n\n  getNoOfDays() {\n    const daysInMonth = new Date(this.year, this.month + 1, 0).getDate();\n\n    // find where to start calendar day of week\n    let dayOfWeek = new Date(this.year, this.month).getDay();\n    let blankdaysArray = [];\n    for (var i = 1; i <= dayOfWeek; i++) {\n      blankdaysArray.push(i);\n    }\n\n    let daysArray = [];\n    for (var i = 1; i <= daysInMonth; i++) {\n      daysArray.push(i);\n    }\n\n    this.blankdays = blankdaysArray;\n    this.no_of_days = daysArray;\n  }\n\n  trackByIdentity = (index: number, item: any) => item;\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}