{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { CdkDropList, CdkDrag, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { NgFor } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/task.service\";\nfunction ExpandgroupComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(task_r1.id);\n  }\n}\nexport class ExpandgroupComponent {\n  changetocollapse() {\n    this.collapseeChange.emit(true);\n  }\n  drop(event) {\n    moveItemInArray(this.movies, event.previousIndex, event.currentIndex);\n  }\n  ngOnInit() {\n    this.getTaskList();\n  }\n  constructor(task_service) {\n    this.task_service = task_service;\n    this.collapsee = false;\n    this.collapseeChange = new EventEmitter();\n    this.task_list = [];\n    this.movies = ['Episode I - The Phantom Menace', 'Episode II - Attack of the Clones', 'Episode III - Revenge of the Sith', 'Episode IV - A New Hope', 'Episode V - The Empire Strikes Back', 'Episode VI - Return of the Jedi', 'Episode VII - The Force Awakens', 'Episode VIII - The Last Jedi', 'Episode IX - The Rise of Skywalker'];\n  }\n  getTaskList() {\n    this.task_service.getTaskList().subscribe(data => {\n      this.task_list = data;\n    });\n  }\n  deleteTask(delete_task) {\n    if (confirm(`Are you sure to delete this task ${delete_task.name}?`)) {\n      this.task_service.deleteTask(delete_task.id).subscribe({\n        error: () => this.reloadList()\n      });\n    }\n  }\n  reloadList() {\n    this.getTaskList();\n  }\n}\nExpandgroupComponent.ɵfac = function ExpandgroupComponent_Factory(t) {\n  return new (t || ExpandgroupComponent)(i0.ɵɵdirectiveInject(i1.TaskService));\n};\nExpandgroupComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ExpandgroupComponent,\n  selectors: [[\"app-expandgroup\"]],\n  inputs: {\n    collapsee: \"collapsee\"\n  },\n  outputs: {\n    collapseeChange: \"collapseeChange\"\n  },\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"bg-blue-500\", 3, \"click\"], [\"cdkDropList\", \"\", 1, \"example-list\", 3, \"cdkDropListDropped\"], [\"class\", \"example-box\", \"cdkDrag\", \"\", 4, \"ngFor\", \"ngForOf\"], [\"cdkDrag\", \"\", 1, \"example-box\"]],\n  template: function ExpandgroupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function ExpandgroupComponent_Template_button_click_0_listener() {\n        return ctx.changetocollapse();\n      });\n      i0.ɵɵtext(1, \"change to collapse\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \"expandgroup works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 1);\n      i0.ɵɵlistener(\"cdkDropListDropped\", function ExpandgroupComponent_Template_div_cdkDropListDropped_4_listener($event) {\n        return ctx.drop($event);\n      });\n      i0.ɵɵtemplate(5, ExpandgroupComponent_div_5_Template, 2, 1, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.task_list);\n    }\n  },\n  dependencies: [CdkDropList, NgFor, CdkDrag],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nfunction output() {\n  throw new Error('Function not implemented.');\n}","map":{"version":3,"mappings":"AAAA,SAAoBA,YAAY,QAA+B,eAAe;AAC9E,SAAqBC,WAAW,EAAEC,OAAO,EAAEC,eAAe,QAAO,wBAAwB;AACzF,SAAQC,KAAK,QAAO,iBAAiB;;;;;ICEjCC,8BAAgE;IAAAA,YAAW;IAAAA,iBAAM;;;;IAAjBA,eAAW;IAAXA,gCAAW;;;ADS/E,OAAM,MAAOC,oBAAoB;EAK/BC,gBAAgB;IACd,IAAI,CAACC,eAAe,CAACC,IAAI,CAAC,IAAI,CAAC;EACjC;EAcAC,IAAI,CAACC,KAA4B;IAC/BR,eAAe,CAAC,IAAI,CAACS,MAAM,EAAED,KAAK,CAACE,aAAa,EAAEF,KAAK,CAACG,YAAY,CAAC;EACvE;EAEAC,QAAQ;IACN,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAC,YAAoBC,YAAyB;IAAzB,iBAAY,GAAZA,YAAY;IA5BvB,cAAS,GAAY,KAAK;IACzB,oBAAe,GAAG,IAAIlB,YAAY,EAAW;IACvD,cAAS,GAAW,EAAE;IAMtB,WAAM,GAAG,CACP,gCAAgC,EAChC,mCAAmC,EACnC,mCAAmC,EACnC,yBAAyB,EACzB,qCAAqC,EACrC,iCAAiC,EACjC,iCAAiC,EACjC,8BAA8B,EAC9B,oCAAoC,CACrC;EAU+C;EAEhDgB,WAAW;IACT,IAAI,CAACE,YAAY,CAACF,WAAW,EAAE,CAACG,SAAS,CAAEC,IAAI,IAAG;MAChD,IAAI,CAACC,SAAS,GAAGD,IAAI;IACvB,CAAC,CAAC;EACJ;EAEAE,UAAU,CAACC,WAAiB;IAC1B,IAAGC,OAAO,CAAC,oCAAoCD,WAAW,CAACE,IAAI,GAAG,CAAC,EAAE;MACnE,IAAI,CAACP,YAAY,CAACI,UAAU,CAACC,WAAW,CAACG,EAAE,CAAC,CAACP,SAAS,CAAC;QACrDQ,KAAK,EAAE,MAAK,IAAI,CAACC,UAAU;OAC5B,CAAC;;EAEN;EAEAA,UAAU;IACR,IAAI,CAACZ,WAAW,EAAE;EACpB;;AA/CWV,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAuB;EAAAC;IAAAC;EAAA;EAAAC;IAAAxB;EAAA;EAAAyB;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCbjCjC,iCAAyD;MAA7BA;QAAA,OAASkC,sBAAkB;MAAA,EAAC;MAAClC,kCAAkB;MAAAA,iBAAS;MACpFA,yBAAG;MAAAA,kCAAkB;MAAAA,iBAAI;MAEzBA,8BAA0E;MAApCA;QAAA,OAAsBkC,gBAAY;MAAA,EAAC;MACrElC,qEAAiF;MACrFA,iBAAM;;;MADwCA,eAAY;MAAZA,uCAAY;;;iBDO9CJ,WAAW,EAAEG,KAAK,EAAEF,OAAO;EAAAsC;AAAA;AAoDvC,SAASC,MAAM;EACb,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;AAC9C","names":["EventEmitter","CdkDropList","CdkDrag","moveItemInArray","NgFor","i0","ExpandgroupComponent","changetocollapse","collapseeChange","emit","drop","event","movies","previousIndex","currentIndex","ngOnInit","getTaskList","constructor","task_service","subscribe","data","task_list","deleteTask","delete_task","confirm","name","id","error","reloadList","selectors","inputs","collapsee","outputs","standalone","features","decls","vars","consts","template","ctx","styles","output","Error"],"sourceRoot":"","sources":["E:\\WorkSpace\\MondayApp\\ClientApp\\src\\app\\group\\expandgroup\\expandgroup.component.ts","E:\\WorkSpace\\MondayApp\\ClientApp\\src\\app\\group\\expandgroup\\expandgroup.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport {CdkDragDrop, CdkDropList, CdkDrag, moveItemInArray} from '@angular/cdk/drag-drop';\r\nimport {NgFor} from '@angular/common';\r\nimport { Task } from 'src/app/task';\r\nimport { TaskService } from 'src/app/task.service';\r\n\r\n@Component({\r\n  selector: 'app-expandgroup',\r\n  templateUrl: './expandgroup.component.html',\r\n  styleUrls: ['./expandgroup.component.css'],\r\n  standalone: true,\r\n  imports: [CdkDropList, NgFor, CdkDrag],\r\n})\r\nexport class ExpandgroupComponent implements OnInit {\r\n  @Input() collapsee: boolean = false;\r\n  @Output() collapseeChange = new EventEmitter<boolean>();\r\n  task_list: Task[] = [];\r\n\r\n  changetocollapse() {\r\n    this.collapseeChange.emit(true);\r\n  }\r\n\r\n  movies = [\r\n    'Episode I - The Phantom Menace',\r\n    'Episode II - Attack of the Clones',\r\n    'Episode III - Revenge of the Sith',\r\n    'Episode IV - A New Hope',\r\n    'Episode V - The Empire Strikes Back',\r\n    'Episode VI - Return of the Jedi',\r\n    'Episode VII - The Force Awakens',\r\n    'Episode VIII - The Last Jedi',\r\n    'Episode IX - The Rise of Skywalker',\r\n  ];\r\n\r\n  drop(event: CdkDragDrop<string[]>) {\r\n    moveItemInArray(this.movies, event.previousIndex, event.currentIndex);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getTaskList();\r\n  }\r\n\r\n  constructor(private task_service: TaskService) {}\r\n\r\n  getTaskList(): void {\r\n    this.task_service.getTaskList().subscribe( data =>{\r\n      this.task_list = data;\r\n    })\r\n  }\r\n\r\n  deleteTask(delete_task: Task): void {\r\n    if(confirm(`Are you sure to delete this task ${delete_task.name}?`)) {\r\n      this.task_service.deleteTask(delete_task.id).subscribe({\r\n        error: () =>this.reloadList()\r\n      })\r\n    }\r\n  }\r\n\r\n  reloadList(): void {\r\n    this.getTaskList();\r\n  }\r\n\r\n}\r\nfunction output() {\r\n  throw new Error('Function not implemented.');\r\n}\r\n","<button class=\"bg-blue-500\" (click)=\"changetocollapse()\">change to collapse</button>\r\n<p>expandgroup works!</p>\r\n\r\n<div cdkDropList class=\"example-list\" (cdkDropListDropped)=\"drop($event)\">\r\n    <div class=\"example-box\" *ngFor=\"let task of task_list\" cdkDrag>{{task.id}}</div>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}