{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../task-service/task.service\";\nimport * as i2 from \"../sub-task-service/sub-task.service\";\nimport * as i3 from \"../sub-task-list-service/sub-task-list.service\";\nexport class TaskListService {\n  constructor(task_service, sub_task_service, sub_task_list_service) {\n    this.task_service = task_service;\n    this.sub_task_service = sub_task_service;\n    this.sub_task_list_service = sub_task_list_service;\n    this.task_list = [];\n    this.counter = 0;\n  }\n  ngOnInit() {\n    this.getTaskList();\n  }\n  getTaskList() {\n    this.task_service.getTaskList().subscribe(data => {\n      this.task_list = data;\n    });\n  }\n  reloadTaskList() {\n    this.getTaskList();\n    console.log(\"Đã reload danh sách!\");\n  }\n  deleteTask(delete_task) {\n    if (confirm(`Are you sure to delete this task ${delete_task.name}?`)) {\n      this.sub_task_service.deleteSubTask(delete_task.id, false).subscribe({\n        error: () => {\n          this.sub_task_list_service.getSubTaskList();\n        }\n      });\n      this.task_service.deleteTask(delete_task.id).subscribe({\n        error: () => {\n          this.reloadTaskList();\n        }\n      });\n    }\n  }\n  countTask(groupid) {\n    this.counter = 0;\n    for (let i = 0; i < this.task_list.length; i++) {\n      if (this.task_list[i].parent_task === groupid) {\n        this.counter++;\n      }\n    }\n    return this.counter;\n  }\n}\nTaskListService.ɵfac = function TaskListService_Factory(t) {\n  return new (t || TaskListService)(i0.ɵɵinject(i1.TaskService), i0.ɵɵinject(i2.SubTaskService), i0.ɵɵinject(i3.SubTaskListService));\n};\nTaskListService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TaskListService,\n  factory: TaskListService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;AASA,OAAM,MAAOA,eAAe;EAK1BC,YAAoBC,YAAyB,EAAUC,gBAAgC,EACnEC,qBAAyC;IADzC,iBAAY,GAAZF,YAAY;IAAuB,qBAAgB,GAAhBC,gBAAgB;IACnD,0BAAqB,GAArBC,qBAAqB;IAJzC,cAAS,GAAW,EAAE;IACtB,YAAO,GAAW,CAAC;EAG8C;EAEjEC,QAAQ;IACN,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAA,WAAW;IACT,IAAI,CAACJ,YAAY,CAACI,WAAW,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MAC/C,IAAI,CAACC,SAAS,GAAGD,IAAI;IACvB,CAAC,CAAC;EAEJ;EAEAE,cAAc;IACZ,IAAI,CAACJ,WAAW,EAAE;IAClBK,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;EACrC;EAEAC,UAAU,CAACC,WAAiB;IAI1B,IAAGC,OAAO,CAAC,oCAAoCD,WAAW,CAACE,IAAI,GAAG,CAAC,EAAE;MACnE,IAAI,CAACb,gBAAgB,CAACc,aAAa,CAACH,WAAW,CAACI,EAAE,EAAE,KAAK,CAAC,CAACX,SAAS,CAAC;QACnEY,KAAK,EAAE,MAAK;UACV,IAAI,CAACf,qBAAqB,CAACgB,cAAc,EAAE;QAC7C;OACD,CAAC;MACF,IAAI,CAAClB,YAAY,CAACW,UAAU,CAACC,WAAW,CAACI,EAAE,CAAC,CAACX,SAAS,CAAC;QACrDY,KAAK,EAAE,MAAK;UACV,IAAI,CAACT,cAAc,EAAE;QACvB;OACD,CAAC;;EAEN;EAEAW,SAAS,CAACC,OAAe;IACvB,IAAI,CAACC,OAAO,GAAG,CAAC;IAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACf,SAAS,CAACgB,MAAM,EAAED,CAAC,EAAE,EAAE;MAC9C,IAAI,IAAI,CAACf,SAAS,CAACe,CAAC,CAAC,CAACE,WAAW,KAAKJ,OAAO,EAAE;QAC7C,IAAI,CAACC,OAAO,EAAE;;;IAGlB,OAAO,IAAI,CAACA,OAAO;EACrB;;AAlDWvB,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAA2B,SAAf3B,eAAe;EAAA4B,YAFd;AAAM","names":["TaskListService","constructor","task_service","sub_task_service","sub_task_list_service","ngOnInit","getTaskList","subscribe","data","task_list","reloadTaskList","console","log","deleteTask","delete_task","confirm","name","deleteSubTask","id","error","getSubTaskList","countTask","groupid","counter","i","length","parent_task","factory","providedIn"],"sourceRoot":"","sources":["E:\\.NetCoreApp\\MondayApp\\ClientApp\\src\\services\\task-list-service\\task-list.service.ts"],"sourcesContent":["import { Injectable, Component, OnInit } from '@angular/core';\r\nimport { TaskService } from '../task-service/task.service';\r\nimport { Task } from 'src/app/task';\r\nimport { SubTaskService } from '../sub-task-service/sub-task.service';\r\nimport { SubTaskListService } from '../sub-task-list-service/sub-task-list.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TaskListService implements OnInit {\r\n\r\n  task_list: Task[] = [];\r\n  counter: number = 0;\r\n\r\n  constructor(private task_service: TaskService, private sub_task_service: SubTaskService,\r\n              private sub_task_list_service: SubTaskListService) { } \r\n\r\n  ngOnInit(): void {\r\n    this.getTaskList();\r\n  }\r\n\r\n  getTaskList(): void {\r\n    this.task_service.getTaskList().subscribe(data => {\r\n      this.task_list = data;\r\n    })\r\n    \r\n  }\r\n\r\n  reloadTaskList(): void {\r\n    this.getTaskList();\r\n    console.log(\"Đã reload danh sách!\");\r\n  }\r\n\r\n  deleteTask(delete_task: Task): void {\r\n\r\n\r\n\r\n    if(confirm(`Are you sure to delete this task ${delete_task.name}?`)) {\r\n      this.sub_task_service.deleteSubTask(delete_task.id, false).subscribe({\r\n        error: () => {\r\n          this.sub_task_list_service.getSubTaskList();\r\n        }\r\n      });\r\n      this.task_service.deleteTask(delete_task.id).subscribe({\r\n        error: () => {\r\n          this.reloadTaskList();\r\n        }\r\n      });\r\n    }    \r\n  }\r\n\r\n  countTask(groupid: string): number {\r\n    this.counter = 0;\r\n    for (let i = 0; i < this.task_list.length; i++) {\r\n      if (this.task_list[i].parent_task === groupid) {\r\n        this.counter++;\r\n      }\r\n    }\r\n    return this.counter;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}