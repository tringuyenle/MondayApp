{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\nimport { NgIf } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/material/form-field\";\nimport * as i3 from \"@angular/material/input\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/button\";\nlet CollapsegroupComponent = class CollapsegroupComponent {\n  constructor(taskListService, dialog) {\n    this.taskListService = taskListService;\n    this.dialog = dialog;\n    this.collapsec = false;\n    this.collapsecChange = new EventEmitter();\n    this.animal = \"\";\n    this.name = \"\";\n  }\n  ngOnInit() {\n    this.taskListService.getTaskList();\n  }\n  changetoexpand() {\n    this.collapsecChange.emit(false);\n  }\n  openDialog() {\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\n      data: {\n        name: this.name,\n        animal: this.animal\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      this.animal = result;\n    });\n  }\n};\n__decorate([Input()], CollapsegroupComponent.prototype, \"collapsec\", void 0);\n__decorate([Output()], CollapsegroupComponent.prototype, \"collapsecChange\", void 0);\nCollapsegroupComponent = __decorate([Component({\n  selector: 'app-collapsegroup',\n  templateUrl: './collapsegroup.component.html',\n  styleUrls: ['./collapsegroup.component.css'],\n  imports: [MatFormFieldModule, MatInputModule, FormsModule, MatButtonModule, NgIf, MatDialogModule]\n})], CollapsegroupComponent);\nexport { CollapsegroupComponent };\nexport class DialogOverviewExampleDialog {\n  constructor(dialogRef, data) {\n    this.dialogRef = dialogRef;\n    this.data = data;\n  }\n  onNoClick() {\n    this.dialogRef.close();\n  }\n}\nDialogOverviewExampleDialog.ɵfac = function DialogOverviewExampleDialog_Factory(t) {\n  return new (t || DialogOverviewExampleDialog)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n};\nDialogOverviewExampleDialog.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DialogOverviewExampleDialog,\n  selectors: [[\"dialog-overview-example-dialog\"]],\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 14,\n  vars: 3,\n  consts: [[\"mat-dialog-title\", \"\"], [\"mat-dialog-content\", \"\"], [\"matInput\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-dialog-actions\", \"\"], [\"mat-button\", \"\", 3, \"click\"], [\"mat-button\", \"\", \"cdkFocusInitial\", \"\", 3, \"mat-dialog-close\"]],\n  template: function DialogOverviewExampleDialog_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"p\");\n      i0.ɵɵtext(4, \"What's your favorite animal?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"mat-form-field\")(6, \"mat-label\");\n      i0.ɵɵtext(7, \"Favorite Animal\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function DialogOverviewExampleDialog_Template_input_ngModelChange_8_listener($event) {\n        return ctx.data.animal = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(9, \"div\", 3)(10, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function DialogOverviewExampleDialog_Template_button_click_10_listener() {\n        return ctx.onNoClick();\n      });\n      i0.ɵɵtext(11, \"No Thanks\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"button\", 5);\n      i0.ɵɵtext(13, \"Ok\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"Hi \", ctx.data.name, \"\");\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.data.animal);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"mat-dialog-close\", ctx.data.animal);\n    }\n  },\n  dependencies: [MatDialogModule, i1.MatDialogClose, i1.MatDialogTitle, i1.MatDialogContent, i1.MatDialogActions, MatFormFieldModule, i2.MatFormField, i2.MatLabel, MatInputModule, i3.MatInput, FormsModule, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, MatButtonModule, i5.MatButton],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,YAAY,EAAEC,KAAK,EAAUC,MAAM,QAAgB,eAAe;AAEtF,SAAmBC,eAAe,EAAgBC,eAAe,QAAO,0BAA0B;AAClG,SAAQC,IAAI,QAAO,iBAAiB;AACpC,SAAQC,eAAe,QAAO,0BAA0B;AACxD,SAAQC,WAAW,QAAO,gBAAgB;AAC1C,SAAQC,cAAc,QAAO,yBAAyB;AACtD,SAAQC,kBAAkB,QAAO,8BAA8B;;;;;;;AAqBxD,IAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAMjCC,YAAoBC,eAAgC,EAASC,MAAiB;IAA1D,oBAAe,GAAfD,eAAe;IAA0B,WAAM,GAANC,MAAM;IAL1D,cAAS,GAAY,KAAK;IACzB,oBAAe,GAAG,IAAIb,YAAY,EAAW;IACvD,WAAM,GAAW,EAAE;IACnB,SAAI,GAAW,EAAE;EAGjB;EAEAc,QAAQ;IACN,IAAI,CAACF,eAAe,CAACG,WAAW,EAAE;EACpC;EAEAC,cAAc;IACZ,IAAI,CAACC,eAAe,CAACC,IAAI,CAAC,KAAK,CAAC;EAClC;EAEAC,UAAU;IACR,MAAMC,SAAS,GAAG,IAAI,CAACP,MAAM,CAACQ,IAAI,CAACC,2BAA2B,EAAE;MAC9DC,IAAI,EAAE;QAACC,IAAI,EAAE,IAAI,CAACA,IAAI;QAAEC,MAAM,EAAE,IAAI,CAACA;MAAM;KAC5C,CAAC;IAEFL,SAAS,CAACM,WAAW,EAAE,CAACC,SAAS,CAACC,MAAM,IAAG;MACzCC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACpC,IAAI,CAACL,MAAM,GAAGG,MAAM;IACtB,CAAC,CAAC;EACJ;CACD;AA1BUG,YAAR9B,KAAK,EAAE,yDAA4B;AAC1B8B,YAAT7B,MAAM,EAAE,+DAA+C;AAF7CQ,sBAAsB,eAdlCX,SAAS,CAAC;EACTiC,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B,CAAC;EAE5CC,OAAO,EAAE,CACP1B,kBAAkB,EAClBD,cAAc,EACdD,WAAW,EACXD,eAAe,EACfD,IAAI,EACJD,eAAe;CAElB,CAAC,GACWM,sBAAsB,CA2BlC;SA3BYA,sBAAsB;AAmCnC,OAAM,MAAOY,2BAA2B;EACtCX,YACSS,SAAoD,EAC3BG,IAAgB;IADzC,cAAS,GAATH,SAAS;IACgB,SAAI,GAAJG,IAAI;EACnC;EAEHa,SAAS;IACP,IAAI,CAAChB,SAAS,CAACiB,KAAK,EAAE;EACxB;;AARWf,2BAA2B;mBAA3BA,2BAA2B,8DAG5BnB,eAAe;AAAA;AAHdmB,2BAA2B;QAA3BA,2BAA2B;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MC/DxCC,6BAAqB;MAAAA,YAAgB;MAAAA,iBAAK;MAC1CA,8BAAwB;MACnBA,4CAA4B;MAAAA,iBAAI;MACnCA,sCAAgB;MACHA,+BAAe;MAAAA,iBAAY;MACtCA,gCAA0C;MAA1BA;QAAA;MAAA,EAAyB;MAAzCA,iBAA0C;MAG9CA,8BAAwB;MACHA;QAAA,OAASC,eAAW;MAAA,EAAC;MAACD,0BAAS;MAAAA,iBAAS;MAC3DA,kCAAoE;MAAAA,mBAAE;MAAAA,iBAAS;;;MAV5DA,eAAgB;MAAhBA,+CAAgB;MAKjBA,eAAyB;MAAzBA,yCAAyB;MAKxBA,eAAgC;MAAhCA,kDAAgC;;;iBDmDzCzC,eAAe,kFAAEK,kBAAkB,gCAAED,cAAc,eAAED,WAAW,2DAAED,eAAe;EAAAyC;AAAA","names":["Component","EventEmitter","Input","Output","MAT_DIALOG_DATA","MatDialogModule","NgIf","MatButtonModule","FormsModule","MatInputModule","MatFormFieldModule","CollapsegroupComponent","constructor","taskListService","dialog","ngOnInit","getTaskList","changetoexpand","collapsecChange","emit","openDialog","dialogRef","open","DialogOverviewExampleDialog","data","name","animal","afterClosed","subscribe","result","console","log","__decorate","selector","templateUrl","styleUrls","imports","onNoClick","close","selectors","standalone","features","decls","vars","consts","template","i0","ctx","encapsulation"],"sourceRoot":"","sources":["E:\\WorkSpace\\MondayApp\\ClientApp\\src\\app\\group\\collapsegroup\\collapsegroup.component.ts","E:\\WorkSpace\\MondayApp\\ClientApp\\src\\app\\group\\collapsegroup\\dialog-overview-example-dialog.html"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output, Inject } from '@angular/core';\r\nimport { TaskListService } from 'src/services/task-list-service/task-list.service';\r\nimport {MatDialog, MAT_DIALOG_DATA, MatDialogRef, MatDialogModule} from '@angular/material/dialog';\r\nimport {NgIf} from '@angular/common';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\n\r\nexport interface DialogData {\r\n  animal: string;\r\n  name: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-collapsegroup',\r\n  templateUrl: './collapsegroup.component.html',\r\n  styleUrls: ['./collapsegroup.component.css'],\r\n\r\n  imports: [\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    FormsModule,\r\n    MatButtonModule,\r\n    NgIf,\r\n    MatDialogModule,\r\n  ],\r\n})\r\nexport class CollapsegroupComponent implements OnInit {\r\n  @Input() collapsec: boolean = false;\r\n  @Output() collapsecChange = new EventEmitter<boolean>();\r\n  animal: string = \"\";\r\n  name: string = \"\";\r\n\r\n  constructor (public taskListService: TaskListService, public dialog: MatDialog) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.taskListService.getTaskList();\r\n  }\r\n\r\n  changetoexpand() {\r\n    this.collapsecChange.emit(false);\r\n  }\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\r\n      data: {name: this.name, animal: this.animal},\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      this.animal = result;\r\n    });\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'dialog-overview-example-dialog',\r\n  templateUrl: 'dialog-overview-example-dialog.html',\r\n  standalone: true,\r\n  imports: [MatDialogModule, MatFormFieldModule, MatInputModule, FormsModule, MatButtonModule],\r\n})\r\nexport class DialogOverviewExampleDialog {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\r\n  ) {}\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}","<h1 mat-dialog-title>Hi {{data.name}}</h1>\r\n<div mat-dialog-content>\r\n  <p>What's your favorite animal?</p>\r\n  <mat-form-field>\r\n    <mat-label>Favorite Animal</mat-label>\r\n    <input matInput [(ngModel)]=\"data.animal\">\r\n  </mat-form-field>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button (click)=\"onNoClick()\">No Thanks</button>\r\n  <button mat-button [mat-dialog-close]=\"data.animal\" cdkFocusInitial>Ok</button>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}